{"id":"node_modules/@snap/camera-kit/lib/dependency-injection/Injectable.js","dependencies":[{"name":"/Users/eneto/Lab/snap-rca-camkit-workshop/node_modules/@snap/camera-kit/lib/dependency-injection/Injectable.js.map","includedInParent":true,"mtime":1710948721197},{"name":"/Users/eneto/Lab/snap-rca-camkit-workshop/package.json","includedInParent":true,"mtime":1710952305120},{"name":"/Users/eneto/Lab/snap-rca-camkit-workshop/node_modules/@snap/camera-kit/package.json","includedInParent":true,"mtime":1710948721086}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConcatInjectable = ConcatInjectable;\nexports.Injectable = Injectable;\nfunction Injectable(token, dependenciesOrFn, maybeFn) {\n  const dependencies = Array.isArray(dependenciesOrFn) ? dependenciesOrFn : [];\n  const fn = typeof dependenciesOrFn === \"function\" ? dependenciesOrFn : maybeFn;\n  if (!fn) {\n    throw new TypeError(\"[Injectable] Received invalid arguments. The factory function must be either the second \" + \"or third argument.\");\n  }\n  if (fn.length !== dependencies.length) {\n    throw new TypeError(\"[Injectable] Function arity does not match the number of dependencies. Function has arity \" + `${fn.length}, but ${dependencies.length} dependencies were specified.` + `\\nDependencies: ${JSON.stringify(dependencies)}`);\n  }\n  const factory = (...args) => fn(...args);\n  factory.token = token;\n  factory.dependencies = dependencies;\n  return factory;\n}\nfunction ConcatInjectable(token, dependenciesOrFn, maybeFn) {\n  const dependencies = Array.isArray(dependenciesOrFn) ? dependenciesOrFn : [];\n  const fn = typeof dependenciesOrFn === \"function\" ? dependenciesOrFn : maybeFn;\n  if (!fn) {\n    throw new TypeError(\"[ConcatInjectable] Received invalid arguments. The factory function must be either the second \" + \"or third argument.\");\n  }\n  if (fn.length !== dependencies.length) {\n    throw new TypeError(\"[Injectable] Function arity does not match the number of dependencies. Function has arity \" + `${fn.length}, but ${dependencies.length} dependencies were specified.` + `\\nDependencies: ${JSON.stringify(dependencies)}`);\n  }\n  const factory = (array, ...args) => {\n    return array.concat(fn(...args));\n  };\n  factory.token = token;\n  factory.dependencies = [token, ...dependencies];\n  return factory;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":8,"column":0}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":59,"column":16},"generated":{"line":8,"column":9}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":59,"column":26},"generated":{"line":8,"column":19}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":60,"column":4},"generated":{"line":8,"column":20}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":60,"column":17},"generated":{"line":8,"column":25}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":61,"column":4},"generated":{"line":8,"column":27}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":61,"column":54},"generated":{"line":8,"column":43}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":8,"column":45}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":62,"column":37},"generated":{"line":8,"column":52}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":62,"column":37},"generated":{"line":8,"column":54}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":9,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":10},"generated":{"line":9,"column":8}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":22},"generated":{"line":9,"column":20}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":35},"generated":{"line":9,"column":23}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":40},"generated":{"line":9,"column":28}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":41},"generated":{"line":9,"column":29}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":48},"generated":{"line":9,"column":36}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":49},"generated":{"line":9,"column":37}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":65},"generated":{"line":9,"column":53}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":66},"generated":{"line":9,"column":54}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":69},"generated":{"line":9,"column":57}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":85},"generated":{"line":9,"column":73}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":88},"generated":{"line":9,"column":76}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":64,"column":90},"generated":{"line":9,"column":78}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":10,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":65,"column":10},"generated":{"line":10,"column":8}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":65,"column":12},"generated":{"line":10,"column":10}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":65,"column":15},"generated":{"line":10,"column":13}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":65,"column":22},"generated":{"line":10,"column":20}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":65,"column":38},"generated":{"line":10,"column":36}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":65,"column":43},"generated":{"line":10,"column":41}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":65,"column":53},"generated":{"line":10,"column":51}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":65,"column":56},"generated":{"line":10,"column":54}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":65,"column":72},"generated":{"line":10,"column":70}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":65,"column":75},"generated":{"line":10,"column":73}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":65,"column":82},"generated":{"line":10,"column":80}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":67,"column":4},"generated":{"line":11,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":67,"column":8},"generated":{"line":11,"column":6}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":67,"column":9},"generated":{"line":11,"column":7}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":67,"column":11},"generated":{"line":11,"column":9}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":67,"column":13},"generated":{"line":11,"column":11}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":68,"column":8},"generated":{"line":12,"column":4}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":68,"column":14},"generated":{"line":12,"column":10}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":68,"column":18},"generated":{"line":12,"column":14}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":68,"column":27},"generated":{"line":12,"column":23}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":69,"column":12},"generated":{"line":12,"column":24}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":69,"column":102},"generated":{"line":12,"column":114}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":70,"column":16},"generated":{"line":12,"column":117}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":70,"column":36},"generated":{"line":12,"column":137}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":71,"column":9},"generated":{"line":12,"column":138}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":74,"column":4},"generated":{"line":14,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":74,"column":8},"generated":{"line":14,"column":6}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":74,"column":10},"generated":{"line":14,"column":8}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":74,"column":11},"generated":{"line":14,"column":9}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":74,"column":17},"generated":{"line":14,"column":15}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":74,"column":22},"generated":{"line":14,"column":20}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":74,"column":34},"generated":{"line":14,"column":32}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":74,"column":35},"generated":{"line":14,"column":33}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":74,"column":41},"generated":{"line":14,"column":39}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":14,"column":41}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":75,"column":8},"generated":{"line":15,"column":4}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":75,"column":14},"generated":{"line":15,"column":10}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":75,"column":18},"generated":{"line":15,"column":14}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":75,"column":27},"generated":{"line":15,"column":23}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":76,"column":12},"generated":{"line":15,"column":24}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":76,"column":104},"generated":{"line":15,"column":116}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":77,"column":16},"generated":{"line":15,"column":119}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":77,"column":19},"generated":{"line":15,"column":122}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":77,"column":21},"generated":{"line":15,"column":124}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":77,"column":22},"generated":{"line":15,"column":125}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":77,"column":28},"generated":{"line":15,"column":131}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":77,"column":37},"generated":{"line":15,"column":140}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":77,"column":49},"generated":{"line":15,"column":152}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":77,"column":50},"generated":{"line":15,"column":153}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":77,"column":56},"generated":{"line":15,"column":159}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":77,"column":87},"generated":{"line":15,"column":190}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":78,"column":16},"generated":{"line":15,"column":193}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":78,"column":35},"generated":{"line":15,"column":212}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":78,"column":39},"generated":{"line":15,"column":216}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":78,"column":40},"generated":{"line":15,"column":217}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":78,"column":49},"generated":{"line":15,"column":226}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":78,"column":50},"generated":{"line":15,"column":227}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":78,"column":62},"generated":{"line":15,"column":239}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":78,"column":63},"generated":{"line":15,"column":240}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":78,"column":65},"generated":{"line":15,"column":242}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":79,"column":9},"generated":{"line":15,"column":243}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":82,"column":4},"generated":{"line":17,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":82,"column":10},"generated":{"line":17,"column":8}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":82,"column":17},"generated":{"line":17,"column":15}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":82,"column":20},"generated":{"line":17,"column":18}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":82,"column":21},"generated":{"line":17,"column":19}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":82,"column":24},"generated":{"line":17,"column":22}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":82,"column":35},"generated":{"line":17,"column":26}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":82,"column":40},"generated":{"line":17,"column":31}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":82,"column":42},"generated":{"line":17,"column":33}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":82,"column":43},"generated":{"line":17,"column":34}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":82,"column":46},"generated":{"line":17,"column":37}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":82,"column":50},"generated":{"line":17,"column":41}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":82,"column":51},"generated":{"line":17,"column":42}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":83,"column":4},"generated":{"line":18,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":83,"column":11},"generated":{"line":18,"column":9}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":83,"column":12},"generated":{"line":18,"column":10}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":83,"column":17},"generated":{"line":18,"column":15}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":83,"column":20},"generated":{"line":18,"column":18}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":83,"column":25},"generated":{"line":18,"column":23}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":84,"column":4},"generated":{"line":19,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":84,"column":11},"generated":{"line":19,"column":9}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":84,"column":12},"generated":{"line":19,"column":10}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":84,"column":24},"generated":{"line":19,"column":22}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":84,"column":27},"generated":{"line":19,"column":25}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":84,"column":39},"generated":{"line":19,"column":37}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":85,"column":4},"generated":{"line":20,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":85,"column":11},"generated":{"line":20,"column":9}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":85,"column":18},"generated":{"line":20,"column":16}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":21,"column":0}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":157,"column":6},"generated":{"line":22,"column":0}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":157,"column":16},"generated":{"line":22,"column":9}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":157,"column":32},"generated":{"line":22,"column":25}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":158,"column":4},"generated":{"line":22,"column":26}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":158,"column":17},"generated":{"line":22,"column":31}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":159,"column":4},"generated":{"line":22,"column":33}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":159,"column":54},"generated":{"line":22,"column":49}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":160,"column":4},"generated":{"line":22,"column":51}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":160,"column":37},"generated":{"line":22,"column":58}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":160,"column":37},"generated":{"line":22,"column":60}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":4},"generated":{"line":23,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":10},"generated":{"line":23,"column":8}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":22},"generated":{"line":23,"column":20}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":35},"generated":{"line":23,"column":23}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":40},"generated":{"line":23,"column":28}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":41},"generated":{"line":23,"column":29}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":48},"generated":{"line":23,"column":36}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":49},"generated":{"line":23,"column":37}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":65},"generated":{"line":23,"column":53}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":66},"generated":{"line":23,"column":54}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":69},"generated":{"line":23,"column":57}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":85},"generated":{"line":23,"column":73}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":88},"generated":{"line":23,"column":76}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":162,"column":90},"generated":{"line":23,"column":78}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":163,"column":4},"generated":{"line":24,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":163,"column":10},"generated":{"line":24,"column":8}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":163,"column":12},"generated":{"line":24,"column":10}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":163,"column":15},"generated":{"line":24,"column":13}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":163,"column":22},"generated":{"line":24,"column":20}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":163,"column":38},"generated":{"line":24,"column":36}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":163,"column":43},"generated":{"line":24,"column":41}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":163,"column":53},"generated":{"line":24,"column":51}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":163,"column":56},"generated":{"line":24,"column":54}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":163,"column":72},"generated":{"line":24,"column":70}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":163,"column":75},"generated":{"line":24,"column":73}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":163,"column":82},"generated":{"line":24,"column":80}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":165,"column":4},"generated":{"line":25,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":165,"column":8},"generated":{"line":25,"column":6}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":165,"column":9},"generated":{"line":25,"column":7}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":165,"column":11},"generated":{"line":25,"column":9}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":165,"column":13},"generated":{"line":25,"column":11}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":166,"column":8},"generated":{"line":26,"column":4}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":166,"column":14},"generated":{"line":26,"column":10}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":166,"column":18},"generated":{"line":26,"column":14}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":166,"column":27},"generated":{"line":26,"column":23}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":167,"column":12},"generated":{"line":26,"column":24}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":167,"column":108},"generated":{"line":26,"column":120}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":168,"column":16},"generated":{"line":26,"column":123}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":168,"column":36},"generated":{"line":26,"column":143}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":169,"column":9},"generated":{"line":26,"column":144}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":172,"column":4},"generated":{"line":28,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":172,"column":8},"generated":{"line":28,"column":6}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":172,"column":10},"generated":{"line":28,"column":8}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":172,"column":11},"generated":{"line":28,"column":9}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":172,"column":17},"generated":{"line":28,"column":15}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":172,"column":22},"generated":{"line":28,"column":20}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":172,"column":34},"generated":{"line":28,"column":32}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":172,"column":35},"generated":{"line":28,"column":33}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":172,"column":41},"generated":{"line":28,"column":39}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":172,"column":43},"generated":{"line":28,"column":41}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":173,"column":8},"generated":{"line":29,"column":4}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":173,"column":14},"generated":{"line":29,"column":10}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":173,"column":18},"generated":{"line":29,"column":14}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":173,"column":27},"generated":{"line":29,"column":23}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":174,"column":12},"generated":{"line":29,"column":24}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":174,"column":104},"generated":{"line":29,"column":116}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":175,"column":16},"generated":{"line":29,"column":119}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":175,"column":19},"generated":{"line":29,"column":122}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":175,"column":21},"generated":{"line":29,"column":124}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":175,"column":22},"generated":{"line":29,"column":125}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":175,"column":28},"generated":{"line":29,"column":131}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":175,"column":37},"generated":{"line":29,"column":140}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":175,"column":49},"generated":{"line":29,"column":152}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":175,"column":50},"generated":{"line":29,"column":153}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":175,"column":56},"generated":{"line":29,"column":159}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":175,"column":87},"generated":{"line":29,"column":190}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":176,"column":16},"generated":{"line":29,"column":193}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":176,"column":35},"generated":{"line":29,"column":212}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":176,"column":39},"generated":{"line":29,"column":216}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":176,"column":40},"generated":{"line":29,"column":217}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":176,"column":49},"generated":{"line":29,"column":226}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":176,"column":50},"generated":{"line":29,"column":227}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":176,"column":62},"generated":{"line":29,"column":239}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":176,"column":63},"generated":{"line":29,"column":240}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":176,"column":65},"generated":{"line":29,"column":242}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":177,"column":9},"generated":{"line":29,"column":243}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":180,"column":4},"generated":{"line":31,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":180,"column":10},"generated":{"line":31,"column":8}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":180,"column":17},"generated":{"line":31,"column":15}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":180,"column":20},"generated":{"line":31,"column":18}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":180,"column":21},"generated":{"line":31,"column":19}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":180,"column":33},"generated":{"line":31,"column":24}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":180,"column":35},"generated":{"line":31,"column":26}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":180,"column":38},"generated":{"line":31,"column":29}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":180,"column":49},"generated":{"line":31,"column":33}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":180,"column":53},"generated":{"line":31,"column":38}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":181,"column":8},"generated":{"line":32,"column":4}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":181,"column":15},"generated":{"line":32,"column":11}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":181,"column":20},"generated":{"line":32,"column":16}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":181,"column":21},"generated":{"line":32,"column":17}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":181,"column":27},"generated":{"line":32,"column":23}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":181,"column":28},"generated":{"line":32,"column":24}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":181,"column":30},"generated":{"line":32,"column":26}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":181,"column":31},"generated":{"line":32,"column":27}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":181,"column":34},"generated":{"line":32,"column":30}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":181,"column":38},"generated":{"line":32,"column":34}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":181,"column":39},"generated":{"line":32,"column":35}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":181,"column":40},"generated":{"line":32,"column":36}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":182,"column":4},"generated":{"line":33,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":182,"column":5},"generated":{"line":33,"column":3}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":183,"column":4},"generated":{"line":34,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":183,"column":11},"generated":{"line":34,"column":9}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":183,"column":12},"generated":{"line":34,"column":10}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":183,"column":17},"generated":{"line":34,"column":15}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":183,"column":20},"generated":{"line":34,"column":18}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":183,"column":25},"generated":{"line":34,"column":23}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":184,"column":4},"generated":{"line":35,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":184,"column":11},"generated":{"line":35,"column":9}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":184,"column":12},"generated":{"line":35,"column":10}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":184,"column":24},"generated":{"line":35,"column":22}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":184,"column":27},"generated":{"line":35,"column":25}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":184,"column":28},"generated":{"line":35,"column":26}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":184,"column":33},"generated":{"line":35,"column":31}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":184,"column":35},"generated":{"line":35,"column":33}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":184,"column":38},"generated":{"line":35,"column":36}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":184,"column":50},"generated":{"line":35,"column":48}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":184,"column":51},"generated":{"line":35,"column":49}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":185,"column":4},"generated":{"line":36,"column":2}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":185,"column":11},"generated":{"line":36,"column":9}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":185,"column":18},"generated":{"line":36,"column":16}},{"source":"../../src/dependency-injection/Injectable.ts","name":null,"original":{"line":186,"column":0},"generated":{"line":37,"column":0}}],"sources":{"../../src/dependency-injection/Injectable.ts":"import { InjectableFunction, ServicesFromTokenizedParams } from \"./types\";\n\n/**\n * Create an Injectable factory function with no dependencies (i.e. the factory function has no arguments).\n *\n * Ex:\n * ```ts\n * const createMyService = Injectable(\n *   'MyService',\n *   () => { return ... },\n * )\n * ```\n *\n * @param token A unique string Token which will correspond to the created Service.\n * @param fn A function with no arguments which returns the Service.\n */\nexport function Injectable<Token extends string, Service>(\n    token: Token,\n    fn: () => Service\n): InjectableFunction<any, [], Token, Service>;\n\n/**\n * Create an Injectable factory function with dependencies (i.e. the factory function has arguments).\n *\n * **Note:** the list of dependencies must contain only string literals or string consts.\n *\n * Ex:\n * ```ts\n * const DependencyB = 'DependencyB'\n * const createMyService = Injectable(\n *   'MyService',\n *   ['DependencyA', DependencyB],\n *   (a: A, b: B) => { return ... },\n * )\n * ```\n *\n * @param token A unique string Token which will correspond to the created Service.\n * @param dependencies A *readonly* list of Tokens corresponding to dependencies (i.e. arguments to the Factory), which\n * will be resolved by the Container to which this Injectable is provided.\n * @param fn A function with arguments matching in type and length to the given list of dependencies. When called, it\n * must return the Service.\n */\nexport function Injectable<\n    Token extends string,\n    const Tokens extends readonly string[],\n    Params extends readonly any[],\n    Service\n>(\n    token: Token,\n    dependencies: Tokens,\n    // The function arity (number of arguments) must match the number of dependencies specified – if they don't, we'll\n    // force a compiler error by saying the arguments should be `void[]`. We'll also throw at runtime, so the return\n    // type will be `never`.\n    fn: (...args: Tokens[\"length\"] extends Params[\"length\"] ? Params : void[]) => Service\n): Tokens[\"length\"] extends Params[\"length\"]\n    ? InjectableFunction<ServicesFromTokenizedParams<Tokens, Params>, Tokens, Token, Service>\n    : never;\n\nexport function Injectable(\n    token: string,\n    dependenciesOrFn?: readonly string[] | (() => any),\n    maybeFn?: (...args: any[]) => any\n): InjectableFunction<any, readonly string[], string, any> {\n    const dependencies: string[] = Array.isArray(dependenciesOrFn) ? dependenciesOrFn : [];\n    const fn = typeof dependenciesOrFn === \"function\" ? dependenciesOrFn : maybeFn;\n\n    if (!fn) {\n        throw new TypeError(\n            \"[Injectable] Received invalid arguments. The factory function must be either the second \" +\n                \"or third argument.\"\n        );\n    }\n\n    if (fn.length !== dependencies.length) {\n        throw new TypeError(\n            \"[Injectable] Function arity does not match the number of dependencies. Function has arity \" +\n                `${fn.length}, but ${dependencies.length} dependencies were specified.` +\n                `\\nDependencies: ${JSON.stringify(dependencies)}`\n        );\n    }\n\n    const factory = (...args: any[]) => fn(...args);\n    factory.token = token;\n    factory.dependencies = dependencies;\n    return factory;\n}\n\n/**\n * Create an Injectable factory function without dependencies (i.e. the factory function has no arguments) that appends\n * a Service onto an existing array of Services of the same type.\n *\n * Ex:\n * ```ts\n * import { myServiceFactory, MyService } from './my-service'\n *\n * const createMyService = ConcatInjectable(\n *   myServiceFactory.token,\n *   (): MyService => { return ... },\n * )\n *\n * // Consumers then do:\n * const myConsumingServiceFactory = Injectable(\n *   'myConsumingService',\n *   [ myServiceFactory.token ],\n *   (myServices: MyService[]) => { return ... }\n * )\n * ```\n *\n * @param token A string Token identifying an existing Service that has an Array type, to which will be appended the\n * Service created by this factory function.\n * @param fn A function with no arguments which returns the Service.\n */\nexport function ConcatInjectable<Token extends string, Service>(\n    token: Token,\n    fn: () => Service\n): InjectableFunction<{ [T in keyof Token]: Service[] }, [], Token, Service[]>;\n\n/**\n * Create an Injectable factory function with dependencies (i.e. the factory function has arguments) that appends\n * a Service onto an existing array of Services of the same type.\n *\n * Ex:\n * ```ts\n * import { myServiceFactory, MyService } from './my-service'\n *\n * const createMyService = ConcatInjectable(\n *   myServiceFactory.token,\n *   ['DependencyA', 'DependencyB'],\n *   (a: A, b: B): MyService => { return ... },\n * )\n *\n * // Consumers then do:\n * const myConsumingServiceFactory = Injectable(\n *   'myConsumingService',\n *   [ myServiceFactory.token ],\n *   (myServices: MyService[]) => { return ... }\n * )\n * ```\n *\n * @param token A string Token identifying an existing Service that has an Array type, to which will be appended the\n * Service created by this factory function.\n * @param dependencies A *readonly* list of Tokens corresponding to dependencies (i.e. arguments to the Factory), which\n * will be resolved by the Container to which this Injectable is provided.\n * @param fn A function with no arguments which returns the Service.\n */\nexport function ConcatInjectable<\n    Token extends string,\n    const Tokens extends readonly string[],\n    Params extends readonly any[],\n    Service\n>(\n    token: Token,\n    dependencies: Tokens,\n    fn: (...args: Tokens[\"length\"] extends Params[\"length\"] ? Params : void[]) => Service\n): InjectableFunction<ServicesFromTokenizedParams<Tokens, Params>, Tokens, Token, Service[]>;\n\nexport function ConcatInjectable(\n    token: string,\n    dependenciesOrFn?: readonly string[] | (() => any),\n    maybeFn?: (...args: any[]) => any\n): InjectableFunction<any, readonly string[], string, any[]> {\n    const dependencies: string[] = Array.isArray(dependenciesOrFn) ? dependenciesOrFn : [];\n    const fn = typeof dependenciesOrFn === \"function\" ? dependenciesOrFn : maybeFn;\n\n    if (!fn) {\n        throw new TypeError(\n            \"[ConcatInjectable] Received invalid arguments. The factory function must be either the second \" +\n                \"or third argument.\"\n        );\n    }\n\n    if (fn.length !== dependencies.length) {\n        throw new TypeError(\n            \"[Injectable] Function arity does not match the number of dependencies. Function has arity \" +\n                `${fn.length}, but ${dependencies.length} dependencies were specified.` +\n                `\\nDependencies: ${JSON.stringify(dependencies)}`\n        );\n    }\n\n    const factory = (array: any[], ...args: any[]) => {\n        return array.concat(fn(...args));\n    };\n    factory.token = token;\n    factory.dependencies = [token, ...dependencies];\n    return factory;\n}\n"},"lineCount":null}},"error":null,"hash":"c78f9b8bddb2d0763a46d3c114fc40b3","cacheData":{"env":{}}}