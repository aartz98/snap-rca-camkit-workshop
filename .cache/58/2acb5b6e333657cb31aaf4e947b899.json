{"id":"node_modules/@snap/camera-kit/lib/logger/logEntries.js","dependencies":[{"name":"/Users/eneto/Lab/snap-rca-camkit-workshop/node_modules/@snap/camera-kit/lib/logger/logEntries.js.map","includedInParent":true,"mtime":1710948721244},{"name":"/Users/eneto/Lab/snap-rca-camkit-workshop/package.json","includedInParent":true,"mtime":1710952305120},{"name":"/Users/eneto/Lab/snap-rca-camkit-workshop/node_modules/@snap/camera-kit/package.json","includedInParent":true,"mtime":1710948721086},{"name":"../dependency-injection/Injectable","loc":{"line":1,"column":27,"index":27},"parent":"/Users/eneto/Lab/snap-rca-camkit-workshop/node_modules/@snap/camera-kit/lib/logger/logEntries.js","resolved":"/Users/eneto/Lab/snap-rca-camkit-workshop/node_modules/@snap/camera-kit/lib/dependency-injection/Injectable.js"},{"name":"./logger","loc":{"line":2,"column":28,"index":93},"parent":"/Users/eneto/Lab/snap-rca-camkit-workshop/node_modules/@snap/camera-kit/lib/logger/logEntries.js","resolved":"/Users/eneto/Lab/snap-rca-camkit-workshop/node_modules/@snap/camera-kit/lib/logger/logger.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logEntriesFactory = void 0;\nvar _Injectable = require(\"../dependency-injection/Injectable\");\nvar _logger = require(\"./logger\");\n/**\n * The factory creates new logEntries subject.\n *\n * NOTE: The factory calls `resetLogger()`, which overrides the global `logEntrySubject`.\n * This is currently necessary to avoid sharing the same subject between multiple `CameraKit` instances.\n * In the future, we may throw an error when bootstrapping more than a single `CameraKit`,\n * that will allow us to have a single log entry subject.\n *\n * @internal\n */\nconst logEntriesFactory = exports.logEntriesFactory = (0, _Injectable.Injectable)(\"logEntries\", () => (0, _logger.resetLogger)().asObservable());"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":15}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":18}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":25}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":4}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":11}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":14}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":21}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":0}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":7},"generated":{"line":19,"column":0}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":13},"generated":{"line":19,"column":6}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":30},"generated":{"line":19,"column":23}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":30},"generated":{"line":19,"column":26}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":30},"generated":{"line":19,"column":33}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":30},"generated":{"line":19,"column":34}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":30},"generated":{"line":19,"column":51}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":33},"generated":{"line":19,"column":54}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":33},"generated":{"line":19,"column":58}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":43},"generated":{"line":19,"column":80}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":44},"generated":{"line":19,"column":82}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":56},"generated":{"line":19,"column":94}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":58},"generated":{"line":19,"column":96}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":64},"generated":{"line":19,"column":102}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":64},"generated":{"line":19,"column":106}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":75},"generated":{"line":19,"column":125}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":75},"generated":{"line":19,"column":127}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":77},"generated":{"line":19,"column":128}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":78},"generated":{"line":19,"column":129}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":90},"generated":{"line":19,"column":141}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":90},"generated":{"line":19,"column":142}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":92},"generated":{"line":19,"column":143}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":93},"generated":{"line":19,"column":144}}],"sources":{"../../src/logger/logEntries.ts":"import { Injectable } from \"../dependency-injection/Injectable\";\nimport { resetLogger } from \"./logger\";\n\n/**\n * The factory creates new logEntries subject.\n *\n * NOTE: The factory calls `resetLogger()`, which overrides the global `logEntrySubject`.\n * This is currently necessary to avoid sharing the same subject between multiple `CameraKit` instances.\n * In the future, we may throw an error when bootstrapping more than a single `CameraKit`,\n * that will allow us to have a single log entry subject.\n *\n * @internal\n */\nexport const logEntriesFactory = Injectable(\"logEntries\", () => resetLogger().asObservable());\n"},"lineCount":null}},"error":null,"hash":"9f22fb4d268afd1d8133743cd00eac7b","cacheData":{"env":{}}}