{"id":"node_modules/@snap/camera-kit/lib/common/unionBy.js","dependencies":[{"name":"/Users/eneto/Lab/snap-rca-camkit-workshop/node_modules/@snap/camera-kit/lib/common/unionBy.js.map","includedInParent":true,"mtime":1710948721311},{"name":"/Users/eneto/Lab/snap-rca-camkit-workshop/package.json","includedInParent":true,"mtime":1710952305120},{"name":"/Users/eneto/Lab/snap-rca-camkit-workshop/node_modules/@snap/camera-kit/package.json","includedInParent":true,"mtime":1710948721086}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unionBy = unionBy;\n/**\n * Creates an array of unique values, in order, from all given arrays using a specified iteratee.\n * If multiple elements have the same key generated by the iteratee, the last occurrence is kept.\n *\n * @param {((item: T) => unknown) | keyof T} iteratee - The iteratee invoked per element.\n * @param {...T[][]} arrays - The arrays to inspect and unite.\n * @returns {T[]} - Returns the new array of combined elements, preserving the order of last occurrences.\n * @example\n * // Using a property name as iteratee\n * const result = unionBy(\n *   'id',\n *   [{ id: 1, name: 'John' }, { id: 2, name: 'Jane' }],\n *   [{ id: 1, name: 'Sally' }, { id: 3, name: 'Doe' }]\n * );\n * console.log(result);\n * // Output: [{ id: 1, name: 'Sally' }, { id: 2, name: 'Jane' }, { id: 3, name: 'Doe' }]\n *\n * @example\n * // Using a function as iteratee\n * const result = unionBy(\n *   item => item.id,\n *   [{ id: 1, name: 'John' }, { id: 2, name: 'Jane' }],\n *   [{ id: 1, name: 'Sally' }, { id: 3, name: 'Doe' }]\n * );\n * console.log(result);\n * // Output: [{ id: 1, name: 'Sally' }, { id: 2, name: 'Jane' }, { id: 3, name: 'Doe' }]\n */\nfunction unionBy(iteratee, ...arrays) {\n  const throwIterateeError = () => {\n    throw new Error(\"Iteratee must be a function or a valid property key of the item\");\n  };\n  // One helpful feature of Map is maintainig the insertion order of elements. This is particularly nice for the\n  // unionBy function since it ensures that the combined array preserves the order of elements as they first appear\n  // in the input arrays.\n  const seen = new Map();\n  for (const item of arrays.flat()) {\n    const key = typeof iteratee === \"function\" ? iteratee(item) : typeof item === \"object\" && item !== null && iteratee in item ? item[iteratee] : throwIterateeError();\n    seen.set(key, item);\n  }\n  return Array.from(seen.values());\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":34,"column":0}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":28,"column":16},"generated":{"line":34,"column":9}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":28,"column":23},"generated":{"line":34,"column":16}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":28,"column":27},"generated":{"line":34,"column":17}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":28,"column":69},"generated":{"line":34,"column":25}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":28,"column":71},"generated":{"line":34,"column":27}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":28,"column":74},"generated":{"line":34,"column":30}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":28,"column":87},"generated":{"line":34,"column":36}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":28,"column":87},"generated":{"line":34,"column":38}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":35,"column":2}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":35,"column":8}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":29,"column":28},"generated":{"line":35,"column":26}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":29,"column":31},"generated":{"line":35,"column":29}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":29,"column":31},"generated":{"line":35,"column":30}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":29,"column":36},"generated":{"line":35,"column":35}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":30,"column":8},"generated":{"line":36,"column":4}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":30,"column":14},"generated":{"line":36,"column":10}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":30,"column":18},"generated":{"line":36,"column":14}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":30,"column":23},"generated":{"line":36,"column":19}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":36,"column":20}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":30,"column":89},"generated":{"line":36,"column":85}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":30,"column":90},"generated":{"line":36,"column":86}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":37,"column":2}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":31,"column":5},"generated":{"line":37,"column":3}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":38,"column":2}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":39,"column":2}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":40,"column":2}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":41,"column":2}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":36,"column":10},"generated":{"line":41,"column":8}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":36,"column":14},"generated":{"line":41,"column":12}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":36,"column":17},"generated":{"line":41,"column":15}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":36,"column":21},"generated":{"line":41,"column":19}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":36,"column":24},"generated":{"line":41,"column":22}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":36,"column":24},"generated":{"line":41,"column":23}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":36,"column":38},"generated":{"line":41,"column":24}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":42,"column":2}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":38,"column":9},"generated":{"line":42,"column":7}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":38,"column":15},"generated":{"line":42,"column":13}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":38,"column":19},"generated":{"line":42,"column":17}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":38,"column":23},"generated":{"line":42,"column":21}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":38,"column":29},"generated":{"line":42,"column":27}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":38,"column":30},"generated":{"line":42,"column":28}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":38,"column":34},"generated":{"line":42,"column":32}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":38,"column":34},"generated":{"line":42,"column":33}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":38,"column":36},"generated":{"line":42,"column":34}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":38,"column":38},"generated":{"line":42,"column":36}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":39,"column":8},"generated":{"line":43,"column":4}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":39,"column":14},"generated":{"line":43,"column":10}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":39,"column":17},"generated":{"line":43,"column":13}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":40,"column":12},"generated":{"line":43,"column":16}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":40,"column":19},"generated":{"line":43,"column":23}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":40,"column":27},"generated":{"line":43,"column":31}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":40,"column":32},"generated":{"line":43,"column":36}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":40,"column":42},"generated":{"line":43,"column":46}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":41,"column":18},"generated":{"line":43,"column":49}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":41,"column":26},"generated":{"line":43,"column":57}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":41,"column":27},"generated":{"line":43,"column":58}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":41,"column":31},"generated":{"line":43,"column":62}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":41,"column":32},"generated":{"line":43,"column":63}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":42,"column":18},"generated":{"line":43,"column":66}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":42,"column":25},"generated":{"line":43,"column":73}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":42,"column":29},"generated":{"line":43,"column":77}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":42,"column":34},"generated":{"line":43,"column":82}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":42,"column":42},"generated":{"line":43,"column":90}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":42,"column":46},"generated":{"line":43,"column":94}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":42,"column":50},"generated":{"line":43,"column":98}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":42,"column":55},"generated":{"line":43,"column":103}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":42,"column":59},"generated":{"line":43,"column":107}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":42,"column":63},"generated":{"line":43,"column":111}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":42,"column":71},"generated":{"line":43,"column":119}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":42,"column":75},"generated":{"line":43,"column":123}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":42,"column":79},"generated":{"line":43,"column":127}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":43,"column":18},"generated":{"line":43,"column":130}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":43,"column":22},"generated":{"line":43,"column":134}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":43,"column":23},"generated":{"line":43,"column":135}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":43,"column":31},"generated":{"line":43,"column":143}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":43,"column":32},"generated":{"line":43,"column":144}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":44,"column":18},"generated":{"line":43,"column":147}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":44,"column":36},"generated":{"line":43,"column":165}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":44,"column":36},"generated":{"line":43,"column":166}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":44,"column":38},"generated":{"line":43,"column":167}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":46,"column":8},"generated":{"line":44,"column":4}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":46,"column":12},"generated":{"line":44,"column":8}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":46,"column":13},"generated":{"line":44,"column":9}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":46,"column":16},"generated":{"line":44,"column":12}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":46,"column":17},"generated":{"line":44,"column":13}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":46,"column":20},"generated":{"line":44,"column":16}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":46,"column":22},"generated":{"line":44,"column":18}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":46,"column":26},"generated":{"line":44,"column":22}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":46,"column":27},"generated":{"line":44,"column":23}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":46,"column":2}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":49,"column":11},"generated":{"line":46,"column":9}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":49,"column":16},"generated":{"line":46,"column":14}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":46,"column":15}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":49,"column":21},"generated":{"line":46,"column":19}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":49,"column":22},"generated":{"line":46,"column":20}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":49,"column":26},"generated":{"line":46,"column":24}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":49,"column":27},"generated":{"line":46,"column":25}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":49,"column":33},"generated":{"line":46,"column":31}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":49,"column":33},"generated":{"line":46,"column":32}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":49,"column":35},"generated":{"line":46,"column":33}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":49,"column":36},"generated":{"line":46,"column":34}},{"source":"../../src/common/unionBy.ts","name":null,"original":{"line":50,"column":0},"generated":{"line":47,"column":0}}],"sources":{"../../src/common/unionBy.ts":"/**\n * Creates an array of unique values, in order, from all given arrays using a specified iteratee.\n * If multiple elements have the same key generated by the iteratee, the last occurrence is kept.\n *\n * @param {((item: T) => unknown) | keyof T} iteratee - The iteratee invoked per element.\n * @param {...T[][]} arrays - The arrays to inspect and unite.\n * @returns {T[]} - Returns the new array of combined elements, preserving the order of last occurrences.\n * @example\n * // Using a property name as iteratee\n * const result = unionBy(\n *   'id',\n *   [{ id: 1, name: 'John' }, { id: 2, name: 'Jane' }],\n *   [{ id: 1, name: 'Sally' }, { id: 3, name: 'Doe' }]\n * );\n * console.log(result);\n * // Output: [{ id: 1, name: 'Sally' }, { id: 2, name: 'Jane' }, { id: 3, name: 'Doe' }]\n *\n * @example\n * // Using a function as iteratee\n * const result = unionBy(\n *   item => item.id,\n *   [{ id: 1, name: 'John' }, { id: 2, name: 'Jane' }],\n *   [{ id: 1, name: 'Sally' }, { id: 3, name: 'Doe' }]\n * );\n * console.log(result);\n * // Output: [{ id: 1, name: 'Sally' }, { id: 2, name: 'Jane' }, { id: 3, name: 'Doe' }]\n */\nexport function unionBy<T>(iteratee: ((item: T) => unknown) | keyof T, ...arrays: T[][]): T[] {\n    const throwIterateeError = () => {\n        throw new Error(\"Iteratee must be a function or a valid property key of the item\");\n    };\n\n    // One helpful feature of Map is maintainig the insertion order of elements. This is particularly nice for the\n    // unionBy function since it ensures that the combined array preserves the order of elements as they first appear\n    // in the input arrays.\n    const seen = new Map<unknown, T>();\n\n    for (const item of arrays.flat()) {\n        const key =\n            typeof iteratee === \"function\"\n                ? iteratee(item)\n                : typeof item === \"object\" && item !== null && iteratee in item\n                ? item[iteratee]\n                : throwIterateeError();\n\n        seen.set(key, item);\n    }\n\n    return Array.from(seen.values());\n}\n"},"lineCount":null}},"error":null,"hash":"d80bc6b6d94796e585b0e44b25286c91","cacheData":{"env":{}}}