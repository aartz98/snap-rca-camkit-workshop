{"version":3,"sources":["../../src/common/copyDefinedProperties.ts","../src/configurationOverrides.ts","../../src/dependency-injection/Injectable.ts","../src/configuration.ts","node_modules/@snap/camera-kit/node_modules/tslib/tslib.es6.js","node_modules/@snap/camera-kit/lib/lensCoreWasmVersions.json","../../src/common/getFilename.ts","node_modules/rxjs/node_modules/tslib/tslib.es6.js","../../../../src/internal/util/isFunction.ts","../../../../src/internal/util/createErrorClass.ts","../../../../src/internal/util/UnsubscriptionError.ts","../../../../src/internal/util/arrRemove.ts","../../../src/internal/Subscription.ts","../../../src/internal/config.ts","../../../../src/internal/scheduler/timeoutProvider.ts","../../../../src/internal/util/reportUnhandledError.ts","../../../../src/internal/util/noop.ts","../../../src/internal/NotificationFactories.ts","../../../../src/internal/util/errorContext.ts","../../../src/internal/Subscriber.ts","../../../../src/internal/symbol/observable.ts","../../../../src/internal/util/identity.ts","../../../../src/internal/util/pipe.ts","../../../src/internal/Observable.ts","../../../../src/internal/util/lift.ts","../../../../src/internal/operators/OperatorSubscriber.ts","../../../../src/internal/operators/refCount.ts","../../../../src/internal/observable/ConnectableObservable.ts","../../../../src/internal/scheduler/performanceTimestampProvider.ts","../../../../src/internal/scheduler/animationFrameProvider.ts","../../../../../src/internal/observable/dom/animationFrames.ts","../../../../src/internal/util/ObjectUnsubscribedError.ts","../../../src/internal/Subject.ts","../../../src/internal/BehaviorSubject.ts","../../../../src/internal/scheduler/dateTimestampProvider.ts","../../../src/internal/ReplaySubject.ts","../../../src/internal/AsyncSubject.ts","../../../../src/internal/scheduler/Action.ts","../../../../src/internal/scheduler/intervalProvider.ts","../../../../src/internal/scheduler/AsyncAction.ts","../../../../src/internal/util/Immediate.ts","../../../../src/internal/scheduler/immediateProvider.ts","../../../../src/internal/scheduler/AsapAction.ts","../../../src/internal/Scheduler.ts","../../../../src/internal/scheduler/AsyncScheduler.ts","../../../../src/internal/scheduler/AsapScheduler.ts","../../../../src/internal/scheduler/asap.ts","../../../../src/internal/scheduler/async.ts","../../../../src/internal/scheduler/QueueAction.ts","../../../../src/internal/scheduler/QueueScheduler.ts","../../../../src/internal/scheduler/queue.ts","../../../../src/internal/scheduler/AnimationFrameAction.ts","../../../../src/internal/scheduler/AnimationFrameScheduler.ts","../../../../src/internal/scheduler/animationFrame.ts","../../../../src/internal/scheduler/VirtualTimeScheduler.ts","../../../../src/internal/observable/empty.ts","../../../../src/internal/util/isScheduler.ts","../../../../src/internal/util/args.ts","../../../../src/internal/util/isArrayLike.ts","../../../../src/internal/util/isPromise.ts","../../../../src/internal/util/isInteropObservable.ts","../../../../src/internal/util/isAsyncIterable.ts","../../../../src/internal/util/throwUnobservableError.ts","../../../../src/internal/symbol/iterator.ts","../../../../src/internal/util/isIterable.ts","../../../../src/internal/util/isReadableStreamLike.ts","node_modules/process/browser.js","../../../../src/internal/observable/innerFrom.ts","../../../../src/internal/util/executeSchedule.ts","../../../../src/internal/operators/observeOn.ts","../../../../src/internal/operators/subscribeOn.ts","../../../../src/internal/scheduled/scheduleObservable.ts","../../../../src/internal/scheduled/schedulePromise.ts","../../../../src/internal/scheduled/scheduleArray.ts","../../../../src/internal/scheduled/scheduleIterable.ts","../../../../src/internal/scheduled/scheduleAsyncIterable.ts","../../../../src/internal/scheduled/scheduleReadableStreamLike.ts","../../../../src/internal/scheduled/scheduled.ts","../../../../src/internal/observable/from.ts","../../../../src/internal/observable/of.ts","../../../../src/internal/observable/throwError.ts","../../../src/internal/Notification.ts","../../../../src/internal/util/isObservable.ts","../../../../src/internal/util/EmptyError.ts","../../../src/internal/lastValueFrom.ts","../../../src/internal/firstValueFrom.ts","../../../../src/internal/util/ArgumentOutOfRangeError.ts","../../../../src/internal/util/NotFoundError.ts","../../../../src/internal/util/SequenceError.ts","../../../../src/internal/util/isDate.ts","../../../../src/internal/operators/timeout.ts","../../../../src/internal/operators/map.ts","../../../../src/internal/util/mapOneOrManyArgs.ts","../../../../src/internal/observable/bindCallbackInternals.ts","../../../../src/internal/observable/bindCallback.ts","../../../../src/internal/observable/bindNodeCallback.ts","../../../../src/internal/util/argsArgArrayOrObject.ts","../../../../src/internal/util/createObject.ts","../../../../src/internal/observable/combineLatest.ts","../../../../src/internal/operators/mergeInternals.ts","../../../../src/internal/operators/mergeMap.ts","../../../../src/internal/operators/mergeAll.ts","../../../../src/internal/operators/concatAll.ts","../../../../src/internal/observable/concat.ts","../../../../src/internal/observable/defer.ts","../../../../src/internal/observable/connectable.ts","../../../../src/internal/observable/forkJoin.ts","../../../../src/internal/observable/fromEvent.ts","../../../../src/internal/observable/fromEventPattern.ts","../../../../src/internal/observable/generate.ts","../../../../src/internal/observable/iif.ts","../../../../src/internal/observable/timer.ts","../../../../src/internal/observable/interval.ts","../../../../src/internal/observable/merge.ts","../../../../src/internal/observable/never.ts","../../../../src/internal/util/argsOrArgArray.ts","../../../../src/internal/observable/onErrorResumeNext.ts","../../../../src/internal/observable/pairs.ts","../../../../src/internal/util/not.ts","../../../../src/internal/operators/filter.ts","../../../../src/internal/observable/partition.ts","../../../../src/internal/observable/race.ts","../../../../src/internal/observable/range.ts","../../../../src/internal/observable/using.ts","../../../../src/internal/observable/zip.ts","../../../../src/internal/operators/audit.ts","../../../../src/internal/operators/auditTime.ts","../../../../src/internal/operators/buffer.ts","../../../../src/internal/operators/bufferCount.ts","../../../../src/internal/operators/bufferTime.ts","../../../../src/internal/operators/bufferToggle.ts","../../../../src/internal/operators/bufferWhen.ts","../../../../src/internal/operators/catchError.ts","../../../../src/internal/operators/scanInternals.ts","../../../../src/internal/operators/reduce.ts","../../../../src/internal/operators/toArray.ts","../../../../src/internal/operators/joinAllInternals.ts","../../../../src/internal/operators/combineLatestAll.ts","../../../../src/internal/operators/combineAll.ts","../../../../src/internal/operators/combineLatest.ts","../../../../src/internal/operators/combineLatestWith.ts","../../../../src/internal/operators/concatMap.ts","../../../../src/internal/operators/concatMapTo.ts","../../../../src/internal/operators/concat.ts","../../../../src/internal/operators/concatWith.ts","../../../../src/internal/observable/fromSubscribable.ts","../../../../src/internal/operators/connect.ts","../../../../src/internal/operators/count.ts","../../../../src/internal/operators/debounce.ts","../../../../src/internal/operators/debounceTime.ts","../../../../src/internal/operators/defaultIfEmpty.ts","../../../../src/internal/operators/take.ts","../../../../src/internal/operators/ignoreElements.ts","../../../../src/internal/operators/mapTo.ts","../../../../src/internal/operators/delayWhen.ts","../../../../src/internal/operators/delay.ts","../../../../src/internal/operators/dematerialize.ts","../../../../src/internal/operators/distinct.ts","../../../../src/internal/operators/distinctUntilChanged.ts","../../../../src/internal/operators/distinctUntilKeyChanged.ts","../../../../src/internal/operators/throwIfEmpty.ts","../../../../src/internal/operators/elementAt.ts","../../../../src/internal/operators/endWith.ts","../../../../src/internal/operators/every.ts","../../../../src/internal/operators/exhaustMap.ts","../../../../src/internal/operators/exhaustAll.ts","../../../../src/internal/operators/exhaust.ts","../../../../src/internal/operators/expand.ts","../../../../src/internal/operators/finalize.ts","../../../../src/internal/operators/find.ts","../../../../src/internal/operators/findIndex.ts","../../../../src/internal/operators/first.ts","../../../../src/internal/operators/groupBy.ts","../../../../src/internal/operators/isEmpty.ts","../../../../src/internal/operators/takeLast.ts","../../../../src/internal/operators/last.ts","../../../../src/internal/operators/materialize.ts","../../../../src/internal/operators/max.ts","../../../../src/internal/operators/flatMap.ts","../../../../src/internal/operators/mergeMapTo.ts","../../../../src/internal/operators/mergeScan.ts","../../../../src/internal/operators/merge.ts","../../../../src/internal/operators/mergeWith.ts","../../../../src/internal/operators/min.ts","../../../../src/internal/operators/multicast.ts","../../../../src/internal/operators/onErrorResumeNextWith.ts","../../../../src/internal/operators/pairwise.ts","../../../../src/internal/operators/pluck.ts","../../../../src/internal/operators/publish.ts","../../../../src/internal/operators/publishBehavior.ts","../../../../src/internal/operators/publishLast.ts","../../../../src/internal/operators/publishReplay.ts","../../../../src/internal/operators/raceWith.ts","../../../../src/internal/operators/repeat.ts","../../../../src/internal/operators/repeatWhen.ts","../../../../src/internal/operators/retry.ts","../../../../src/internal/operators/retryWhen.ts","../../../../src/internal/operators/sample.ts","../../../../src/internal/operators/sampleTime.ts","../../../../src/internal/operators/scan.ts","../../../../src/internal/operators/sequenceEqual.ts","../../../../src/internal/operators/share.ts","../../../../src/internal/operators/shareReplay.ts","../../../../src/internal/operators/single.ts","../../../../src/internal/operators/skip.ts","../../../../src/internal/operators/skipLast.ts","../../../../src/internal/operators/skipUntil.ts","../../../../src/internal/operators/skipWhile.ts","../../../../src/internal/operators/startWith.ts","../../../../src/internal/operators/switchMap.ts","../../../../src/internal/operators/switchAll.ts","../../../../src/internal/operators/switchMapTo.ts","../../../../src/internal/operators/switchScan.ts","../../../../src/internal/operators/takeUntil.ts","../../../../src/internal/operators/takeWhile.ts","../../../../src/internal/operators/tap.ts","../../../../src/internal/operators/throttle.ts","../../../../src/internal/operators/throttleTime.ts","../../../../src/internal/operators/timeInterval.ts","../../../../src/internal/operators/timeoutWith.ts","../../../../src/internal/operators/timestamp.ts","../../../../src/internal/operators/window.ts","../../../../src/internal/operators/windowCount.ts","../../../../src/internal/operators/windowTime.ts","../../../../src/internal/operators/windowToggle.ts","../../../../src/internal/operators/windowWhen.ts","../../../../src/internal/operators/withLatestFrom.ts","../../../../src/internal/operators/zipAll.ts","../../../../src/internal/operators/zip.ts","../../../../src/internal/operators/zipWith.ts","../../src/index.ts","../../src/common/loadScript.ts","../../src/common/index.ts","../../src/common/typeguards.ts","../../src/handlers/debugHandler.ts","../../src/handlers/HandlerChainBuilder.ts","../../src/common/entries.ts","../../src/logger/logger.ts","../../src/handlers/retryingHandler.ts","../../src/handlers/noCorsRetryingFetchHandler.ts","../../src/handlers/timeoutHandler.ts","../../src/handlers/defaultFetchHandler.ts","node_modules/wasm-feature-detect/dist/esm/index.js","../../src/common/memoize.ts","../src/namedErrors.ts","node_modules/@snap/camera-kit/lib/environment.json","../../src/platform/platformInfo.ts","../../src/platform/platformCapabilities.ts","../../src/lens-core-module/lensCoreError.ts","../../src/lens-core-module/lensCore.ts","../../../src/lens-core-module/loader/lensCoreFactory.ts","../../src/benchmark/webglUtils.ts","../../src/benchmark/benchmarkGflops.ts","../../src/benchmark/estimateLensPerformanceCluster.ts","node_modules/reflect-metadata/Reflect.js","../../src/common/validate.ts","../../src/common/errorHelpers.ts","../../src/common/time.ts","../../src/events/TypedCustomEvent.ts","../../src/events/TypedEventTarget.ts","../../src/handlers/requestStateEmittingHandler.ts","../../src/handlers/arrayBufferParsingHandler.ts","node_modules/long/src/long.js","node_modules/@protobufjs/aspromise/index.js","node_modules/@protobufjs/base64/index.js","node_modules/@protobufjs/eventemitter/index.js","node_modules/@protobufjs/float/index.js","node_modules/@protobufjs/inquire/index.js","node_modules/@protobufjs/utf8/index.js","node_modules/@protobufjs/pool/index.js","node_modules/protobufjs/src/util/longbits.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","node_modules/protobufjs/src/util/minimal.js","node_modules/protobufjs/src/writer.js","node_modules/protobufjs/src/writer_buffer.js","node_modules/protobufjs/src/reader.js","node_modules/protobufjs/src/reader_buffer.js","node_modules/protobufjs/src/rpc/service.js","node_modules/protobufjs/src/rpc.js","node_modules/protobufjs/src/roots.js","node_modules/protobufjs/src/index-minimal.js","node_modules/protobufjs/minimal.js","../../../../../src/generated-proto/pb_schema/google/protobuf/any.ts","../../../../../src/generated-proto/pb_schema/camera_kit/v3/lens.ts","../../src/logger/errorLoggingDecorator.ts","../../src/common/assertions.ts","../../src/lens/Lens.ts","../../../src/lens-core-module/loader/index.ts","../../src/lens-core-module/index.ts","../../src/metrics/metricsEventTarget.ts","../../../../../src/generated-proto/pb_schema/cdp/cof/namespace.ts","../../src/platform/cameraKitUserAgent.ts","../../src/handlers/headersModifyingFetchHandler.ts","../../src/handlers/cameraKitServiceFetchHandlerFactory.ts","../../src/handlers/index.ts","node_modules/browser-headers/dist/browser-headers.umd.js","../../src/common/unionBy.ts","node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.umd.js","../../../../../src/generated-proto/pb_schema/google/protobuf/timestamp.ts","../../../../../src/generated-proto/pb_schema/cdp/cof/benchmark.ts","../../../../src/generated-proto/pb_schema/common/ruid.ts","../../../../../src/generated-proto/pb_schema/google/protobuf/wrappers.ts","../../../../../src/generated-proto/pb_schema/cdp/cof/config_request.ts","../../../../src/generated-proto/pb_schema/common/value.ts","../../../../../src/generated-proto/pb_schema/cdp/cof/config_result.ts","../../../../../src/generated-proto/pb_schema/cdp/cof/config_response.ts","../../../../../src/generated-proto/pb_schema/cdp/cof/debug_info.ts","../../../../../src/generated-proto/pb_schema/cdp/cof/circumstance_service.ts","../../src/handlers/responseCachingHandler.ts","../../src/persistence/Persistence.ts","../../src/persistence/IndexedDBPersistence.ts","../../src/handlers/mappingHandler.ts","../../src/handlers/batchingHandler.ts","../../../../../src/generated-proto/pb_schema/camera_kit/v3/ranking.ts","../../../../../src/generated-proto/pb_schema/camera_kit/v3/legal_prompt.ts","../../../../../src/generated-proto/pb_schema/camera_kit/v3/operational_metrics.ts","../../../../../src/generated-proto/pb_schema/camera_kit/v3/business_events.ts","../../../../../src/generated-proto/pb_schema/camera_kit/v3/service.ts","../../src/common/pageVisibility.ts","../../src/handlers/rateLimitingHandler.ts","../../src/metrics/metricsHandler.ts","../../../src/metrics/operational/operationalMetricsReporter.ts","../../src/persistence/ExpiringPersistence.ts","../../src/remote-configuration/cofHandler.ts","../../src/remote-configuration/remoteConfiguration.ts","../../../src/lens/assets/deviceDependentAssetLoader.ts","../../../src/lens/assets/remoteMediaAssetLoaderFactory.ts","../../../src/lens/assets/staticAssetLoader.ts","../../../src/lens/assets/LensAssetRepository.ts","../../../../../src/generated-proto/pb_schema/camera_kit/v3/export.ts","../../src/lens/LensSource.ts","../../src/lens/LensRepository.ts","../../src/dependency-injection/PartialContainer.ts","../../src/dependency-injection/Container.ts","node_modules/@snap/state-management/dist/types.js","node_modules/@snap/state-management/dist/actions.js","node_modules/@snap/state-management/dist/state-machine.js","node_modules/@snap/state-management/dist/states.js","node_modules/@snap/state-management/dist/public-api.js","../../src/transforms/Transform2D.ts","../../src/transforms/index.ts","../../src/media-sources/CameraKitSource.ts","../../src/media-sources/MediaStreamSource.ts","../../src/media-sources/VideoSource.ts","../../src/logger/logEntries.ts","../../src/session/LensPerformanceMeasurement.ts","../../src/session/LensPerformanceMetrics.ts","../../src/lens/LensPersistenceStore.ts","../../../../src/generated-proto/pb_schema/lenses/snappable.ts","../../../../src/generated-proto/pb_schema/lenses/geopoint.ts","../../../../src/generated-proto/pb_schema/lenses/geocircle.ts","../../../../src/generated-proto/pb_schema/lenses/lures.ts","../../../../src/generated-proto/pb_schema/lenses/user_data.ts","../../../../src/generated-proto/pb_schema/lenses/persistent_store.ts","../../../../src/generated-proto/pb_schema/lenses/launch_params.ts","../../../../src/generated-proto/pb_schema/lenses/launchdata.ts","../../src/lens/LensLaunchData.ts","../../src/common/localization.ts","../../src/common/dialog.ts","../../src/common/hash.ts","../../src/legal/legalPrompt.ts","../../src/legal/legalState.ts","../../../src/metrics/operational/Metric.ts","../../../src/metrics/operational/Timer.ts","../../src/observable-operators/unsubscribed.ts","../../src/session/lensState.ts","../../src/session/sessionState.ts","../../src/session/LensKeyboard.ts","../../src/session/CameraKitSessionEvents.ts","../../src/session/CameraKitSession.ts","../../../src/lens/assets/LensAssetsProvider.ts","../../../../../../src/generated-proto/pb_schema/camera_kit/v3/features/remote_api_info.ts","../../../../../src/generated-proto/pb_schema/lenses/remote_api/remote_api_service.ts","../../src/extensions/UriHandlers.ts","../../src/extensions/RemoteApiServices.ts","../../src/extensions/uriHandlersRegister.ts","../../../src/metrics/reporters/reportGlobalException.ts","../../../src/metrics/reporters/reportSessionException.ts","../../../src/metrics/reporters/reportBenchmarks.ts","../../src/events/scan.ts","../../../src/metrics/reporters/reportLensAndAssetDownload.ts","../../../src/metrics/reporters/reportHttpMetrics.ts","../../../src/generated-proto/blizzard/cameraKitEvents.ts","../../../src/metrics/reporters/reportLegalState.ts","../../../src/metrics/reporters/reportLensValidationFailed.ts","../../../src/metrics/operational/Histogram.ts","../../src/common/date.ts","../../../src/metrics/reporters/reportLensView.ts","../../../src/metrics/reporters/reportLensWait.ts","../../../src/metrics/reporters/reportUserSession.ts","../../../src/metrics/operational/Count.ts","../../../src/metrics/reporters/reportPlatformCapabilities.ts","../../../src/metrics/reporters/reporters.ts","node_modules/browser-fs-access/dist/index.modern.js","../../src/lens-client-interface/exif.ts","../../src/lens-client-interface/imagePicker.ts","../../src/lens-client-interface/lensClientInterface.ts","../../src/remote-configuration/preloadConfiguration.ts","../src/CameraKit.ts","../../src/platform/assertPlatformSupported.ts","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/regex.js","node_modules/uuid/dist/esm-browser/validate.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/v1.js","node_modules/uuid/dist/esm-browser/parse.js","node_modules/uuid/dist/esm-browser/v35.js","node_modules/uuid/dist/esm-browser/md5.js","node_modules/uuid/dist/esm-browser/v3.js","node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/v4.js","node_modules/uuid/dist/esm-browser/sha1.js","node_modules/uuid/dist/esm-browser/v5.js","node_modules/uuid/dist/esm-browser/nil.js","node_modules/uuid/dist/esm-browser/version.js","node_modules/uuid/dist/esm-browser/index.js","../../src/metrics/businessEventsReporter.ts","../../src/logger/registerLogEntriesSubscriber.ts","../../src/clients/createTsProtoClient.ts","../../src/common/result.ts","../../src/clients/grpcHandler.ts","../../src/clients/lensesClient.ts","node_modules/@protobufjs/codegen/index.js","node_modules/@protobufjs/fetch/index.js","node_modules/@protobufjs/path/index.js","node_modules/protobufjs/src/types.js","node_modules/protobufjs/src/field.js","node_modules/protobufjs/src/oneof.js","node_modules/protobufjs/src/namespace.js","node_modules/protobufjs/src/mapfield.js","node_modules/protobufjs/src/method.js","node_modules/protobufjs/src/service.js","node_modules/protobufjs/src/message.js","node_modules/protobufjs/src/decoder.js","node_modules/protobufjs/src/verifier.js","node_modules/protobufjs/src/converter.js","node_modules/protobufjs/src/wrappers.js","node_modules/protobufjs/src/type.js","node_modules/protobufjs/src/root.js","node_modules/protobufjs/src/util.js","node_modules/protobufjs/src/object.js","node_modules/protobufjs/src/enum.js","node_modules/protobufjs/src/encoder.js","node_modules/protobufjs/src/index-light.js","node_modules/protobufjs/src/tokenize.js","node_modules/protobufjs/src/parse.js","node_modules/protobufjs/src/common.js","node_modules/protobufjs/src/index.js","node_modules/protobufjs/index.js","../../src/lens/cameraKitLensSource.ts","../src/bootstrapCameraKit.ts","../../src/extensions/extensionRequestContext.ts","../../src/media-sources/FunctionSource.ts","../../src/media-sources/ImageSource.ts","../src/index.ts","src/main.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__assign","exports","assign","t","s","i","n","arguments","length","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__esDecorate","ctor","descriptorIn","contextIn","initializers","extraInitializers","accept","f","kind","descriptor","name","_","done","context","access","addInitializer","push","result","get","set","init","unshift","__runInitializers","thisArg","value","useValue","__propKey","x","concat","__setFunctionName","prefix","description","configurable","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","then","__generator","body","label","sent","trys","ops","y","g","verb","Symbol","iterator","v","op","pop","__createBinding","o","m","k","k2","undefined","__esModule","writable","enumerable","__exportStar","__values","__read","ar","error","__spread","__spreadArrays","il","a","j","jl","__spreadArray","to","from","pack","l","slice","__await","__asyncGenerator","asyncIterator","q","resume","settle","fulfill","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","mod","__importDefault","default","__classPrivateFieldGet","receiver","state","has","__classPrivateFieldSet","__classPrivateFieldIn","__addDisposableResource","env","async","dispose","asyncDispose","stack","_SuppressedError","SuppressedError","suppressed","message","Error","__disposeResources","fail","hasError","rec","_default","process","module","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","nextTick","args","Item","array","title","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","bigInt","WebAssembly","instantiate","instance","BigInt","Uint8Array","bulkMemory","validate","exceptions","extendedConst","gc","jspi","memory64","multiMemory","Module","multiValue","mutableGlobals","referenceTypes","relaxedSimd","saturatedFloatToInt","signExtensions","simd","streamingCompilation","tailCall","threads","MessageChannel","port1","postMessage","SharedArrayBuffer","typeReflection","entries","fromEntries","_rxjs","require","_types","defineAction","actionCreator","data","defineActions","actions","map","forActions","filter","some","action","isAction","StateMachine","states","events","actionsSubject","eventsSubject","initialState","reducer","Subject","asObservable","BehaviorSubject","pipe","withLatestFrom","mergeMap","NEVER","startWith","raceWith","of","tap","newState","take","subscribe","dispatch","actionOrName","getState","getValue","stateMachine","source","Observable","subscriber","subscription","add","_actions","defineState","defineStates","inStates","isState","keys","forEach","_stateMachine","_states","supported","self","top","h","getFile","handle","isArray","mimeTypes","extensions","window","showOpenFilePicker","id","startIn","types","multiple","excludeAcceptAllOption","all","fileOpenModern","u","return","throw","values","directoryHandle","flat","recursive","mode","showDirectoryPicker","skipDirectory","fileName","Blob","type","headers","showSaveFilePicker","suggestedName","createWritable","stream","pipeTo","write","close","w","document","createElement","join","style","display","append","legacySetup","removeEventListener","remove","addEventListener","files","HTMLInputElement","showPicker","click","webkitdirectory","webkitRelativePath","split","every","getReader","ReadableStream","start","read","enqueue","Response","blob","releaseLock","download","href","URL","createObjectURL","revokeObjectURL","fileSaveLegacy","directoryOpenLegacy","fileOpenLegacy","fileSaveModern","directoryOpenModern","getRandomValues","rnds8","rng","crypto","bind","_regex","_interopRequireDefault","obj","uuid","REGEX","test","_validate","byteToHex","toString","unsafeStringify","arr","offset","stringify","_rng","_stringify","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","options","buf","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","parse","parseInt","_parse","stringToBytes","str","unescape","encodeURIComponent","bytes","charCodeAt","DNS","v35","hashfunc","generateUUID","namespace","_namespace","err","md5","msg","md5ToHexEncodedArray","wordsToMd5","bytesToWords","input","output","length32","hexTab","hex","charAt","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","Uint32Array","lsw","msw","bitRotateLeft","num","cnt","md5cmn","_v","_md","v3","randomUUID","_native","v4","native","rnds","z","ROTL","sha1","K","H","N","Math","ceil","M","pow","floor","W","T","_sha","v5","_v2","_v3","_v4","_nil","_version","OVERLAY_ID","OldModule","bundle","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","fn","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","generated","js","console","clear","hmrApply","hmrAcceptRun","reload","onclose","log","removeErrorOverlay","overlay","createErrorOverlay","appendChild","getElementById","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","cached","cache","cb"],"mappings":"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CAAC;AAC7B,CAAC,CAAA;AAAC,OAAA,CAAA,+BAAA,GAAA,+BAAA;;AC5BN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3yCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChxtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrvrajdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA;AAAqC,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,KAAA,OAAA,EAAA,GAAA;AAC9B,MAAM,eAAe,GAAA,OAAA,CAAA,eAAA,GAAG,iBAAiB;AAKhD,SAAS,aAAa,CAAA,EAAA;EAClB,OAAO;IAAE,OAAO,EAAE,EAAE;IAAE,KAAK,EAAE,IAAI,UAAU,CAAA;EAAE,CAAE;AACnD;AACO,MAAM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,CAAA,GAAA,MAAA,oCAAA,CAAA,GAAA;EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,GAAA;IAAA,UAAA;IAAA,GAAA,WAAA,CAAA;MAAA,OAAA,oCAAA,CAAA,GAAA;IAAA;EAAA;AAAA;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClXA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BM,SAAU,OAAO,CAAI,QAA0C,EAAE,GAAG,MAAa,EAAA;EACnF,MAAM,kBAAkB,GAAG,CAAA,KAAK;IAC5B,MAAM,IAAI,KAAK,CAAC,iEAAiE,CAAC;EACtF,CAAC;EAED;EACA;EACA;EACA,MAAM,IAAI,GAAG,IAAI,GAAG,CAAA,CAAc;EAElC,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,IAAI,CAAA,CAAE,EAAE;IAC9B,MAAM,GAAG,GACL,OAAO,QAAQ,KAAK,UAAU,GACxB,QAAQ,CAAC,IAAI,CAAC,GACd,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,IAAI,QAAQ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AACA;AACA;AAXAzO,OAAA,CAAAiP,aAAA,GAAAA,aAAA;AAYO,SAASG,UAAUA,CAAC,GAAGF,OAAO,EAAE;EACnC,OAAO,IAAAG,YAAM,EAAE5J,CAAC,IAAKyJ,OAAO,CAACI,IAAI,CAACC,MAAM,IAAI9J,CAAC,CAAC,CAAC,CAAC,CAACnD,IAAI,KAAKiN,MAAM,CAAC,CAAC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,QAAQA,CAACD,MAAM,EAAEjN,IAAI,EAAE;EACnC,OAAOiN,MAAM,CAACjN,IAAI,KAAKA,IAAI;AAC/B;;;;;;;;;ACxDA,IAAAqM,KAAA,GAAAC,OAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMa,YAAY,CAAC;EACtBP,OAAO;EACPQ,MAAM;EACN;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,MAAM;EACNC,cAAc;EACdC,aAAa;EACbnH,KAAK;EACL;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI7I,WAAWA,CAACqP,OAAO,EAAEQ,MAAM,EAAEI,YAAY,EAAEC,OAAO,EAAE;IAChD,IAAI,CAACb,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACQ,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACE,cAAc,GAAG,IAAII,aAAO,CAAC,CAAC;IACnC,IAAI,CAACH,aAAa,GAAG,IAAIG,aAAO,CAAC,CAAC;IAClC,IAAI,CAACL,MAAM,GAAG,IAAI,CAACE,aAAa,CAACI,YAAY,CAAC,CAAC;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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACptlbhKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvhhrtkpnrpxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnpzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"main.b0a109ad.js","sourceRoot":"..","sourcesContent":["/**\n * Copy only those properties of an object which are not undefined.\n *\n * This can be useful when using `Object.assign(foo, bar)` or `{ ...foo, ...bar }` to copy values from one object to\n * another. There's a (rather annoying) difference between a property not existing in an object and that property\n * existing but having an undefined value. When copying values using either of the methods above, it's generally\n * expected that undefined properties won't overwrite defined properties. But that's not the behavior – this helper\n * function is needed to ensure undefined properties in `bar` don't clobber corresponding properties in `foo`.\n *\n * @param obj Any object, possibly with properties whose values are undefined.\n * @returns A copy of the input object, without keys whose values were undefined.\n */\nexport function copyDefinedProperties<T extends {}>(obj: T): T {\n    return Object.fromEntries(Object.entries(obj).filter(([_, value]) => value !== undefined)) as T;\n}\n","import { CameraKitConfiguration } from \"./configuration\";\n\n/**\n * Prefix of override key on window object.\n */\nconst windowFieldPrefix = \"__snap_camkit_override__\";\n\n/**\n * Configuration overrides that are stored in session storage.\n */\ntype StoredOverrides = Pick<CameraKitConfiguration, \"wasmEndpointOverride\" | \"logger\" | \"logLevel\" | \"userAgentFlavor\">;\n\nconst configPropertiesToOverride: Array<keyof StoredOverrides> = [\n    \"wasmEndpointOverride\",\n    \"logger\",\n    \"logLevel\",\n    \"userAgentFlavor\",\n];\n\nconfigPropertiesToOverride.forEach((fieldToOverride) => {\n    defineWindowField(fieldToOverride);\n});\n\nfunction defineWindowField(propertyToOverride: keyof StoredOverrides) {\n    if (typeof window === \"undefined\") return;\n\n    Object.defineProperty(window, `${windowFieldPrefix}${propertyToOverride}`, {\n        get() {\n            return getConfigurationOverrides()?.[propertyToOverride];\n        },\n        set(value: any) {\n            const storedOverrides = { ...getConfigurationOverrides(), [propertyToOverride]: value };\n            if (Object.values(storedOverrides).every((value) => typeof value === \"undefined\")) {\n                sessionStorage.removeItem(windowFieldPrefix);\n            } else {\n                sessionStorage.setItem(windowFieldPrefix, JSON.stringify(storedOverrides));\n            }\n        },\n        enumerable: false,\n        configurable: true,\n    });\n}\n\n/**\n * Checks whether there are configuration overrides stored, and if yes, returns them.\n *\n * @internal\n */\nexport function getConfigurationOverrides(): StoredOverrides | undefined {\n    if (!sessionStorage) return undefined;\n    const overridesString = sessionStorage.getItem(windowFieldPrefix);\n    return overridesString && JSON.parse(overridesString);\n}\n","import { InjectableFunction, ServicesFromTokenizedParams } from \"./types\";\n\n/**\n * Create an Injectable factory function with no dependencies (i.e. the factory function has no arguments).\n *\n * Ex:\n * ```ts\n * const createMyService = Injectable(\n *   'MyService',\n *   () => { return ... },\n * )\n * ```\n *\n * @param token A unique string Token which will correspond to the created Service.\n * @param fn A function with no arguments which returns the Service.\n */\nexport function Injectable<Token extends string, Service>(\n    token: Token,\n    fn: () => Service\n): InjectableFunction<any, [], Token, Service>;\n\n/**\n * Create an Injectable factory function with dependencies (i.e. the factory function has arguments).\n *\n * **Note:** the list of dependencies must contain only string literals or string consts.\n *\n * Ex:\n * ```ts\n * const DependencyB = 'DependencyB'\n * const createMyService = Injectable(\n *   'MyService',\n *   ['DependencyA', DependencyB],\n *   (a: A, b: B) => { return ... },\n * )\n * ```\n *\n * @param token A unique string Token which will correspond to the created Service.\n * @param dependencies A *readonly* list of Tokens corresponding to dependencies (i.e. arguments to the Factory), which\n * will be resolved by the Container to which this Injectable is provided.\n * @param fn A function with arguments matching in type and length to the given list of dependencies. When called, it\n * must return the Service.\n */\nexport function Injectable<\n    Token extends string,\n    const Tokens extends readonly string[],\n    Params extends readonly any[],\n    Service\n>(\n    token: Token,\n    dependencies: Tokens,\n    // The function arity (number of arguments) must match the number of dependencies specified – if they don't, we'll\n    // force a compiler error by saying the arguments should be `void[]`. We'll also throw at runtime, so the return\n    // type will be `never`.\n    fn: (...args: Tokens[\"length\"] extends Params[\"length\"] ? Params : void[]) => Service\n): Tokens[\"length\"] extends Params[\"length\"]\n    ? InjectableFunction<ServicesFromTokenizedParams<Tokens, Params>, Tokens, Token, Service>\n    : never;\n\nexport function Injectable(\n    token: string,\n    dependenciesOrFn?: readonly string[] | (() => any),\n    maybeFn?: (...args: any[]) => any\n): InjectableFunction<any, readonly string[], string, any> {\n    const dependencies: string[] = Array.isArray(dependenciesOrFn) ? dependenciesOrFn : [];\n    const fn = typeof dependenciesOrFn === \"function\" ? dependenciesOrFn : maybeFn;\n\n    if (!fn) {\n        throw new TypeError(\n            \"[Injectable] Received invalid arguments. The factory function must be either the second \" +\n                \"or third argument.\"\n        );\n    }\n\n    if (fn.length !== dependencies.length) {\n        throw new TypeError(\n            \"[Injectable] Function arity does not match the number of dependencies. Function has arity \" +\n                `${fn.length}, but ${dependencies.length} dependencies were specified.` +\n                `\\nDependencies: ${JSON.stringify(dependencies)}`\n        );\n    }\n\n    const factory = (...args: any[]) => fn(...args);\n    factory.token = token;\n    factory.dependencies = dependencies;\n    return factory;\n}\n\n/**\n * Create an Injectable factory function without dependencies (i.e. the factory function has no arguments) that appends\n * a Service onto an existing array of Services of the same type.\n *\n * Ex:\n * ```ts\n * import { myServiceFactory, MyService } from './my-service'\n *\n * const createMyService = ConcatInjectable(\n *   myServiceFactory.token,\n *   (): MyService => { return ... },\n * )\n *\n * // Consumers then do:\n * const myConsumingServiceFactory = Injectable(\n *   'myConsumingService',\n *   [ myServiceFactory.token ],\n *   (myServices: MyService[]) => { return ... }\n * )\n * ```\n *\n * @param token A string Token identifying an existing Service that has an Array type, to which will be appended the\n * Service created by this factory function.\n * @param fn A function with no arguments which returns the Service.\n */\nexport function ConcatInjectable<Token extends string, Service>(\n    token: Token,\n    fn: () => Service\n): InjectableFunction<{ [T in keyof Token]: Service[] }, [], Token, Service[]>;\n\n/**\n * Create an Injectable factory function with dependencies (i.e. the factory function has arguments) that appends\n * a Service onto an existing array of Services of the same type.\n *\n * Ex:\n * ```ts\n * import { myServiceFactory, MyService } from './my-service'\n *\n * const createMyService = ConcatInjectable(\n *   myServiceFactory.token,\n *   ['DependencyA', 'DependencyB'],\n *   (a: A, b: B): MyService => { return ... },\n * )\n *\n * // Consumers then do:\n * const myConsumingServiceFactory = Injectable(\n *   'myConsumingService',\n *   [ myServiceFactory.token ],\n *   (myServices: MyService[]) => { return ... }\n * )\n * ```\n *\n * @param token A string Token identifying an existing Service that has an Array type, to which will be appended the\n * Service created by this factory function.\n * @param dependencies A *readonly* list of Tokens corresponding to dependencies (i.e. arguments to the Factory), which\n * will be resolved by the Container to which this Injectable is provided.\n * @param fn A function with no arguments which returns the Service.\n */\nexport function ConcatInjectable<\n    Token extends string,\n    const Tokens extends readonly string[],\n    Params extends readonly any[],\n    Service\n>(\n    token: Token,\n    dependencies: Tokens,\n    fn: (...args: Tokens[\"length\"] extends Params[\"length\"] ? Params : void[]) => Service\n): InjectableFunction<ServicesFromTokenizedParams<Tokens, Params>, Tokens, Token, Service[]>;\n\nexport function ConcatInjectable(\n    token: string,\n    dependenciesOrFn?: readonly string[] | (() => any),\n    maybeFn?: (...args: any[]) => any\n): InjectableFunction<any, readonly string[], string, any[]> {\n    const dependencies: string[] = Array.isArray(dependenciesOrFn) ? dependenciesOrFn : [];\n    const fn = typeof dependenciesOrFn === \"function\" ? dependenciesOrFn : maybeFn;\n\n    if (!fn) {\n        throw new TypeError(\n            \"[ConcatInjectable] Received invalid arguments. The factory function must be either the second \" +\n                \"or third argument.\"\n        );\n    }\n\n    if (fn.length !== dependencies.length) {\n        throw new TypeError(\n            \"[Injectable] Function arity does not match the number of dependencies. Function has arity \" +\n                `${fn.length}, but ${dependencies.length} dependencies were specified.` +\n                `\\nDependencies: ${JSON.stringify(dependencies)}`\n        );\n    }\n\n    const factory = (array: any[], ...args: any[]) => {\n        return array.concat(fn(...args));\n    };\n    factory.token = token;\n    factory.dependencies = [token, ...dependencies];\n    return factory;\n}\n","import { EstimatedLensPerformance } from \"./benchmark/estimateLensPerformanceCluster\";\nimport { copyDefinedProperties } from \"./common/copyDefinedProperties\";\nimport { getConfigurationOverrides } from \"./configurationOverrides\";\nimport { Injectable } from \"./dependency-injection/Injectable\";\nimport { LogLevelName } from \"./logger/logger\";\n\n/**\n * From T, pick the set of properties whose values are optional. Create a new type containing only those properties.\n */\ntype PickOptionals<T> = {\n    [K in keyof T as T[K] extends Exclude<T[K], undefined> ? never : K]: T[K];\n};\n\n/**\n * Defaults are provided for runtime configuration and any optional bootstrap configuration properties which require\n * defaults.\n */\nconst defaultConfiguration: CameraKitRuntimeConfiguration & PickOptionals<CameraKitBootstrapConfiguration> = {\n    // If the applications doesn't provide performance data (e.g. via estimateLensPerformance), we'll use 0 to indicate\n    // no performance estimation occurred. This is indicative of typical performance-targeting logic, which often\n    // defaults to the lowest-tier experience in the absense of performance cluster data.\n    lensPerformance: { cluster: 0, benchmarks: [], webglRendererInfo: \"unknown\" },\n    logger: \"noop\",\n    logLevel: \"info\",\n    shouldUseWorker: true,\n    apiHostname: \"camera-kit-api.snapar.com\",\n    userAgentFlavor: \"release\",\n};\n\ninterface CameraKitRuntimeConfiguration {\n    lensPerformance: EstimatedLensPerformance | Promise<EstimatedLensPerformance>;\n    logger: \"noop\" | \"console\";\n    logLevel: LogLevelName;\n    shouldUseWorker: boolean;\n    apiHostname: CameraKitApiHostname;\n    userAgentFlavor: \"release\" | \"debug\";\n}\n\nexport type CameraKitApiHostname = \"camera-kit-api.snapar.com\" | \"api-kit.snapchat.com\";\n\n/**\n * Configuration which must be provided when calling {@link bootstrapCameraKit}. These values are used to create various\n * CameraKit components.\n *\n * @category Bootstrapping and Configuration\n */\nexport interface CameraKitBootstrapConfiguration {\n    /**\n     * Long-lived token granting your application access to CameraKit APIs. This is found in the SnapKit Dev Portal,\n     * where it's called the API Token.\n     */\n    apiToken: string;\n\n    /**\n     * Determine where to print CameraKit log messages. By default no logs will be printed.\n     *\n     * CameraKit emits log messages to help diagnose and root cause issues that may occur during the development of a\n     * host application. The printing of these can be controlled via the following\n     * options:\n     *  - `noop`: log messages are ignored.\n     *  - `console`: log messages are printed to console.\n     */\n    logger?: \"noop\" | \"console\";\n\n    /**\n     * Log only if a logged entry level is greater than or equal to this level. Here is the order of levels:\n     * error > warn > log = info > debug. Default value is \"info\".\n     */\n    logLevel?: LogLevelName;\n\n    /**\n     * Some lenses may decide to modify their behavior based on the performance of the current environment. If you are\n     * using such lenses, providing an estimation of lens performance may lead to better user experience (especially on\n     * low-performance devices).\n     *\n     * Running the {@link estimateLensPerformance} function will run benchmarks and estimate an appropriate lens\n     * performance cluster (i.e. a performance rating) based on the current environment.\n     *\n     * Lower cluster = worse expected performance capability.\n     *\n     * @example\n     * ```ts\n     * import { bootstrapCameraKit, estimateLensPerformance } from '@snap/camera-kit`\n     *\n     * const cameraKit = await bootstrapCameraKit({\n     *   apiToken: '...',\n     *   lensPerformance: estimateLensPerformance(),\n     * })\n     * ```\n     */\n    lensPerformance?: EstimatedLensPerformance | Promise<EstimatedLensPerformance>;\n\n    /**\n     * In recommended production deployments, the WebAssembly assets required by CameraKit will be downloaded from an\n     * optimized CDN. But sometimes (e.g. during development or within a CI pipeline), it may be necessary to download\n     * these assets from somewhere else.\n     *\n     * This configuration option allows the application to specify URLs to be used for both the WebAssembly and JS glue\n     * file that are used to run and interact with CameraKit's rendering engine.\n     */\n    lensCoreOverrideUrls?: { wasm: string; js: string };\n\n    /**\n     * In recommended production deployments, the WebAssembly assets required by CameraKit will be downloaded from an\n     * optimized CDN. But sometimes during development or within a CI pipeline, it may be necessary to download these\n     * assets from somewhere else. With a provided `wasmEndpointOverride`, asset URLs will be automatically generated\n     * based on this root endpoint.\n     */\n    wasmEndpointOverride?: string;\n\n    /**\n     * Applications may optionally provide a unique identifier called analyticsId. This ID would enable Camera Kit to\n     * improve data reporting and accuracy and to better support potential needs related to an application's lens and\n     * user analytics.\n     */\n    analyticsId?: string;\n}\n\n/**\n * This type represents the result of merging user-supplied config with default config -- as such, it has no nullable\n * fields, making it a more convenient type for other components to use.\n *\n * @internal\n */\nexport type CameraKitConfiguration = CameraKitRuntimeConfiguration & CameraKitBootstrapConfiguration;\n\n/** @internal */\nexport const configurationToken = \"configuration\";\n\n/**\n * Returns true if given browser is iPhone, iPad or iPod.\n */\nfunction isHandledAppleDevice() {\n    // We use the same approach LC uses:\n    // eslint-disable-next-line max-len\n    // https://github.sc-corp.net/Snapchat/LensCore/blob/285ac47cad7fe5268f38d1bab82d51b7b19d6b48/Src/PlatformSpecific/WebAssembly/WebEnvironmentInfo.cpp#L81\n    return (\n        /iPad|iPhone|iPod/.test(navigator.platform) ||\n        (navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 2)\n    );\n}\n\n/** @internal */\nexport const createCameraKitConfigurationFactory = (configuration: CameraKitBootstrapConfiguration) => {\n    // always leave debug mode warning about overrides in console\n    const overrides = getConfigurationOverrides();\n    if (overrides) {\n        console.warn(\"Configuration overrides applied\", overrides);\n    }\n    return Injectable(configurationToken, (): CameraKitConfiguration => {\n        // We'll ensure that we handle errors on any Promises passed as config values, otherwise we either must\n        // handle them separately wherever they're used, or rejections would go unhandled.\n        const safeConfig: CameraKitBootstrapConfiguration = {\n            ...configuration,\n            lensPerformance:\n                configuration.lensPerformance instanceof Promise\n                    ? // Safety: defaultConfiguration.lensPerformance is defined (it's hardcoded above).\n                      configuration.lensPerformance.catch(() => defaultConfiguration.lensPerformance!)\n                    : configuration.lensPerformance,\n        };\n        return {\n            ...defaultConfiguration,\n            // TODO: Safari 17 has an issue with offscreen canvas which results in stuttering effect on iOS.\n            // Once Safari has that fixed, we should remove this check, see https://jira.sc-corp.net/browse/CAMKIT-5985\n            shouldUseWorker: isHandledAppleDevice() ? false : defaultConfiguration.shouldUseWorker,\n            ...copyDefinedProperties(safeConfig),\n            ...copyDefinedProperties(overrides ?? {}),\n        };\n    });\n};\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","module.exports = {\n    \"version\": \"245\",\n    \"buildNumber\": \"206\",\n    \"baseUrl\": \"https://cf-st.sc-cdn.net/d/XE5OEHvRwDItKCjMqOAmW?go=IgsKCTIBBEgBUFxgAQ%3D%3D&uc=92\"\n}\n;","export function getFilename(lensUri: string) {\n    return lensUri.substring(lensUri.lastIndexOf(\"/\") + 1);\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n","import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval, tap, publish, refCount } from 'rxjs';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap(num => console.log(`refCount ${ num }`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap(num => console.log(`publish ${ num }`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the `publish` operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @return A function that returns an Observable that automates the connection\n * to ConnectableObservable.\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n * @deprecated Replaced with the {@link share} operator. How `share` is used\n * will depend on the connectable observable you created just prior to the\n * `refCount` operator.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let connection: Subscription | null = null;\n\n    (source as any)._refCount++;\n\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\n        connection = null;\n        return;\n      }\n\n      ///\n      // Compare the local RefCountSubscriber's connection Subscription to the\n      // connection Subscription on the shared ConnectableObservable. In cases\n      // where the ConnectableObservable source synchronously emits values, and\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n      // execution continues to here before the RefCountOperator has a chance to\n      // supply the RefCountSubscriber with the shared connection Subscription.\n      // For example:\n      // ```\n      // range(0, 10).pipe(\n      //   publish(),\n      //   refCount(),\n      //   take(5),\n      // )\n      // .subscribe();\n      // ```\n      // In order to account for this case, RefCountSubscriber should only dispose\n      // the ConnectableObservable's shared connection Subscription if the\n      // connection Subscription exists, *and* either:\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\n      //      Subscription yet, or,\n      //   b. RefCountSubscriber's connection Subscription reference is identical\n      //      to the shared connection Subscription\n      ///\n\n      const sharedConnection = (source as any)._connection;\n      const conn = connection;\n      connection = null;\n\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\n        sharedConnection.unsubscribe();\n      }\n\n      subscriber.unsubscribe();\n    });\n\n    source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      connection = (source as ConnectableObservable<T>).connect();\n    }\n  });\n}\n","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\n\n/**\n * @class ConnectableObservable<T>\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\n * instead.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n  protected _subject: Subject<T> | null = null;\n  protected _refCount: number = 0;\n  protected _connection: Subscription | null = null;\n\n  /**\n   * @param source The source observable\n   * @param subjectFactory The factory that creates the subject used internally.\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n   * `new ConnectableObservable(source, factory)` is equivalent to\n   * `connectable(source, { connector: factory })`.\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\n   * `source.pipe(share({ connector: factory }))`.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\n    super();\n    // If we have lift, monkey patch that here. This is done so custom observable\n    // types will compose through multicast. Otherwise the resulting observable would\n    // simply be an instance of `ConnectableObservable`.\n    if (hasLift(source)) {\n      this.lift = source.lift;\n    }\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject!;\n  }\n\n  protected _teardown() {\n    this._refCount = 0;\n    const { _connection } = this;\n    this._subject = this._connection = null;\n    _connection?.unsubscribe();\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      const subject = this.getSubject();\n      connection.add(\n        this.source.subscribe(\n          createOperatorSubscriber(\n            subject as any,\n            undefined,\n            () => {\n              this._teardown();\n              subject.complete();\n            },\n            (err) => {\n              this._teardown();\n              subject.error(err);\n            },\n            () => this._teardown()\n          )\n        )\n      );\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n","import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n","import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n","import { Observable } from '../../Observable';\nimport { TimestampProvider } from '../../types';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n\n/**\n * An observable of animation frames\n *\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\n *\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\n * should not be much different or have more overhead than looping over an array of events during\n * a single animation frame. However, if for some reason the developer would like to ensure the\n * execution of animation-related handlers are all executed during the same task by the engine,\n * the `share` operator can be used.\n *\n * This is useful for setting up animations with RxJS.\n *\n * ## Examples\n *\n * Tweening a div to move it on the screen\n *\n * ```ts\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\n *\n * function tween(start: number, end: number, duration: number) {\n *   const diff = end - start;\n *   return animationFrames().pipe(\n *     // Figure out what percentage of time has passed\n *     map(({ elapsed }) => elapsed / duration),\n *     // Take the vector while less than 100%\n *     takeWhile(v => v < 1),\n *     // Finish with 100%\n *     endWith(1),\n *     // Calculate the distance traveled between start and end\n *     map(v => v * diff + start)\n *   );\n * }\n *\n * // Setup a div for us to move around\n * const div = document.createElement('div');\n * document.body.appendChild(div);\n * div.style.position = 'absolute';\n * div.style.width = '40px';\n * div.style.height = '40px';\n * div.style.backgroundColor = 'lime';\n * div.style.transform = 'translate3d(10px, 0, 0)';\n *\n * tween(10, 200, 4000).subscribe(x => {\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\n * });\n * ```\n *\n * Providing a custom timestamp provider\n *\n * ```ts\n * import { animationFrames, TimestampProvider } from 'rxjs';\n *\n * // A custom timestamp provider\n * let now = 0;\n * const customTSProvider: TimestampProvider = {\n *   now() { return now++; }\n * };\n *\n * const source$ = animationFrames(customTSProvider);\n *\n * // Log increasing numbers 0...1...2... on every animation frame.\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\n * ```\n *\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n */\nexport function animationFrames(timestampProvider?: TimestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\n/**\n * Does the work of creating the observable for `animationFrames`.\n * @param timestampProvider The timestamp provider to use to create the observable\n */\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\n    // If no timestamp provider is specified, use performance.now() - as it\n    // will return timestamps 'compatible' with those passed to the run\n    // callback and won't be affected by NTP adjustments, etc.\n    const provider = timestampProvider || performanceTimestampProvider;\n\n    // Capture the start time upon subscription, as the run callback can remain\n    // queued for a considerable period of time and the elapsed time should\n    // represent the time elapsed since subscription - not the time since the\n    // first rendered animation frame.\n    const start = provider.now();\n\n    let id = 0;\n    const run = () => {\n      if (!subscriber.closed) {\n        id = animationFrameProvider.requestAnimationFrame((timestamp: DOMHighResTimeStamp | number) => {\n          id = 0;\n          // Use the provider's timestamp to calculate the elapsed time. Note that\n          // this means - if the caller hasn't passed a provider - that\n          // performance.now() will be used instead of the timestamp that was\n          // passed to the run callback. The reason for this is that the timestamp\n          // passed to the callback can be earlier than the start time, as it\n          // represents the time at which the browser decided it would render any\n          // queued frames - and that time can be earlier the captured start time.\n          const now = provider.now();\n          subscriber.next({\n            timestamp: timestampProvider ? now : timestamp,\n            elapsed: now - start,\n          });\n          run();\n        });\n      }\n    };\n\n    run();\n\n    return () => {\n      if (id) {\n        animationFrameProvider.cancelAnimationFrame(id);\n      }\n    };\n  });\n}\n\n/**\n * In the common case, where the timestamp provided by the rAF API is used,\n * we use this shared observable to reduce overhead.\n */\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n","import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n","import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will stay buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n","let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      immediateProvider.clearImmediate(id);\n      if (scheduler._scheduled === id) {\n        scheduler._scheduled = undefined;\n      }\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\n\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\n */\nexport const asap = asapScheduler;\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n\n    // Otherwise flush the scheduler starting with this action.\n    scheduler.flush(this);\n\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\n    // `TimerHandle`, and generally the return value here isn't really used. So the\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\n    return 0;\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\n\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\n */\nexport const queue = queueScheduler;\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { animationFrameProvider } from './animationFrameProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested animation frame and set the scheduled flag to\n    // undefined so the next AnimationFrameAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      animationFrameProvider.cancelAnimationFrame(id as number);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\n\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\n */\nexport const animationFrame = animationFrameScheduler;\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return 1;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n","/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n","import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n","import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n","import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n","/** prettier */\nimport { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable(obj: any): obj is Observable<unknown> {\n  // The !! is to ensure that this publicly exposed function returns\n  // `false` if something like `null` or `0` is passed.\n  return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n","import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\n\nexport interface LastValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function lastValueFrom<T, D>(source: Observable<T>, config: LastValueFromConfig<D>): Promise<T | D>;\nexport function lastValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * waiting for it to complete, and resolving the returned promise with the\n * last value from the observed stream.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will complete. If the source\n * observable does not complete, you will end up with a promise that is hung up, and\n * potentially all of the state of an async function hanging out in memory. To avoid\n * this situation, look into adding something like {@link timeout}, {@link take},\n * {@link takeWhile}, or {@link takeUntil} amongst others.\n *\n * ## Example\n *\n * Wait for the last value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, take, lastValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000).pipe(take(10));\n *   const finalNumber = await lastValueFrom(source$);\n *   console.log(`The final number is ${ finalNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The final number is 9'\n * ```\n *\n * @see {@link firstValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function lastValueFrom<T, D>(source: Observable<T>, config?: LastValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    let _hasValue = false;\n    let _value: T;\n    source.subscribe({\n      next: (value) => {\n        _value = value;\n        _hasValue = true;\n      },\n      error: reject,\n      complete: () => {\n        if (_hasValue) {\n          resolve(_value);\n        } else if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n  });\n}\n","import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\n\nexport interface FirstValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * and returning a promise that will resolve as soon as the first value\n * arrives from the observable. The subscription will then be closed.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\n * *OR* complete. If the source observable does not emit one value or complete, you will\n * end up with a promise that is hung up, and potentially all of the state of an\n * async function hanging out in memory. To avoid this situation, look into adding\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\n * amongst others.\n *\n * ## Example\n *\n * Wait for the first value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, firstValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000);\n *   const firstNumber = await firstValueFrom(source$);\n *   console.log(`The first number is ${ firstNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The first number is 0'\n * ```\n *\n * @see {@link lastValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    const subscriber = new SafeSubscriber<T>({\n      next: (value) => {\n        resolve(value);\n        subscriber.unsubscribe();\n      },\n      error: reject,\n      complete: () => {\n        if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n    source.subscribe(subscriber);\n  });\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n","/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { isValidDate } from '../util/isDate';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\n  /**\n   * The time allowed between values from the source before timeout is triggered.\n   */\n  each?: number;\n\n  /**\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\n   * by which the first value must arrive from the source before timeout is triggered.\n   */\n  first?: number | Date;\n\n  /**\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n   */\n  scheduler?: SchedulerLike;\n\n  /**\n   * A factory used to create observable to switch to when timeout occurs. Provides\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\n   * exact time triggered the timeout.\n   */\n  with?: (info: TimeoutInfo<T, M>) => O;\n\n  /**\n   * Optional additional metadata you can provide to code that handles\n   * the timeout, will be provided through the {@link TimeoutError}.\n   * This can be used to help identify the source of a timeout or pass along\n   * other information related to the timeout.\n   */\n  meta?: M;\n}\n\nexport interface TimeoutInfo<T, M = unknown> {\n  /** Optional metadata that was provided to the timeout configuration. */\n  readonly meta: M;\n  /** The number of messages seen before the timeout */\n  readonly seen: number;\n  /** The last message seen */\n  readonly lastValue: T | null;\n}\n\n/**\n * An error emitted when a timeout occurs.\n */\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\n  /**\n   * The information provided to the error by the timeout\n   * operation that created the error. Will be `null` if\n   * used directly in non-RxJS code with an empty constructor.\n   * (Note that using this constructor directly is not recommended,\n   * you should create your own errors)\n   */\n  info: TimeoutInfo<T, M> | null;\n}\n\nexport interface TimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\n}\n\n/**\n * An error thrown by the {@link timeout} operator.\n *\n * Provided so users can use as a type and do quality comparisons.\n * We recommend you do not subclass this or create instances of this class directly.\n * If you have need of a error representing a timeout, you should\n * create your own error class and use that.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\n  (_super) =>\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\n      _super(this);\n      this.message = 'Timeout has occurred';\n      this.name = 'TimeoutError';\n      this.info = info;\n    }\n);\n\n/**\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\n * does not push values within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ## Examples\n *\n * Emit a custom error if there is too much time between values\n *\n * ```ts\n * import { interval, timeout, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(900);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => throwError(() => new CustomTimeoutError())\n *   })\n * )\n * .subscribe({\n *   error: console.error\n * });\n * ```\n *\n * Switch to a faster observable if your source is slow.\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * const slow$ = interval(900);\n * const fast$ = interval(500);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => fast$,\n *   })\n * )\n * .subscribe(console.log);\n * ```\n * @param config The configuration for the timeout.\n */\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n\n/**\n * Returns an observable that will error or switch to a different observable if the source does not push values\n * within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ### Handling TimeoutErrors\n *\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\n *\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\n *\n * ## Examples\n *\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * // A random interval that lasts between 0 and 10 seconds per tick\n * const source$ = interval(Math.round(Math.random() * 10_000));\n *\n * source$.pipe(\n *   timeout({ first: 5_000 })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\n * and subscription.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n *\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\n * 5 seconds between any two values after the first.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n */\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\n\n/**\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\n * This is functionally the same as `timeout({ first: someDate })`.\n *\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\n *\n * ![](timeout.png)\n *\n * @param first The date to at which the resulting observable will timeout if the source observable\n * does not emit at least one value.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\n * This is functionally the same as `timeout({ each: milliseconds })`.\n *\n * <span class=\"informal\">Errors if it waits too long between any value</span>\n *\n * ![](timeout.png)\n *\n * @param each The time allowed between each pushed value from the source before the resulting observable\n * will timeout.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * @see {@link timeoutWith}\n *\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it throws an error.\n */\nexport function timeout<T, O extends ObservableInput<any>, M>(\n  config: number | Date | TimeoutConfig<T, O, M>,\n  schedulerArg?: SchedulerLike\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  // Intentionally terse code.\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\n  // we destructure that into what we're going to use, setting important defaults as we do.\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\n  // it will default to the `asyncScheduler`.\n  const {\n    first,\n    each,\n    with: _with = timeoutErrorFactory,\n    scheduler = schedulerArg ?? asyncScheduler,\n    meta = null!,\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate((source, subscriber) => {\n    // This subscription encapsulates our subscription to the\n    // source for this operator. We're capturing it separately,\n    // because if there is a `with` observable to fail over to,\n    // we want to unsubscribe from our original subscription, and\n    // hand of the subscription to that one.\n    let originalSourceSubscription: Subscription;\n    // The subscription for our timeout timer. This changes\n    // every time we get a new value.\n    let timerSubscription: Subscription;\n    // A bit of state we pass to our with and error factories to\n    // tell what the last value we saw was.\n    let lastValue: T | null = null;\n    // A bit of state we pass to the with and error factories to\n    // tell how many values we have seen so far.\n    let seen = 0;\n    const startTimer = (delay: number) => {\n      timerSubscription = executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          try {\n            originalSourceSubscription.unsubscribe();\n            innerFrom(\n              _with!({\n                meta,\n                lastValue,\n                seen,\n              })\n            ).subscribe(subscriber);\n          } catch (err) {\n            subscriber.error(err);\n          }\n        },\n        delay\n      );\n    };\n\n    originalSourceSubscription = source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // clear the timer so we can emit and start another one.\n          timerSubscription?.unsubscribe();\n          seen++;\n          // Emit\n          subscriber.next((lastValue = value));\n          // null | undefined are both < 0. Thanks, JavaScript.\n          each! > 0 && startTimer(each!);\n        },\n        undefined,\n        undefined,\n        () => {\n          if (!timerSubscription?.closed) {\n            timerSubscription?.unsubscribe();\n          }\n          // Be sure not to hold the last value in memory after unsubscription\n          // it could be quite large.\n          lastValue = null;\n        }\n      )\n    );\n\n    // Intentionally terse code.\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\n    // If `first` was provided, and it's a number, then use it.\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\n  });\n}\n\n/**\n * The default function to use to emit an error when timeout occurs and a `with` function\n * is not specified.\n * @param info The information about the timeout to pass along to the error\n */\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\n  throw new TimeoutError(info);\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n","import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { Observable } from '../Observable';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { observeOn } from '../operators/observeOn';\nimport { AsyncSubject } from '../AsyncSubject';\n\nexport function bindCallbackInternals(\n  isNodeStyle: boolean,\n  callbackFunc: any,\n  resultSelector?: any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // The user provided a result selector.\n      return function (this: any, ...args: any[]) {\n        return (bindCallbackInternals(isNodeStyle, callbackFunc, scheduler) as any)\n          .apply(this, args)\n          .pipe(mapOneOrManyArgs(resultSelector as any));\n      };\n    }\n  }\n\n  // If a scheduler was passed, use our `subscribeOn` and `observeOn` operators\n  // to compose that behavior for the user.\n  if (scheduler) {\n    return function (this: any, ...args: any[]) {\n      return (bindCallbackInternals(isNodeStyle, callbackFunc) as any)\n        .apply(this, args)\n        .pipe(subscribeOn(scheduler!), observeOn(scheduler!));\n    };\n  }\n\n  return function (this: any, ...args: any[]): Observable<any> {\n    // We're using AsyncSubject, because it emits when it completes,\n    // and it will play the value to all late-arriving subscribers.\n    const subject = new AsyncSubject<any>();\n\n    // If this is true, then we haven't called our function yet.\n    let uninitialized = true;\n    return new Observable((subscriber) => {\n      // Add our subscriber to the subject.\n      const subs = subject.subscribe(subscriber);\n\n      if (uninitialized) {\n        uninitialized = false;\n        // We're going to execute the bound function\n        // This bit is to signal that we are hitting the callback asynchronously.\n        // Because we don't have any anti-\"Zalgo\" guarantees with whatever\n        // function we are handed, we use this bit to figure out whether or not\n        // we are getting hit in a callback synchronously during our call.\n        let isAsync = false;\n\n        // This is used to signal that the callback completed synchronously.\n        let isComplete = false;\n\n        // Call our function that has a callback. If at any time during this\n        // call, an error is thrown, it will be caught by the Observable\n        // subscription process and sent to the consumer.\n        callbackFunc.apply(\n          // Pass the appropriate `this` context.\n          this,\n          [\n            // Pass the arguments.\n            ...args,\n            // And our callback handler.\n            (...results: any[]) => {\n              if (isNodeStyle) {\n                // If this is a node callback, shift the first value off of the\n                // results and check it, as it is the error argument. By shifting,\n                // we leave only the argument(s) we want to pass to the consumer.\n                const err = results.shift();\n                if (err != null) {\n                  subject.error(err);\n                  // If we've errored, we can stop processing this function\n                  // as there's nothing else to do. Just return to escape.\n                  return;\n                }\n              }\n              // If we have one argument, notify the consumer\n              // of it as a single value, otherwise, if there's more than one, pass\n              // them as an array. Note that if there are no arguments, `undefined`\n              // will be emitted.\n              subject.next(1 < results.length ? results : results[0]);\n              // Flip this flag, so we know we can complete it in the synchronous\n              // case below.\n              isComplete = true;\n              // If we're not asynchronous, we need to defer the `complete` call\n              // until after the call to the function is over. This is because an\n              // error could be thrown in the function after it calls our callback,\n              // and if that is the case, if we complete here, we are unable to notify\n              // the consumer than an error occurred.\n              if (isAsync) {\n                subject.complete();\n              }\n            },\n          ]\n        );\n        // If we flipped `isComplete` during the call, we resolved synchronously,\n        // notify complete, because we skipped it in the callback to wait\n        // to make sure there were no errors during the call.\n        if (isComplete) {\n          subject.complete();\n        }\n\n        // We're no longer synchronous. If the callback is called at this point\n        // we can notify complete on the spot.\n        isAsync = true;\n      }\n\n      // Return the subscription from adding our subscriber to the subject.\n      return subs;\n    });\n  };\n}\n","/* @prettier */\nimport { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some object and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (n, s, cb) => {\n *   cb(n, s, { someProperty: 'someValue' });\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction(5, 'some string').subscribe((values) => {\n *   console.log(values); // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback, asyncScheduler } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, asyncScheduler);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod\n *   .call(someObject) // make sure methodWithCallback has access to someObject\n *   .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n */\nexport function bindCallback(\n  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  return bindCallbackInternals(false, callbackFunc, resultSelector, scheduler);\n}\n","/* @prettier */\nimport { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindNodeCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n */\nexport function bindNodeCallback(\n  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any> {\n  return bindCallbackInternals(true, callbackFunc, resultSelector, scheduler);\n}\n","const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n","export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an empty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n","import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n","import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n","import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInput } from '../types';\nimport { innerFrom } from './innerFrom';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create an Observable only when the Observer\n * subscribes. It waits until an Observer subscribes to it, calls the given\n * factory function to get an Observable -- where a factory function typically\n * generates a new Observable -- and subscribes the Observer to this Observable.\n * In case the factory function returns a falsy value, then EMPTY is used as\n * Observable instead. Last but not least, an exception during the factory\n * function call is transferred to the Observer by calling `error`.\n *\n * ## Example\n *\n * Subscribe to either an Observable of clicks or an Observable of interval, at random\n *\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(() => {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): ObservableInput} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n */\nexport function defer<R extends ObservableInput<any>>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>((subscriber) => {\n    innerFrom(observableFactory()).subscribe(subscriber);\n  });\n}\n","import { Connectable, ObservableInput, SubjectLike } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\n\nexport interface ConnectableConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n  /**\n   * If true, the resulting observable will reset internal state upon disconnection\n   * and return to a \"cold\" state. This allows the resulting observable to be\n   * reconnected.\n   * If false, upon disconnection, the connecting subject will remain the\n   * connecting subject, meaning the resulting observable will not go \"cold\" again,\n   * and subsequent repeats or resubscriptions will resubscribe to that same subject.\n   */\n  resetOnDisconnect?: boolean;\n}\n\n/**\n * The default configuration for `connectable`.\n */\nconst DEFAULT_CONFIG: ConnectableConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n  resetOnDisconnect: true,\n};\n\n/**\n * Creates an observable that multicasts once `connect()` is called on it.\n *\n * @param source The observable source to make connectable.\n * @param config The configuration object for `connectable`.\n * @returns A \"connectable\" observable, that has a `connect()` method, that you must call to\n * connect the source to all consumers through the subject provided as the connector.\n */\nexport function connectable<T>(source: ObservableInput<T>, config: ConnectableConfig<T> = DEFAULT_CONFIG): Connectable<T> {\n  // The subscription representing the connection.\n  let connection: Subscription | null = null;\n  const { connector, resetOnDisconnect = true } = config;\n  let subject = connector();\n\n  const result: any = new Observable<T>((subscriber) => {\n    return subject.subscribe(subscriber);\n  });\n\n  // Define the `connect` function. This is what users must call\n  // in order to \"connect\" the source to the subject that is\n  // multicasting it.\n  result.connect = () => {\n    if (!connection || connection.closed) {\n      connection = defer(() => source).subscribe(subject);\n      if (resetOnDisconnect) {\n        connection.add(() => (subject = connector()));\n      }\n    }\n    return connection;\n  };\n\n  return result;\n}\n","import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInputTuple, ObservableInput } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nimport { AnyCatcher } from '../AnyCatcher';\n\n// forkJoin(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function forkJoin<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// forkJoin(null | undefined)\nexport function forkJoin(scheduler: null | undefined): Observable<never>;\n\n// forkJoin([a, b, c])\nexport function forkJoin(sources: readonly []): Observable<never>;\nexport function forkJoin<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\nexport function forkJoin<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n\n// forkJoin(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n// forkJoin({a, b, c})\nexport function forkJoin(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function forkJoin<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted;\n * complete immediately if an empty array is passed.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided (e.g. an empty array is passed),\n * then the resulting stream will complete immediately.\n *\n * `forkJoin` will wait for all passed observables to emit and complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, then the resulting\n * array will have `n` values, where the first value is the last one emitted by the first observable,\n * second value is the last one emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, then the resulting\n * objects will have the same keys as the dictionary passed, with their last values they have emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of the lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for the resulting array to have the same length as the number of input observables, whenever any of\n * the given observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete either,\n * unless at any point some other observable completes without emitting a value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all given observables\n * have to emit something at least once and complete.\n *\n * If any given observable errors at some point, `forkJoin` will error as well and immediately unsubscribe\n * from the other observables.\n *\n * Optionally `forkJoin` accepts a `resultSelector` function, that will be called with values which normally\n * would land in the emitted array. Whatever is returned by the `resultSelector`, will appear in the output\n * observable instead. This means that the default `resultSelector` can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that the `resultSelector` will be called only\n * when `forkJoin` is supposed to emit a result.\n *\n * ## Examples\n *\n * Use `forkJoin` with a dictionary of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000)\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * Use `forkJoin` with an array of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000)\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} args Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(...args: any[]): Observable<any> {\n  const resultSelector = popResultSelector(args);\n  const { args: sources, keys } = argsArgArrayOrObject(args);\n  const result = new Observable((subscriber) => {\n    const { length } = sources;\n    if (!length) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(length);\n    let remainingCompletions = length;\n    let remainingEmissions = length;\n    for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n      let hasValue = false;\n      innerFrom(sources[sourceIndex]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            if (!hasValue) {\n              hasValue = true;\n              remainingEmissions--;\n            }\n            values[sourceIndex] = value;\n          },\n          () => remainingCompletions--,\n          undefined,\n          () => {\n            if (!remainingCompletions || !hasValue) {\n              if (!remainingEmissions) {\n                subscriber.next(keys ? createObject(keys, values) : values);\n              }\n              subscriber.complete();\n            }\n          }\n        )\n      );\n    }\n  });\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * // note optional configuration parameter which will be passed to addEventListener\n * const clicksInDocument = fromEvent(document, 'click', { capture: true });\n * const clicksInDiv = fromEvent(div, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void\n): Observable<T>;\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * than one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Examples\n *\n * Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs 'EVENT_TYPE' 'EVENT_MESSAGE' to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + ' --- ' + eventMessage // without that function only 'EVENT_TYPE'\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'EVENT_TYPE --- EVENT_MESSAGE'\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T | T[]> {\n  if (resultSelector) {\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  return new Observable<T | T[]>((subscriber) => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n    const retValue = addHandler(handler);\n    return isFunction(removeHandler) ? () => removeHandler(handler, retValue) : undefined;\n  });\n}\n","import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { defer } from './defer';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\n\ntype ConditionFunc<S> = (state: S) => boolean;\ntype IterateFunc<S> = (state: S) => S;\ntype ResultFunc<S, T> = (state: S) => T;\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Produces sequence of numbers\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Use `asapScheduler`\n *\n * ```ts\n * import { generate, asapScheduler } from 'rxjs';\n *\n * const result = generate(1, x => x < 5, x => x * 2, x => x + 1, asapScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 2\n * // 3\n * // 5\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<T, S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  resultSelector: ResultFunc<S, T>,\n  scheduler?: SchedulerLike\n): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * ![](generate.png)\n *\n * `generate` allows you to create a stream of values generated with a loop very similar to\n * a traditional for loop. The first argument of `generate` is a beginning value. The second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * then the loop continues, if not, it stops. The third value is a function which takes the\n * previously defined value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in a traditional for loop: the first expression\n * initializes some state (for example, a numeric index), the second tests if the loop can perform the next\n * iteration (for example, if the index is lower than 10) and the third states how the defined value\n * will be modified on every step (for example, the index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First of all, the condition function is ran. If it returns true, then the Observable\n * emits the currently stored value (initial value at the first iteration) and finally updates\n * that value with iterate function. If at some point the condition returns false, then the Observable\n * completes at that moment.\n *\n * Optionally you can pass a fourth parameter to `generate` - a result selector function which allows you\n * to immediately map the value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * a single object to the operator instead where the object has the properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, or in other words the resulting Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of a multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is a `resultSelector`\n * function or not). In case of a single-parameter call, you can provide it as a\n * `scheduler` property on the object passed to the operator. In both cases, a scheduler decides when\n * the next iteration of the loop will happen and therefore when the next value will be emitted\n * by the Observable. For example, to ensure that each value is pushed to the Observer\n * on a separate task in the event loop, you could use the `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * ## Examples\n *\n * Use with condition and iterate functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * Use with condition, iterate and resultSelector functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 'Complete!'\n * ```\n *\n * Use with options object\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 'Complete!'\n * ```\n *\n * Use options object without condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!') // This will never run\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n * ```\n *\n * @see {@link from}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  scheduler?: SchedulerLike\n): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Use options object with condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Use options object with condition and iterate function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1,\n *   resultSelector: x => x\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(\n  initialStateOrOptions: S | GenerateOptions<T, S>,\n  condition?: ConditionFunc<S>,\n  iterate?: IterateFunc<S>,\n  resultSelectorOrScheduler?: ResultFunc<S, T> | SchedulerLike,\n  scheduler?: SchedulerLike\n): Observable<T> {\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  // TODO: Remove this as we move away from deprecated signatures\n  // and move towards a configuration object argument.\n  if (arguments.length === 1) {\n    // If we only have one argument, we can assume it is a configuration object.\n    // Note that folks not using TypeScript may trip over this.\n    ({\n      initialState,\n      condition,\n      iterate,\n      resultSelector = identity as ResultFunc<S, T>,\n      scheduler,\n    } = initialStateOrOptions as GenerateOptions<T, S>);\n  } else {\n    // Deprecated arguments path. Figure out what the user\n    // passed and set it here.\n    initialState = initialStateOrOptions as S;\n    if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\n      resultSelector = identity as ResultFunc<S, T>;\n      scheduler = resultSelectorOrScheduler as SchedulerLike;\n    } else {\n      resultSelector = resultSelectorOrScheduler as ResultFunc<S, T>;\n    }\n  }\n\n  // The actual generator used to \"generate\" values.\n  function* gen() {\n    for (let state = initialState; !condition || condition(state); state = iterate!(state)) {\n      yield resultSelector(state);\n    }\n  }\n\n  // We use `defer` because we want to defer the creation of the iterator from the iterable.\n  return defer(\n    (scheduler\n      ? // If a scheduler was provided, use `scheduleIterable` to ensure that iteration/generation\n        // happens on the scheduler.\n        () => scheduleIterable(gen(), scheduler!)\n      : // Otherwise, if there's no scheduler, we can just use the generator function directly in\n        // `defer` and executing it will return the generator (which is iterable).\n        gen) as () => ObservableInput<T>\n  );\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { ObservableInput } from '../types';\n\n/**\n * Checks a boolean at subscription time, and chooses between one of two observable sources\n *\n * `iif` expects a function that returns a boolean (the `condition` function), and two sources,\n * the `trueResult` and the `falseResult`, and returns an Observable.\n *\n * At the moment of subscription, the `condition` function is called. If the result is `true`, the\n * subscription will be to the source passed as the `trueResult`, otherwise, the subscription will be\n * to the source passed as the `falseResult`.\n *\n * If you need to check more than two options to choose between more than one observable, have a look at the {@link defer} creation method.\n *\n * ## Examples\n *\n * Change at runtime which Observable will be subscribed\n *\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'first'\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'second'\n * ```\n *\n * Control access to an Observable\n *\n * ```ts\n * import { iif, of, EMPTY } from 'rxjs';\n *\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'),\n *   EMPTY\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'It seems you have an access...'\n * // 'The end'\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'The end'\n * ```\n *\n * @see {@link defer}\n *\n * @param condition Condition which Observable should be chosen.\n * @param trueResult An Observable that will be subscribed if condition is true.\n * @param falseResult An Observable that will be subscribed if condition is false.\n * @return An observable that proxies to `trueResult` or `falseResult`, depending on the result of the `condition` function.\n */\nexport function iif<T, F>(condition: () => boolean, trueResult: ObservableInput<T>, falseResult: ObservableInput<F>): Observable<T | F> {\n  return defer(() => (condition() ? trueResult : falseResult));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n","import { Observable } from '../Observable';\nimport { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike } from '../types';\nimport { timer } from './timer';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.</span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n *\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n */\nexport function interval(period = 0, scheduler: SchedulerLike = asyncScheduler): Observable<number> {\n  if (period < 0) {\n    // We cannot schedule an interval in the past.\n    period = 0;\n  }\n\n  return timer(period, period, scheduler);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console every time the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n *\n * Emit the number 7, then never emit anything else (not even complete)\n *\n * ```ts\n * import { NEVER, startWith } from 'rxjs';\n *\n * const info = () => console.log('Will not be called');\n *\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe({\n *   next: x => console.log(x),\n *   error: info,\n *   complete: info\n * });\n * ```\n *\n * @see {@link Observable}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\n */\nexport function never() {\n  return NEVER;\n}\n","const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from './innerFrom';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function onErrorResumeNext<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits a complete or an error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { onErrorResumeNext, of, map } from 'rxjs';\n *\n * onErrorResumeNext(\n *   of(1, 2, 3, 0).pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *       return 10 / x;\n *     })\n *   ),\n *   of(1, 2, 3)\n * )\n * .subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(err),     // Will never be called.\n *   complete: () => console.log('done')\n * });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'done'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): Observable<A[number]> {\n  const nextSources: ObservableInputTuple<A> = argsOrArgArray(sources) as any;\n\n  return new Observable((subscriber) => {\n    let sourceIndex = 0;\n    const subscribeNext = () => {\n      if (sourceIndex < nextSources.length) {\n        let nextSource: Observable<A[number]>;\n        try {\n          nextSource = innerFrom(nextSources[sourceIndex++]);\n        } catch (err) {\n          subscribeNext();\n          return;\n        }\n        const innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n        nextSource.subscribe(innerSubscriber);\n        innerSubscriber.add(subscribeNext);\n      } else {\n        subscriber.complete();\n      }\n    };\n    subscribeNext();\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { from } from './from';\n\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(arr: readonly T[], scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<O extends Record<string, unknown>>(obj: O, scheduler?: SchedulerLike): Observable<[keyof O, O[keyof O]]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(iterable: Iterable<T>, scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(\n  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,\n  scheduler?: SchedulerLike\n): Observable<[never, never]>;\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * ![](pairs.png)\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default, these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * ## Example\n *\n * Converts an object to an Observable\n *\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj).subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // ['foo', 42]\n * // ['bar', 56]\n * // ['baz', 78]\n * // 'Complete!'\n * ```\n *\n * ### Object.entries required\n *\n * In IE, you will need to polyfill `Object.entries` in order to use this.\n * [MDN has a polyfill here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries)\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(obj: any, scheduler?: SchedulerLike) {\n  return from(Object.entries(obj), scheduler as any);\n}\n","export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {\n  return (value: T, index: number) => !pred.call(thisArg, value, index); \n}","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n","import { not } from '../util/not';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, U extends T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => value is U,\n  thisArg: A\n): [Observable<U>, Observable<Exclude<T, U>>];\nexport function partition<T, U extends T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => value is U\n): [Observable<U>, Observable<Exclude<T, U>>];\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => boolean,\n  thisArg: A\n): [Observable<T>, Observable<T>];\nexport function partition<T>(source: ObservableInput<T>, predicate: (value: T, index: number) => boolean): [Observable<T>, Observable<T>];\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n *\n * Partition a set of numbers into odds and evens observables\n *\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, value => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (this: any, value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))] as [\n    Observable<T>,\n    Observable<T>\n  ];\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { Subscriber } from '../Subscriber';\n\nexport function race<T extends readonly unknown[]>(inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function race<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\n\n/**\n * Returns an observable that mirrors the first source observable to emit an item.\n *\n * ![](race.png)\n *\n * `race` returns an observable, that when subscribed to, subscribes to all source observables immediately.\n * As soon as one of the source observables emits a value, the result unsubscribes from the other sources.\n * The resulting observable will forward all notifications, including error and completion, from the \"winning\"\n * source observable.\n *\n * If one of the used source observable throws an errors before a first notification\n * the race operator will also throw an error, no matter if another source observable\n * could potentially win the race.\n *\n * `race` can be useful for selecting the response from the fastest network connection for\n * HTTP or WebSockets. `race` can also be useful for switching observable context based on user\n * input.\n *\n * ## Example\n *\n * Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { interval, map, race } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * race(obs1, obs2, obs3)\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n */\nexport function race<T>(...sources: (ObservableInput<T> | ObservableInput<T>[])[]): Observable<any> {\n  sources = argsOrArgArray(sources);\n  // If only one source was passed, just return it. Otherwise return the race.\n  return sources.length === 1 ? innerFrom(sources[0] as ObservableInput<T>) : new Observable<T>(raceInit(sources as ObservableInput<T>[]));\n}\n\n/**\n * An observable initializer function for both the static version and the\n * operator version of race.\n * @param sources The sources to race\n */\nexport function raceInit<T>(sources: ObservableInput<T>[]) {\n  return (subscriber: Subscriber<T>) => {\n    let subscriptions: Subscription[] = [];\n\n    // Subscribe to all of the sources. Note that we are checking `subscriptions` here\n    // Is is an array of all actively \"racing\" subscriptions, and it is `null` after the\n    // race has been won. So, if we have racer that synchronously \"wins\", this loop will\n    // stop before it subscribes to any more.\n    for (let i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      subscriptions.push(\n        innerFrom(sources[i] as ObservableInput<T>).subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            if (subscriptions) {\n              // We're still racing, but we won! So unsubscribe\n              // all other subscriptions that we have, except this one.\n              for (let s = 0; s < subscriptions.length; s++) {\n                s !== i && subscriptions[s].unsubscribe();\n              }\n              subscriptions = null!;\n            }\n            subscriber.next(value);\n          })\n        )\n      );\n    }\n  };\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { EMPTY } from './empty';\n\nexport function range(start: number, count?: number): Observable<number>;\n\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. Use `range(start, count).pipe(observeOn(scheduler))` instead. Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function range(start: number, count: number | undefined, scheduler: SchedulerLike): Observable<number>;\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n *\n * Produce a range of numbers\n *\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 3);\n *\n * numbers.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // 'Complete!'\n * ```\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n */\nexport function range(start: number, count?: number, scheduler?: SchedulerLike): Observable<number> {\n  if (count == null) {\n    // If one argument was passed, it's the count, not the start.\n    count = start;\n    start = 0;\n  }\n\n  if (count <= 0) {\n    // No count? We're going nowhere. Return EMPTY.\n    return EMPTY;\n  }\n\n  // Where the range should stop.\n  const end = count + start;\n\n  return new Observable(\n    scheduler\n      ? // The deprecated scheduled path.\n        (subscriber) => {\n          let n = start;\n          return scheduler.schedule(function () {\n            if (n < end) {\n              subscriber.next(n++);\n              this.schedule();\n            } else {\n              subscriber.complete();\n            }\n          });\n        }\n      : // Standard synchronous range.\n        (subscriber) => {\n          let n = start;\n          while (n < end && !subscriber.closed) {\n            subscriber.next(n++);\n          }\n          subscriber.complete();\n        }\n  );\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput, ObservedValueOf } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T extends ObservableInput<any>>(\n  resourceFactory: () => Unsubscribable | void,\n  observableFactory: (resource: Unsubscribable | void) => T | void\n): Observable<ObservedValueOf<T>> {\n  return new Observable<ObservedValueOf<T>>((subscriber) => {\n    const resource = resourceFactory();\n    const result = observableFactory(resource);\n    const source = result ? innerFrom(result) : EMPTY;\n    source.subscribe(subscriber);\n    return () => {\n      // NOTE: Optional chaining did not work here.\n      // Related TS Issue: https://github.com/microsoft/TypeScript/issues/40818\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { EMPTY } from './empty';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { popResultSelector } from '../util/args';\n\nexport function zip<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A>;\nexport function zip<A extends readonly unknown[], R>(\n  sources: [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\nexport function zip<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\nexport function zip<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n *\n * Combine age and name from different sources\n *\n * ```ts\n * import { of, zip, map } from 'rxjs';\n *\n * const age$ = of(27, 25, 29);\n * const name$ = of('Foo', 'Bar', 'Beer');\n * const isDev$ = of(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev }))\n * )\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n *\n * @param sources\n * @return {Observable<R>}\n */\nexport function zip(...args: unknown[]): Observable<unknown> {\n  const resultSelector = popResultSelector(args);\n\n  const sources = argsOrArgArray(args) as Observable<unknown>[];\n\n  return sources.length\n    ? new Observable<unknown[]>((subscriber) => {\n        // A collection of buffers of values from each source.\n        // Keyed by the same index with which the sources were passed in.\n        let buffers: unknown[][] = sources.map(() => []);\n\n        // An array of flags of whether or not the sources have completed.\n        // This is used to check to see if we should complete the result.\n        // Keyed by the same index with which the sources were passed in.\n        let completed = sources.map(() => false);\n\n        // When everything is done, release the arrays above.\n        subscriber.add(() => {\n          buffers = completed = null!;\n        });\n\n        // Loop over our sources and subscribe to each one. The index `i` is\n        // especially important here, because we use it in closures below to\n        // access the related buffers and completion properties\n        for (let sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {\n          innerFrom(sources[sourceIndex]).subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                buffers[sourceIndex].push(value);\n                // if every buffer has at least one value in it, then we\n                // can shift out the oldest value from each buffer and emit\n                // them as an array.\n                if (buffers.every((buffer) => buffer.length)) {\n                  const result: any = buffers.map((buffer) => buffer.shift()!);\n                  // Emit the array. If theres' a result selector, use that.\n                  subscriber.next(resultSelector ? resultSelector(...result) : result);\n                  // If any one of the sources is both complete and has an empty buffer\n                  // then we complete the result. This is because we cannot possibly have\n                  // any more values to zip together.\n                  if (buffers.some((buffer, i) => !buffer.length && completed[i])) {\n                    subscriber.complete();\n                  }\n                }\n              },\n              () => {\n                // This source completed. Mark it as complete so we can check it later\n                // if we have to.\n                completed[sourceIndex] = true;\n                // But, if this complete source has nothing in its buffer, then we\n                // can complete the result, because we can't possibly have any more\n                // values from this to zip together with the other values.\n                !buffers[sourceIndex].length && subscriber.complete();\n              }\n            )\n          );\n        }\n\n        // When everything is done, release the arrays above.\n        return () => {\n          buffers = completed = null!;\n        };\n      })\n    : EMPTY;\n}\n","import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\n\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.svg)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, audit, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function audit<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    let durationSubscriber: Subscriber<any> | null = null;\n    let isComplete = false;\n\n    const endDuration = () => {\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n      isComplete && subscriber.complete();\n    };\n\n    const cleanupDuration = () => {\n      durationSubscriber = null;\n      isComplete && subscriber.complete();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          lastValue = value;\n          if (!durationSubscriber) {\n            innerFrom(durationSelector(value)).subscribe(\n              (durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration))\n            );\n          }\n        },\n        () => {\n          isComplete = true;\n          (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, auditTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n","import { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * `ObservableInput` (that internally gets converted to an Observable)\n * emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```ts\n * import { fromEvent, interval, buffer } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const intervalEvents = interval(1000);\n * const buffered = intervalEvents.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param closingNotifier An `ObservableInput` that signals the\n * buffer to be emitted on the output Observable.\n * @return A function that returns an Observable of buffers, which are arrays\n * of values.\n */\nexport function buffer<T>(closingNotifier: ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The current buffered values.\n    let currentBuffer: T[] = [];\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => currentBuffer.push(value),\n        () => {\n          subscriber.next(currentBuffer);\n          subscriber.complete();\n        }\n      )\n    );\n\n    // Subscribe to the closing notifier.\n    innerFrom(closingNotifier).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          // Start a new buffer and emit the previous one.\n          const b = currentBuffer;\n          currentBuffer = [];\n          subscriber.next(b);\n        },\n        noop\n      )\n    );\n\n    return () => {\n      // Ensure buffered values are released on finalization.\n      currentBuffer = null!;\n    };\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number | null = null): OperatorFunction<T, T[]> {\n  // If no `startBufferEvery` value was supplied, then we're\n  // opening and closing on the bufferSize itself.\n  startBufferEvery = startBufferEvery ?? bufferSize;\n\n  return operate((source, subscriber) => {\n    let buffers: T[][] = [];\n    let count = 0;\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          let toEmit: T[][] | null = null;\n\n          // Check to see if we need to start a buffer.\n          // This will start one at the first value, and then\n          // a new one every N after that.\n          if (count++ % startBufferEvery! === 0) {\n            buffers.push([]);\n          }\n\n          // Push our value into our active buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n            // Check to see if we're over the bufferSize\n            // if we are, record it so we can emit it later.\n            // If we emitted it now and removed it, it would\n            // mutate the `buffers` array while we're looping\n            // over it.\n            if (bufferSize <= buffer.length) {\n              toEmit = toEmit ?? [];\n              toEmit.push(buffer);\n            }\n          }\n\n          if (toEmit) {\n            // We have found some buffers that are over the\n            // `bufferSize`. Emit them, and remove them from our\n            // buffers list.\n            for (const buffer of toEmit) {\n              arrRemove(buffers, buffer);\n              subscriber.next(buffer);\n            }\n          }\n        },\n        () => {\n          // When the source completes, emit all of our\n          // active buffers.\n          for (const buffer of buffers) {\n            subscriber.next(buffer);\n          }\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Clean up our memory when we finalize\n          buffers = null!;\n        }\n      )\n    );\n  });\n}\n","import { Subscription } from '../Subscription';\nimport { OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  maxBufferSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * ![](bufferTime.png)\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * ## Examples\n *\n * Every second, emit an array of the recent click events\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(1000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds, emit the click events from the next 2 seconds\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const bufferCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxBufferSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active buffers, their related subscriptions, and removal functions.\n    let bufferRecords: { buffer: T[]; subs: Subscription }[] | null = [];\n    // If true, it means that every time we emit a buffer, we want to start a new buffer\n    // this is only really used for when *just* the buffer time span is passed.\n    let restartOnEmit = false;\n\n    /**\n     * Does the work of emitting the buffer from the record, ensuring that the\n     * record is removed before the emission so reentrant code (from some custom scheduling, perhaps)\n     * does not alter the buffer. Also checks to see if a new buffer needs to be started\n     * after the emit.\n     */\n    const emit = (record: { buffer: T[]; subs: Subscription }) => {\n      const { buffer, subs } = record;\n      subs.unsubscribe();\n      arrRemove(bufferRecords, record);\n      subscriber.next(buffer);\n      restartOnEmit && startBuffer();\n    };\n\n    /**\n     * Called every time we start a new buffer. This does\n     * the work of scheduling a job at the requested bufferTimeSpan\n     * that will emit the buffer (if it's not unsubscribed before then).\n     */\n    const startBuffer = () => {\n      if (bufferRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const buffer: T[] = [];\n        const record = {\n          buffer,\n          subs,\n        };\n        bufferRecords.push(record);\n        executeSchedule(subs, scheduler, () => emit(record), bufferTimeSpan);\n      }\n    };\n\n    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n      // The user passed both a bufferTimeSpan (required), and a creation interval\n      // That means we need to start new buffers on the interval, and those buffers need\n      // to wait the required time span before emitting.\n      executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n    } else {\n      restartOnEmit = true;\n    }\n\n    startBuffer();\n\n    const bufferTimeSubscriber = createOperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Copy the records, so if we need to remove one we\n        // don't mutate the array. It's hard, but not impossible to\n        // set up a buffer time that could mutate the array and\n        // cause issues here.\n        const recordsCopy = bufferRecords!.slice();\n        for (const record of recordsCopy) {\n          // Loop over all buffers and\n          const { buffer } = record;\n          buffer.push(value);\n          // If the buffer is over the max size, we need to emit it.\n          maxBufferSize <= buffer.length && emit(record);\n        }\n      },\n      () => {\n        // The source completed, emit all of the active\n        // buffers we have before we complete.\n        while (bufferRecords?.length) {\n          subscriber.next(bufferRecords.shift()!.buffer);\n        }\n        bufferTimeSubscriber?.unsubscribe();\n        subscriber.complete();\n        subscriber.unsubscribe();\n      },\n      // Pass all errors through to consumer.\n      undefined,\n      // Clean up\n      () => (bufferRecords = null)\n    );\n\n    source.subscribe(bufferTimeSubscriber);\n  });\n}\n","import { Subscription } from '../Subscription';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * ![](bufferToggle.png)\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, bufferToggle, EMPTY } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const buffered = clicks.pipe(bufferToggle(openings, i =>\n *   i % 2 ? interval(500) : EMPTY\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferToggle<T, O>(\n  openings: ObservableInput<O>,\n  closingSelector: (value: O) => ObservableInput<any>\n): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    const buffers: T[][] = [];\n\n    // Subscribe to the openings notifier first\n    innerFrom(openings).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (openValue) => {\n          const buffer: T[] = [];\n          buffers.push(buffer);\n          // We use this composite subscription, so that\n          // when the closing notifier emits, we can tear it down.\n          const closingSubscription = new Subscription();\n\n          const emitBuffer = () => {\n            arrRemove(buffers, buffer);\n            subscriber.next(buffer);\n            closingSubscription.unsubscribe();\n          };\n\n          // The line below will add the subscription to the parent subscriber *and* the closing subscription.\n          closingSubscription.add(innerFrom(closingSelector(openValue)).subscribe(createOperatorSubscriber(subscriber, emitBuffer, noop)));\n        },\n        noop\n      )\n    );\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Value from our source. Add it to all pending buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n          }\n        },\n        () => {\n          // Source complete. Emit all pending buffers.\n          while (buffers.length > 0) {\n            subscriber.next(buffers.shift()!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.svg)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, bufferWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(\n *   bufferWhen(() => interval(1000 + Math.random() * 4000))\n * );\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The buffer we keep and emit.\n    let buffer: T[] | null = null;\n    // A reference to the subscriber used to subscribe to\n    // the closing notifier. We need to hold this so we can\n    // end the subscription after the first notification.\n    let closingSubscriber: Subscriber<T> | null = null;\n\n    // Ends the previous closing notifier subscription, so it\n    // terminates after the first emission, then emits\n    // the current buffer  if there is one, starts a new buffer, and starts a\n    // new closing notifier.\n    const openBuffer = () => {\n      // Make sure to finalize the closing subscription, we only cared\n      // about one notification.\n      closingSubscriber?.unsubscribe();\n      // emit the buffer if we have one, and start a new buffer.\n      const b = buffer;\n      buffer = [];\n      b && subscriber.next(b);\n\n      // Get a new closing notifier and subscribe to it.\n      innerFrom(closingSelector()).subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openBuffer, noop)));\n    };\n\n    // Start the first buffer.\n    openBuffer();\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Add every new value to the current buffer.\n        (value) => buffer?.push(value),\n        // When we complete, emit the buffer if we have one,\n        // then complete the result.\n        () => {\n          buffer && subscriber.next(buffer);\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        // Release memory on finalization\n        () => (buffer = closingSubscriber = null!)\n      )\n    );\n  });\n}\n","import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A basic scan operation. This is used for `scan` and `reduce`.\n * @param accumulator The accumulator to use\n * @param seed The seed value for the state to accumulate\n * @param hasSeed Whether or not a seed was provided\n * @param emitOnNext Whether or not to emit the state on next\n * @param emitBeforeComplete Whether or not to emit the before completion\n */\n\nexport function scanInternals<V, A, S>(\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\n  seed: S,\n  hasSeed: boolean,\n  emitOnNext: boolean,\n  emitBeforeComplete?: undefined | true\n) {\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\n    // Whether or not we have state yet. This will only be\n    // false before the first value arrives if we didn't get\n    // a seed value.\n    let hasState = hasSeed;\n    // The state that we're tracking, starting with the seed,\n    // if there is one, and then updated by the return value\n    // from the accumulator on each emission.\n    let state: any = seed;\n    // An index to pass to the accumulator function.\n    let index = 0;\n\n    // Subscribe to our source. All errors and completions are passed through.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Always increment the index.\n          const i = index++;\n          // Set the state\n          state = hasState\n            ? // We already have state, so we can get the new state from the accumulator\n              accumulator(state, value, i)\n            : // We didn't have state yet, a seed value was not provided, so\n\n              // we set the state to the first value, and mark that we have state now\n              ((hasState = true), value);\n\n          // Maybe send it to the consumer.\n          emitOnNext && subscriber.next(state);\n        },\n        // If an onComplete was given, call it, otherwise\n        // just pass through the complete notification to the consumer.\n        emitBeforeComplete &&\n          (() => {\n            hasState && subscriber.next(state);\n            subscriber.complete();\n          })\n      )\n    );\n  };\n}\n","import { scanInternals } from './scanInternals';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nexport function reduce<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function reduce<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function reduce<V, A, S = A>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n *\n * Count the number of click events that happened in 5 seconds\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, map, reduce } from 'rxjs';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click')\n *   .pipe(takeUntil(interval(5000)));\n *\n * const ones = clicksInFiveSeconds.pipe(map(() => 1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n *\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: A, value: V, index: number): A} accumulator The accumulator function\n * called on each source value.\n * @param {A} [seed] The initial accumulation value.\n * @return A function that returns an Observable that emits a single value that\n * is the result of accumulating the values emitted by the source Observable.\n */\nexport function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {\n  return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n","import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nconst arrReducer = (arr: any[], value: any) => (arr.push(value), arr);\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n * ## Example\n *\n * ```ts\n * import { interval, take, toArray } from 'rxjs';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * example.subscribe(value => console.log(value));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n * ```\n *\n * @return A function that returns an Observable that emits an array of items\n * emitted by the source Observable when source completes.\n */\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  // Because arrays are mutable, and we're mutating the array in this\n  // reducer process, we have to encapsulate the creation of the initial\n  // array within this `operate` function.\n  return operate((source, subscriber) => {\n    reduce(arrReducer, [] as T[])(source).subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { mergeMap } from './mergeMap';\nimport { toArray } from './toArray';\n\n/**\n * Collects all of the inner sources from source observable. Then, once the\n * source completes, joins the values using the given static.\n *\n * This is used for {@link combineLatestAll} and {@link zipAll} which both have the\n * same behavior of collecting all inner observables, then operating on them.\n *\n * @param joinFn The type of static join to apply to the sources collected\n * @param project The projection function to apply to the values, if any\n */\nexport function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {\n  return pipe(\n    // Collect all inner sources into an array, and emit them when the\n    // source completes.\n    toArray() as OperatorFunction<ObservableInput<T>, ObservableInput<T>[]>,\n    // Run the join function on the collected array of inner sources.\n    mergeMap((sources) => joinFn(sources)),\n    // If a projection function was supplied, apply it to each result.\n    project ? mapOneOrManyArgs(project) : (identity as any)\n  );\n}\n","import { combineLatest } from '../observable/combineLatest';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { joinAllInternals } from './joinAllInternals';\n\nexport function combineLatestAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineLatestAll<T>(): OperatorFunction<any, T[]>;\nexport function combineLatestAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineLatestAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * `combineLatestAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest} strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ## Example\n *\n * Map two click events to a finite interval Observable, then apply `combineLatestAll`\n *\n * ```ts\n * import { fromEvent, map, interval, take, combineLatestAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(Math.random() * 2000).pipe(take(3))),\n *   take(2)\n * );\n * const result = higherOrder.pipe(combineLatestAll());\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link combineLatestWith}\n * @see {@link mergeAll}\n *\n * @param project optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return A function that returns an Observable that flattens Observables\n * emitted by the source Observable.\n */\nexport function combineLatestAll<R>(project?: (...values: Array<any>) => R) {\n  return joinAllInternals(combineLatest, project);\n}\n","import { combineLatestAll } from './combineLatestAll';\n\n/**\n * @deprecated Renamed to {@link combineLatestAll}. Will be removed in v8.\n */\nexport const combineAll = combineLatestAll;\n","import { combineLatestInit } from '../observable/combineLatest';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  sources: [...ObservableInputTuple<A>],\n  project: (...values: [T, ...A]) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  ...sourcesAndProject: [...ObservableInputTuple<A>, (...values: [T, ...A]) => R]\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/**\n * @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8.\n */\nexport function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {\n  const resultSelector = popResultSelector(args);\n  return resultSelector\n    ? pipe(combineLatest(...(args as Array<ObservableInput<any>>)), mapOneOrManyArgs(resultSelector))\n    : operate((source, subscriber) => {\n        combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\n      });\n}\n","import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { combineLatest } from './combineLatest';\n\n/**\n * Create an observable that combines the latest values from all passed observables and the source\n * into arrays and emits them.\n *\n * Returns an observable, that when subscribed to, will subscribe to the source observable and all\n * sources provided as arguments. Once all sources emit at least one value, all of the latest values\n * will be emitted as an array. After that, every time any source emits a value, all of the latest values\n * will be emitted as an array.\n *\n * This is a useful operator for eagerly calculating values based off of changed inputs.\n *\n * ## Example\n *\n * Simple concatenation of values from two inputs\n *\n * ```ts\n * import { fromEvent, combineLatestWith, map } from 'rxjs';\n *\n * // Setup: Add two inputs to the page\n * const input1 = document.createElement('input');\n * document.body.appendChild(input1);\n * const input2 = document.createElement('input');\n * document.body.appendChild(input2);\n *\n * // Get streams of changes\n * const input1Changes$ = fromEvent(input1, 'change');\n * const input2Changes$ = fromEvent(input2, 'change');\n *\n * // Combine the changes by adding them together\n * input1Changes$.pipe(\n *   combineLatestWith(input2Changes$),\n *   map(([e1, e2]) => (<HTMLInputElement>e1.target).value + ' - ' + (<HTMLInputElement>e2.target).value)\n * )\n * .subscribe(x => console.log(x));\n * ```\n *\n * @param otherSources the other sources to subscribe to.\n * @return A function that returns an Observable that emits the latest\n * emissions from both source and provided Observables.\n */\nexport function combineLatestWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, Cons<T, A>> {\n  return combineLatest(...otherSources);\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * values from each projected inner Observable sequentially.\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n","import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)` */\nexport function concatMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMapTo, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable of values merged together by\n * joining the passed Observable with itself, one after the other, for each\n * value emitted from the source.\n * @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)`\n */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? concatMap(() => innerObservable, resultSelector) : concatMap(() => innerObservable);\n}\n","import { ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { concatAll } from './concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * @deprecated Replaced with {@link concatWith}. Will be removed in v8.\n */\nexport function concat<T, R>(...args: any[]): OperatorFunction<T, R> {\n  const scheduler = popScheduler(args);\n  return operate((source, subscriber) => {\n    concatAll()(from([source, ...args], scheduler)).subscribe(subscriber);\n  });\n}\n","import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { concat } from './concat';\n\n/**\n * Emits all of the values from the source observable, then, once it completes, subscribes\n * to each observable source provided, one at a time, emitting all of their values, and not subscribing\n * to the next one until it completes.\n *\n * `concat(a$, b$, c$)` is the same as `a$.pipe(concatWith(b$, c$))`.\n *\n * ## Example\n *\n * Listen for one mouse click, then listen for all mouse moves.\n *\n * ```ts\n * import { fromEvent, map, take, concatWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click');\n * const moves$ = fromEvent(document, 'mousemove');\n *\n * clicks$.pipe(\n *   map(() => 'click'),\n *   take(1),\n *   concatWith(\n *     moves$.pipe(\n *       map(() => 'move')\n *     )\n *   )\n * )\n * .subscribe(x => console.log(x));\n *\n * // 'click'\n * // 'move'\n * // 'move'\n * // 'move'\n * // ...\n * ```\n *\n * @param otherSources Other observable sources to subscribe to, in sequence, after the original source is complete.\n * @return A function that returns an Observable that concatenates\n * subscriptions to the source and provided Observables subscribing to the next\n * only once the current subscription completes.\n */\nexport function concatWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return concat(...otherSources);\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscribable } from '../types';\n\n/**\n * Used to convert a subscribable to an observable.\n *\n * Currently, this is only used within internals.\n *\n * TODO: Discuss ObservableInput supporting \"Subscribable\".\n * https://github.com/ReactiveX/rxjs/issues/5909\n *\n * @param subscribable A subscribable\n */\nexport function fromSubscribable<T>(subscribable: Subscribable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => subscribable.subscribe(subscriber));\n}\n","import { OperatorFunction, ObservableInput, ObservedValueOf, SubjectLike } from '../types';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\n\n/**\n * An object used to configure {@link connect} operator.\n */\nexport interface ConnectConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default, this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n}\n\n/**\n * The default configuration for `connect`.\n */\nconst DEFAULT_CONFIG: ConnectConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n};\n\n/**\n * Creates an observable by multicasting the source within a function that\n * allows the developer to define the usage of the multicast prior to connection.\n *\n * This is particularly useful if the observable source you wish to multicast could\n * be synchronous or asynchronous. This sets it apart from {@link share}, which, in the\n * case of totally synchronous sources will fail to share a single subscription with\n * multiple consumers, as by the time the subscription to the result of {@link share}\n * has returned, if the source is synchronous its internal reference count will jump from\n * 0 to 1 back to 0 and reset.\n *\n * To use `connect`, you provide a `selector` function that will give you\n * a multicast observable that is not yet connected. You then use that multicast observable\n * to create a resulting observable that, when subscribed, will set up your multicast. This is\n * generally, but not always, accomplished with {@link merge}.\n *\n * Note that using a {@link takeUntil} inside of `connect`'s `selector` _might_ mean you were looking\n * to use the {@link takeWhile} operator instead.\n *\n * When you subscribe to the result of `connect`, the `selector` function will be called. After\n * the `selector` function returns, the observable it returns will be subscribed to, _then_ the\n * multicast will be connected to the source.\n *\n * ## Example\n *\n * Sharing a totally synchronous observable\n *\n * ```ts\n * import { of, tap, connect, merge, map, filter } from 'rxjs';\n *\n * const source$ = of(1, 2, 3, 4, 5).pipe(\n *   tap({\n *     subscribe: () => console.log('subscription started'),\n *     next: n => console.log(`source emitted ${ n }`)\n *   })\n * );\n *\n * source$.pipe(\n *   // Notice in here we're merging 3 subscriptions to `shared$`.\n *   connect(shared$ => merge(\n *     shared$.pipe(map(n => `all ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 0), map(n => `even ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 1), map(n => `odd ${ n }`))\n *   ))\n * )\n * .subscribe(console.log);\n *\n * // Expected output: (notice only one subscription)\n * 'subscription started'\n * 'source emitted 1'\n * 'all 1'\n * 'odd 1'\n * 'source emitted 2'\n * 'all 2'\n * 'even 2'\n * 'source emitted 3'\n * 'all 3'\n * 'odd 3'\n * 'source emitted 4'\n * 'all 4'\n * 'even 4'\n * 'source emitted 5'\n * 'all 5'\n * 'odd 5'\n * ```\n *\n * @param selector A function used to set up the multicast. Gives you a multicast observable\n * that is not yet connected. With that, you're expected to create and return\n * and Observable, that when subscribed to, will utilize the multicast observable.\n * After this function is executed -- and its return value subscribed to -- the\n * operator will subscribe to the source, and the connection will be made.\n * @param config The configuration object for `connect`.\n */\nexport function connect<T, O extends ObservableInput<unknown>>(\n  selector: (shared: Observable<T>) => O,\n  config: ConnectConfig<T> = DEFAULT_CONFIG\n): OperatorFunction<T, ObservedValueOf<O>> {\n  const { connector } = config;\n  return operate((source, subscriber) => {\n    const subject = connector();\n    innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n    subscriber.add(source.subscribe(subject));\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { reduce } from './reduce';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n *\n * ```ts\n * import { interval, fromEvent, takeUntil, count } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n *\n * ```ts\n * import { range, count } from 'rxjs';\n *\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param predicate A function that is used to analyze the value and the index and\n * determine whether or not to increment the count. Return `true` to increment the count,\n * and return `false` to keep the count the same.\n * If the predicate is not provided, every value will be counted.\n * @return A function that returns an Observable that emits one number that\n * represents the count of emissions.\n */\nexport function count<T>(predicate?: (value: T, index: number) => boolean): OperatorFunction<T, number> {\n  return reduce((total, value, i) => (!predicate || predicate(value, i) ? total + 1 : total), 0);\n}\n","import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.svg)\n *\n * `debounce` delays notifications emitted by the source Observable, but drops previous\n * pending delayed emissions if a new notification arrives on the source Observable.\n * This operator keeps track of the most recent notification from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The notification is emitted only when the duration\n * Observable emits a next notification, and if no other notification was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * notification appears before the duration Observable emits, the previous notification will\n * not be emitted and a new duration is scheduled from `durationSelector` is scheduled.\n * If the completing event happens during the scheduled duration the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during the scheduled duration or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, scan, debounce, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   scan(i => ++i, 1),\n *   debounce(i => interval(200 * i))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n */\nexport function debounce<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    // The subscriber/subscription for the current debounce, if there is one.\n    let durationSubscriber: Subscriber<any> | null = null;\n\n    const emit = () => {\n      // Unsubscribe any current debounce subscription we have,\n      // we only cared about the first notification from it, and we\n      // want to clean that subscription up as soon as possible.\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        // We have a value! Free up memory first, then emit the value.\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Cancel any pending debounce duration. We don't\n          // need to null it out here yet tho, because we're just going\n          // to create another one in a few lines.\n          durationSubscriber?.unsubscribe();\n          hasValue = true;\n          lastValue = value;\n          // Capture our duration subscriber, so we can unsubscribe it when we're notified\n          // and we're going to emit the value.\n          durationSubscriber = createOperatorSubscriber(subscriber, emit, noop);\n          // Subscribe to the duration.\n          innerFrom(durationSelector(value)).subscribe(durationSubscriber);\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = durationSubscriber = null;\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent notification from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays notifications emitted by the source Observable, but drops\n * previous pending delayed emissions if a new notification arrives on the source\n * Observable. This operator keeps track of the most recent notification from the\n * source Observable, and emits that only when `dueTime` has passed\n * without any other notification appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous notification will be dropped\n * and will not be emitted and a new `dueTime` is scheduled.\n * If the completing event happens during `dueTime` the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during `dueTime` or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * notification to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, debounceTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified `dueTime`, and may drop some values\n * if they occur too frequently.\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let activeTask: Subscription | null = null;\n    let lastValue: T | null = null;\n    let lastTime: number | null = null;\n\n    const emit = () => {\n      if (activeTask) {\n        // We have a value! Free up memory first, then emit the value.\n        activeTask.unsubscribe();\n        activeTask = null;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n    function emitWhenIdle(this: SchedulerAction<unknown>) {\n      // This is called `dueTime` after the first value\n      // but we might have received new values during this window!\n\n      const targetTime = lastTime! + dueTime;\n      const now = scheduler.now();\n      if (now < targetTime) {\n        // On that case, re-schedule to the new target\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n\n      emit();\n    }\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          lastValue = value;\n          lastTime = scheduler.now();\n\n          // Only set up a task if it's not already up\n          if (!activeTask) {\n            activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n            subscriber.add(activeTask);\n          }\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = activeTask = null;\n        }\n      )\n    );\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n *\n * If no clicks happen in 5 seconds, then emit 'no clicks'\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, defaultIfEmpty } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param defaultValue The default value used if the source\n * Observable is empty.\n * @return A function that returns an Observable that emits either the\n * specified `defaultValue` if the source Observable emits no items, or the\n * values emitted by the source Observable.\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R): OperatorFunction<T, T | R> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => {\n          if (!hasValue) {\n            subscriber.next(defaultValue!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\n *\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\n * to the Observable, which will ensure that it will never call its observers’ `next` handlers.\n *\n * ## Example\n *\n * Ignore all `next` emissions from the source\n *\n * ```ts\n * import { of, ignoreElements } from 'rxjs';\n *\n * of('you', 'talking', 'to', 'me')\n *   .pipe(ignoreElements())\n *   .subscribe({\n *     next: word => console.log(word),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // result:\n * // 'the end'\n * ```\n *\n * @return A function that returns an empty Observable that only calls\n * `complete` or `error`, based on which one is called by the source\n * Observable.\n */\nexport function ignoreElements(): OperatorFunction<unknown, never> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nimport { innerFrom } from '../observable/innerFrom';\n\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay: Observable<any>\n): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => ObservableInput<any>): MonoTypeOperatorFunction<T>;\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` operator shifts each emitted value from the source Observable by\n * a time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the value emitted from\n * the source Observable as the first argument to the `delayDurationSelector`.\n * The `delayDurationSelector` function should return an {@link ObservableInput},\n * that is internally converted to an Observable that is called the \"duration\"\n * Observable.\n *\n * The source value is emitted on the output Observable only when the \"duration\"\n * Observable emits ({@link guide/glossary-and-semantics#next next}s) any value.\n * Upon that, the \"duration\" Observable gets unsubscribed.\n *\n * Before RxJS V7, the {@link guide/glossary-and-semantics#complete completion}\n * of the \"duration\" Observable would have been triggering the emission of the\n * source value to the output Observable, but with RxJS V7, this is not the case\n * anymore.\n *\n * Only next notifications (from the \"duration\" Observable) trigger values from\n * the source Observable to be passed to the output Observable. If the \"duration\"\n * Observable only emits the complete notification (without next), the value\n * emitted by the source Observable will never get to the output Observable - it\n * will be swallowed. If the \"duration\" Observable errors, the error will be\n * propagated to the output Observable.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n *\n * Delay each click by a random amount of time, between 0 and 5 seconds\n *\n * ```ts\n * import { fromEvent, delayWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(() => interval(Math.random() * 5000))\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param delayDurationSelector A function that returns an `ObservableInput` for\n * each `value` emitted by the source Observable, which is then used to delay the\n * emission of that `value` on the output Observable until the `ObservableInput`\n * returned from this function emits a next value. When called, beside `value`,\n * this function receives a zero-based `index` of the emission order.\n * @param subscriptionDelay An Observable that triggers the subscription to the\n * source Observable once it emits any value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by an amount of time specified by the Observable\n * returned by `delayDurationSelector`.\n */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay?: Observable<any>\n): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n  }\n\n  return mergeMap((value, index) => innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)));\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.svg)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n *\n * Delay each click by one second\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delayWhen}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {number|Date} due The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified timeout or Date.\n */\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  const duration = timer(due, scheduler);\n  return delayWhen(() => duration);\n}\n","import { observeNotification } from '../Notification';\nimport { OperatorFunction, ObservableNotification, ValueFromNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Converts an Observable of {@link ObservableNotification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link ObservableNotification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link ObservableNotification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n *\n * Convert an Observable of Notifications to an actual Observable\n *\n * ```ts\n * import { NextNotification, ErrorNotification, of, dematerialize } from 'rxjs';\n *\n * const notifA: NextNotification<string> = { kind: 'N', value: 'A' };\n * const notifB: NextNotification<string> = { kind: 'N', value: 'B' };\n * const notifE: ErrorNotification = { kind: 'E', error: new TypeError('x.toUpperCase is not a function') };\n *\n * const materialized = of(notifA, notifB, notifE);\n *\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe({\n *   next: x => console.log(x),\n *   error: e => console.error(e)\n * });\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link materialize}\n *\n * @return A function that returns an Observable that emits items and\n * notifications embedded in Notification objects emitted by the source\n * Observable.\n */\nexport function dematerialize<N extends ObservableNotification<any>>(): OperatorFunction<N, ValueFromNotification<N>> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, (notification) => observeNotification(notification, subscriber)));\n  });\n}\n","import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a `keySelector` function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If the `keySelector` function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n *\n * A simple example with numbers\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .pipe(distinct())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * An example using the `keySelector` function\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo'},\n *   { age: 7, name: 'Bar'},\n *   { age: 5, name: 'Foo'}\n * )\n * .pipe(distinct(({ name }) => name))\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param keySelector Optional `function` to select which value you want to check as distinct.\n * @param flushes Optional `ObservableInput` for flushing the internal HashSet of the operator.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K, flushes?: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const distinctKeys = new Set();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const key = keySelector ? keySelector(value) : value;\n        if (!distinctKeys.has(key)) {\n          distinctKeys.add(key);\n          subscriber.next(value);\n        }\n      })\n    );\n\n    flushes && innerFrom(flushes).subscribe(createOperatorSubscriber(subscriber, () => distinctKeys.clear(), noop));\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n *\n * An example comparing the name of persons\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo' },\n *   { age: 6, name: 'Foo' }\n * ).pipe(\n *   distinctUntilKeyChanged('name')\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo1' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo2' },\n *   { age: 6, name: 'Foo3' }\n * ).pipe(\n *   distinctUntilKeyChanged('name', (x, y) => x.substring(0, 3) === y.substring(0, 3))\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values based on the key specified.\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n *\n * Throw an error if the document wasn't clicked within 1 second\n *\n * ```ts\n * import { fromEvent, takeUntil, timer, throwIfEmpty } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(() => new Error('The document was not clicked within 1 second'))\n * )\n * .subscribe({\n *   next() {\n *    console.log('The document was clicked');\n *   },\n *   error(err) {\n *     console.error(err.message);\n *   }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n * @return A function that returns an Observable that throws an error if the\n * source Observable completed without emitting.\n */\nexport function throwIfEmpty<T>(errorFactory: () => any = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))\n      )\n    );\n  });\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n","import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n *\n * Emit only the third click event\n *\n * ```ts\n * import { fromEvent, elementAt } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOfRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return A function that returns an Observable that emits a single item, if\n * it is found. Otherwise, it will emit the default value if given. If not, it\n * emits an error.\n */\nexport function elementAt<T, D = T>(index: number, defaultValue?: D): OperatorFunction<T, T | D> {\n  if (index < 0) {\n    throw new ArgumentOutOfRangeError();\n  }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      filter((v, i) => i === index),\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new ArgumentOutOfRangeError())\n    );\n}\n","/** prettier */\nimport { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ValueFromArray } from '../types';\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T, A extends unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\n\nexport function endWith<T, A extends unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that will emit all values from the source, then synchronously emit\n * the provided value(s) immediately after the source completes.\n *\n * NOTE: Passing a last argument of a Scheduler is _deprecated_, and may result in incorrect\n * types in TypeScript.\n *\n * This is useful for knowing when an observable ends. Particularly when paired with an\n * operator like {@link takeUntil}\n *\n * ![](endWith.png)\n *\n * ## Example\n *\n * Emit values to know when an interval starts and stops. The interval will\n * stop when a user clicks anywhere on the document.\n *\n * ```ts\n * import { interval, map, fromEvent, startWith, takeUntil, endWith } from 'rxjs';\n *\n * const ticker$ = interval(5000).pipe(\n *   map(() => 'tick')\n * );\n *\n * const documentClicks$ = fromEvent(document, 'click');\n *\n * ticker$.pipe(\n *   startWith('interval started'),\n *   takeUntil(documentClicks$),\n *   endWith('interval ended by click')\n * )\n * .subscribe(x => console.log(x));\n *\n * // Result (assuming a user clicks after 15 seconds)\n * // 'interval started'\n * // 'tick'\n * // 'tick'\n * // 'tick'\n * // 'interval ended by click'\n * ```\n *\n * @see {@link startWith}\n * @see {@link concat}\n * @see {@link takeUntil}\n *\n * @param values Items you want the modified Observable to emit last.\n * @return A function that returns an Observable that emits all values from the\n * source, then synchronously emits the provided value(s) immediately after the\n * source completes.\n */\nexport function endWith<T>(...values: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...values)) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function every<T>(predicate: BooleanConstructor): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T>(\n  predicate: BooleanConstructor,\n  thisArg: any\n): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, boolean>;\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, boolean>;\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * <span class=\"informal\">If all values pass predicate before the source completes, emits true before completion,\n * otherwise emit false, then complete.</span>\n *\n * ![](every.png)\n *\n * ## Example\n *\n * A simple example emitting true if all elements are less than 5, false otherwise\n *\n * ```ts\n * import { of, every } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5, 6)\n *   .pipe(every(x => x < 5))\n *   .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return A function that returns an Observable of booleans that determines if\n * all items of the source Observable meet the condition specified.\n */\nexport function every<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          if (!predicate.call(thisArg, value, index++, source)) {\n            subscriber.next(false);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaustAll}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, exhaustMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(() => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable containing projected\n * Observables of each item of the source, ignoring projected Observables that\n * start before their preceding Observable has completed.\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));\n  }\n  return operate((source, subscriber) => {\n    let index = 0;\n    let innerSub: Subscriber<T> | null = null;\n    let isComplete = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (outerValue) => {\n          if (!innerSub) {\n            innerSub = createOperatorSubscriber(subscriber, undefined, () => {\n              innerSub = null;\n              isComplete && subscriber.complete();\n            });\n            innerFrom(project(outerValue, index++)).subscribe(innerSub);\n          }\n        },\n        () => {\n          isComplete = true;\n          !innerSub && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { exhaustMap } from './exhaustMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaustAll.svg)\n *\n * `exhaustAll` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaustAll` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, map, interval, take, exhaustAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(5)))\n * );\n * const result = higherOrder.pipe(exhaustAll());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable that takes a source of\n * Observables and propagates the first Observable exclusively until it\n * completes before subscribing to the next.\n */\nexport function exhaustAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return exhaustMap(identity);\n}\n","import { exhaustAll } from './exhaustAll';\n\n/**\n * @deprecated Renamed to {@link exhaustAll}. Will be removed in v8.\n */\nexport const exhaust = exhaustAll;\n","import { OperatorFunction, ObservableInput, ObservedValueOf, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. If you need to schedule the inner subscription,\n * use `subscribeOn` within the projection function: `expand((value) => fn(value).pipe(subscribeOn(scheduler)))`.\n * Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent: number | undefined,\n  scheduler: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n *\n * Start emitting the powers of two on every click, at most 10 of them\n *\n * ```ts\n * import { fromEvent, map, expand, of, delay, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   map(() => 1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10)\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return A function that returns an Observable that emits the source values\n * and also result of applying the projection function to each value emitted on\n * the output Observable and merging the results of the Observables obtained\n * from this transformation.\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent = Infinity,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>> {\n  concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;\n  return operate((source, subscriber) =>\n    mergeInternals(\n      // General merge params\n      source,\n      subscriber,\n      project,\n      concurrent,\n\n      // onBeforeNext\n      undefined,\n\n      // Expand-specific\n      true, // Use expand path\n      scheduler // Inner subscription scheduler\n    )\n  );\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * The specified function will also be called when the subscriber explicitly unsubscribes.\n *\n * ## Examples\n *\n * Execute callback function when the observable completes\n *\n * ```ts\n * import { interval, take, finalize } from 'rxjs';\n *\n * // emit value in sequence every 1 second\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(5), //take only the first 5 values\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\n * );\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 'Sequence complete'\n * ```\n *\n * Execute callback function when the subscriber explicitly unsubscribes\n *\n * ```ts\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\n *\n * const source = interval(100).pipe(\n *   finalize(() => console.log('[finalize] Called')),\n *   tap({\n *     next: () => console.log('[next] Called'),\n *     error: () => console.log('[error] Not called'),\n *     complete: () => console.log('[tap complete] Not called')\n *   })\n * );\n *\n * const sub = source.subscribe({\n *   next: x => console.log(x),\n *   error: noop,\n *   complete: () => console.log('[complete] Not called')\n * });\n *\n * timer(150).subscribe(() => sub.unsubscribe());\n *\n * // results:\n * // '[next] Called'\n * // 0\n * // '[finalize] Called'\n * ```\n *\n * @param {function} callback Function to be called when source terminates.\n * @return A function that returns an Observable that mirrors the source, but\n * will call the specified function on termination.\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function find<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, S extends T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => value is S,\n  thisArg: A\n): OperatorFunction<T, S | undefined>;\nexport function find<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S\n): OperatorFunction<T, S | undefined>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, T | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found\n * (emits `undefined` instead).\n *\n * ## Example\n *\n * Find and emit the first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, find } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function find<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, T | undefined> {\n  return operate(createFind(predicate, thisArg, 'value'));\n}\n\nexport function createFind<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: any,\n  emit: 'value' | 'index'\n) {\n  const findIndex = emit === 'index';\n  return (source: Observable<T>, subscriber: Subscriber<any>) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          const i = index++;\n          if (predicate.call(thisArg, value, i, source)) {\n            subscriber.next(findIndex ? i : value);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(findIndex ? -1 : undefined);\n          subscriber.complete();\n        }\n      )\n    );\n  };\n}\n","import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createFind } from './find';\n\nexport function findIndex<T>(predicate: BooleanConstructor): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, number>;\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number>;\n\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n *\n * Emit the index of first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, findIndex } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the index of the\n * first item that matches the condition.\n */\nexport function findIndex<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, number> {\n  return operate(createFind(predicate, thisArg, 'index'));\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, S extends T, D>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue: D\n): OperatorFunction<T, S | D>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n *\n * Emit only the first click that happens on the DOM\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * This is how `first()` is different from {@link take}(1) which completes instead.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {D} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { ObservableInput, Observer, OperatorFunction, SubjectLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\n\nexport interface BasicGroupByOptions<K, T> {\n  element?: undefined;\n  duration?: (grouped: GroupedObservable<K, T>) => ObservableInput<any>;\n  connector?: () => SubjectLike<T>;\n}\n\nexport interface GroupByOptionsWithElement<K, E, T> {\n  element: (value: T) => E;\n  duration?: (grouped: GroupedObservable<K, E>) => ObservableInput<any>;\n  connector?: () => SubjectLike<E>;\n}\n\nexport function groupBy<T, K>(key: (value: T) => K, options: BasicGroupByOptions<K, T>): OperatorFunction<T, GroupedObservable<K, T>>;\n\nexport function groupBy<T, K, E>(\n  key: (value: T) => K,\n  options: GroupByOptionsWithElement<K, E, T>\n): OperatorFunction<T, GroupedObservable<K, E>>;\n\nexport function groupBy<T, K extends T>(\n  key: (value: T) => value is K\n): OperatorFunction<T, GroupedObservable<true, K> | GroupedObservable<false, Exclude<T, K>>>;\n\nexport function groupBy<T, K>(key: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K>(\n  key: (value: T) => K,\n  element: void,\n  duration: (grouped: GroupedObservable<K, T>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the key function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Otherwise, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the `key` field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the element function.\n *\n * ## Examples\n *\n * Group objects by `id` and return as array\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [])))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [{ id: 1, name: 'JavaScript' }, { id: 1, name: 'TypeScript'}]\n * // [{ id: 2, name: 'Parcel' }, { id: 2, name: 'webpack'}]\n * // [{ id: 3, name: 'TSLint' }]\n * ```\n *\n * Pivot data on the `id` field\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce, map } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id, { element: p => p.name }),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [`${ group$.key }`]))),\n *   map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param key A function that extracts the key\n * for each item.\n * @param element A function that extracts the\n * return element for each item.\n * @param duration\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @param connector Factory function to create an\n * intermediate Subject through which grouped elements are emitted.\n * @return A function that returns an Observable that emits GroupedObservables,\n * each of which corresponds to a unique key value and each of which emits\n * those items from the source Observable that share that key value.\n *\n * @deprecated Use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n  connector?: () => Subject<R>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n// Impl\nexport function groupBy<T, K, R>(\n  keySelector: (value: T) => K,\n  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,\n  duration?: (grouped: GroupedObservable<any, any>) => ObservableInput<any>,\n  connector?: () => SubjectLike<any>\n): OperatorFunction<T, GroupedObservable<K, R>> {\n  return operate((source, subscriber) => {\n    let element: ((value: any) => any) | void;\n    if (!elementOrOptions || typeof elementOrOptions === 'function') {\n      element = elementOrOptions as ((value: any) => any);\n    } else {\n      ({ duration, element, connector } = elementOrOptions);\n    }\n\n    // A lookup for the groups that we have so far.\n    const groups = new Map<K, SubjectLike<any>>();\n\n    // Used for notifying all groups and the subscriber in the same way.\n    const notify = (cb: (group: Observer<any>) => void) => {\n      groups.forEach(cb);\n      cb(subscriber);\n    };\n\n    // Used to handle errors from the source, AND errors that occur during the\n    // next call from the source.\n    const handleError = (err: any) => notify((consumer) => consumer.error(err));\n\n    // The number of actively subscribed groups\n    let activeGroups = 0;\n\n    // Whether or not teardown was attempted on this subscription.\n    let teardownAttempted = false;\n\n    // Capturing a reference to this, because we need a handle to it\n    // in `createGroupedObservable` below. This is what we use to\n    // subscribe to our source observable. This sometimes needs to be unsubscribed\n    // out-of-band with our `subscriber` which is the downstream subscriber, or destination,\n    // in cases where a user unsubscribes from the main resulting subscription, but\n    // still has groups from this subscription subscribed and would expect values from it\n    // Consider:  `source.pipe(groupBy(fn), take(2))`.\n    const groupBySourceSubscriber = new OperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Because we have to notify all groups of any errors that occur in here,\n        // we have to add our own try/catch to ensure that those errors are propagated.\n        // OperatorSubscriber will only send the error to the main subscriber.\n        try {\n          const key = keySelector(value);\n\n          let group = groups.get(key);\n          if (!group) {\n            // Create our group subject\n            groups.set(key, (group = connector ? connector() : new Subject<any>()));\n\n            // Emit the grouped observable. Note that we can't do a simple `asObservable()` here,\n            // because the grouped observable has special semantics around reference counting\n            // to ensure we don't sever our connection to the source prematurely.\n            const grouped = createGroupedObservable(key, group);\n            subscriber.next(grouped);\n\n            if (duration) {\n              const durationSubscriber = createOperatorSubscriber(\n                // Providing the group here ensures that it is disposed of -- via `unsubscribe` --\n                // when the duration subscription is torn down. That is important, because then\n                // if someone holds a handle to the grouped observable and tries to subscribe to it\n                // after the connection to the source has been severed, they will get an\n                // `ObjectUnsubscribedError` and know they can't possibly get any notifications.\n                group as any,\n                () => {\n                  // Our duration notified! We can complete the group.\n                  // The group will be removed from the map in the finalization phase.\n                  group!.complete();\n                  durationSubscriber?.unsubscribe();\n                },\n                // Completions are also sent to the group, but just the group.\n                undefined,\n                // Errors on the duration subscriber are sent to the group\n                // but only the group. They are not sent to the main subscription.\n                undefined,\n                // Finalization: Remove this group from our map.\n                () => groups.delete(key)\n              );\n\n              // Start our duration notifier.\n              groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber));\n            }\n          }\n\n          // Send the value to our group.\n          group.next(element ? element(value) : value);\n        } catch (err) {\n          handleError(err);\n        }\n      },\n      // Source completes.\n      () => notify((consumer) => consumer.complete()),\n      // Error from the source.\n      handleError,\n      // Free up memory.\n      // When the source subscription is _finally_ torn down, release the subjects and keys\n      // in our groups Map, they may be quite large and we don't want to keep them around if we\n      // don't have to.\n      () => groups.clear(),\n      () => {\n        teardownAttempted = true;\n        // We only kill our subscription to the source if we have\n        // no active groups. As stated above, consider this scenario:\n        // source$.pipe(groupBy(fn), take(2)).\n        return activeGroups === 0;\n      }\n    );\n\n    // Subscribe to the source\n    source.subscribe(groupBySourceSubscriber);\n\n    /**\n     * Creates the actual grouped observable returned.\n     * @param key The key of the group\n     * @param groupSubject The subject that fuels the group\n     */\n    function createGroupedObservable(key: K, groupSubject: SubjectLike<any>) {\n      const result: any = new Observable<T>((groupSubscriber) => {\n        activeGroups++;\n        const innerSub = groupSubject.subscribe(groupSubscriber);\n        return () => {\n          innerSub.unsubscribe();\n          // We can kill the subscription to our source if we now have no more\n          // active groups subscribed, and a finalization was already attempted on\n          // the source.\n          --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n        };\n      });\n      result.key = key;\n      return result;\n    }\n  });\n}\n\n/**\n * An observable of values that is the emitted by the result of a {@link groupBy} operator,\n * contains a `key` property for the grouping.\n */\nexport interface GroupedObservable<K, T> extends Observable<T> {\n  /**\n   * The key value for the grouped notifications.\n   */\n  readonly key: K;\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits `false` if the input Observable emits any values, or emits `true` if the\n * input Observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an Observable.</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n *\n * ```ts\n * import { Subject, isEmpty } from 'rxjs';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n *\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n *\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Outputs\n * // 'a'\n * // false\n * // 'b'\n * // 'c'\n * ```\n *\n * Emit `true` for an empty Observable\n *\n * ```ts\n * import { EMPTY, isEmpty } from 'rxjs';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return A function that returns an Observable that emits boolean value\n * indicating whether the source Observable was empty or not.\n */\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          subscriber.next(false);\n          subscriber.complete();\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { EMPTY } from '../observable/empty';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Waits for the source to complete, then emits the last N values from the source,\n * as specified by the `count` argument.\n *\n * ![](takeLast.png)\n *\n * `takeLast` results in an observable that will hold values up to `count` values in memory,\n * until the source completes. It then pushes all values in memory to the consumer, in the\n * order they were received from the source, then notifies the consumer that it is\n * complete.\n *\n * If for some reason the source completes before the `count` supplied to `takeLast` is reached,\n * all values received until that point are emitted, and then completion is notified.\n *\n * **Warning**: Using `takeLast` with an observable that never completes will result\n * in an observable that never emits a value.\n *\n * ## Example\n *\n * Take the last 3 values of an Observable with many values\n *\n * ```ts\n * import { range, takeLast } from 'rxjs';\n *\n * const many = range(1, 100);\n * const lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return A function that returns an Observable that emits at most the last\n * `count` values emitted by the source Observable.\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        // This buffer will hold the values we are going to emit\n        // when the source completes. Since we only want to take the\n        // last N values, we can't emit until we're sure we're not getting\n        // any more values.\n        let buffer: T[] = [];\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              // Add the most recent value onto the end of our buffer.\n              buffer.push(value);\n              // If our buffer is now larger than the number of values we\n              // want to take, we remove the oldest value from the buffer.\n              count < buffer.length && buffer.shift();\n            },\n            () => {\n              // The source completed, we now know what are last values\n              // are, emit them in the order they were received.\n              for (const value of buffer) {\n                subscriber.next(value);\n              }\n              subscriber.complete();\n            },\n            // Errors are passed through to the consumer\n            undefined,\n            () => {\n              // During finalization release the values in our buffer.\n              buffer = null!;\n            }\n          )\n        );\n      });\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function last<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function last<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function last<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * It will throw an error if the source completes without notification or one that matches the predicate. It\n * returns the last value or if a predicate is provided last value that matches the predicate. It returns the\n * given default value if no notification is emitted or matches the predicate.\n *\n * ## Examples\n *\n * Last alphabet from the sequence\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last());\n *\n * result.subscribe(value => console.log(`Last alphabet: ${ value }`));\n *\n * // Outputs\n * // Last alphabet: z\n * ```\n *\n * Default value when the value in the predicate is not matched\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last(char => char === 'a', 'not found'));\n *\n * result.subscribe(value => console.log(`'a' is ${ value }.`));\n *\n * // Outputs\n * // 'a' is not found.\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n * @see {@link skipWhile}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return A function that returns an Observable that emits only the last item\n * satisfying the given condition from the source, or a NoSuchElementException\n * if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      takeLast(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n","import { Notification } from '../Notification';\nimport { OperatorFunction, ObservableNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n *\n * Convert a faulty Observable to an Observable of Notifications\n *\n * ```ts\n * import { of, materialize, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n *\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification { kind: 'N', value: 'A', error: undefined, hasValue: true }\n * // - Notification { kind: 'N', value: 'B', error: undefined, hasValue: true }\n * // - Notification { kind: 'E', value: undefined, error: TypeError { message: x.toUpperCase is not a function }, hasValue: false }\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return A function that returns an Observable that emits\n * {@link Notification} objects that wrap the original emissions from the\n * source Observable with metadata.\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T> & ObservableNotification<T>> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          subscriber.next(Notification.createNext(value));\n        },\n        () => {\n          subscriber.next(Notification.createComplete());\n          subscriber.complete();\n        },\n        (err) => {\n          subscriber.next(Notification.createError(err));\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n *\n * Get the maximal value of a series of numbers\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(max())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 8\n * ```\n *\n * Use a comparer function to get the maximal item\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   max((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * largest value.\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) > 0 ? x : y) : (x, y) => (x > y ? x : y));\n}\n","import { mergeMap } from './mergeMap';\n\n/**\n * @deprecated Renamed to {@link mergeMap}. Will be removed in v8.\n */\nexport const flatMap = mergeMap;\n","import { OperatorFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)` */\nexport function mergeMapTo<O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  concurrent?: number\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/**\n * @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead.\n * Details: https://rxjs.dev/deprecations/resultSelector\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n *\n * For each click event, start an interval Observable ticking every 1 second\n *\n * ```ts\n * import { fromEvent, mergeMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable`.\n * @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)`\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n","import { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * The first parameter of the `mergeScan` is an `accumulator` function which is\n * being called every time the source Observable emits a value. `mergeScan` will\n * subscribe to the value returned by the `accumulator` function and will emit\n * values to the subscriber emitted by inner Observable.\n *\n * The `accumulator` function is being called with three parameters passed to it:\n * `acc`, `value` and `index`. The `acc` parameter is used as the state parameter\n * whose value is initially set to the `seed` parameter (the second parameter\n * passed to the `mergeScan` operator).\n *\n * `mergeScan` internally keeps the value of the `acc` parameter: as long as the\n * source Observable emits without inner Observable emitting, the `acc` will be\n * set to `seed`. The next time the inner Observable emits a value, `mergeScan`\n * will internally remember it and it will be passed to the `accumulator`\n * function as `acc` parameter the next time source emits.\n *\n * The `value` parameter of the `accumulator` function is the value emitted by the\n * source Observable, while the `index` is a number which represent the order of the\n * current emission by the source Observable. It starts with 0.\n *\n * The last parameter to the `mergeScan` is the `concurrent` value which defaults\n * to Infinity. It represents the maximum number of inner Observable subscriptions\n * at a time.\n *\n * ## Example\n *\n * Count the number of click events\n *\n * ```ts\n * import { fromEvent, map, mergeScan, of } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(map(() => 1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed)\n * );\n *\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @see {@link scan}\n * @see {@link switchScan}\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Infinity] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function mergeScan<T, R>(\n  accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n  seed: R,\n  concurrent = Infinity\n): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The accumulated state.\n    let state = seed;\n\n    return mergeInternals(\n      source,\n      subscriber,\n      (value, index) => accumulator(state, value, index),\n      concurrent,\n      (value) => {\n        state = value;\n      },\n      false,\n      undefined,\n      () => (state = null!)\n    );\n  });\n}\n","import { ObservableInput, ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrency: [...ObservableInputTuple<A>, number]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\nexport function merge<T>(...args: unknown[]): OperatorFunction<T, unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  args = argsOrArgArray(args);\n\n  return operate((source, subscriber) => {\n    mergeAll(concurrent)(from([source, ...(args as ObservableInput<T>[])], scheduler)).subscribe(subscriber);\n  });\n}\n","import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { merge } from './merge';\n\n/**\n * Merge the values from all observables to a single observable result.\n *\n * Creates an observable, that when subscribed to, subscribes to the source\n * observable, and all other sources provided as arguments. All values from\n * every source are emitted from the resulting subscription.\n *\n * When all sources complete, the resulting observable will complete.\n *\n * When any source errors, the resulting observable will error.\n *\n * ## Example\n *\n * Joining all outputs from multiple user input event streams\n *\n * ```ts\n * import { fromEvent, map, mergeWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click').pipe(map(() => 'click'));\n * const mousemoves$ = fromEvent(document, 'mousemove').pipe(map(() => 'mousemove'));\n * const dblclicks$ = fromEvent(document, 'dblclick').pipe(map(() => 'dblclick'));\n *\n * mousemoves$\n *   .pipe(mergeWith(clicks$, dblclicks$))\n *   .subscribe(x => console.log(x));\n *\n * // result (assuming user interactions)\n * // 'mousemove'\n * // 'mousemove'\n * // 'mousemove'\n * // 'click'\n * // 'click'\n * // 'dblclick'\n * ```\n *\n * @see {@link merge}\n *\n * @param otherSources the sources to combine the current source with.\n * @return A function that returns an Observable that merges the values from\n * all given Observables.\n */\nexport function mergeWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return merge(...otherSources);\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n *\n * Get the minimal value of a series of numbers\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(min())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 2\n * ```\n *\n * Use a comparer function to get the minimal item\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   min((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Bar'\n * ```\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * smallest value.\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) < 0 ? x : y) : (x, y) => (x < y ? x : y));\n}\n","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subject The subject to multicast through.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(subject), refCount()` is equivalent to\n * `share({ connector: () => subject, resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subject The subject used to multicast.\n * @param selector A setup function to setup the multicast\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subject, selector)` is equivalent to\n * `connect(selector, { connector: () => subject })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subject: Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subjectFactory A factory that will be called to create the subject. Passing a function here\n * will cause the underlying subject to be \"reset\" on error, completion, or refCounted unsubscription of\n * the source.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(() => new BehaviorSubject('test')), refCount()` is equivalent to\n * `share({ connector: () => new BehaviorSubject('test') })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subjectFactory: () => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subjectFactory A factory that creates the subject used to multicast.\n * @param selector A function to setup the multicast and select the output.\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subjectFactory, selector)` is equivalent to\n * `connect(selector, { connector: subjectFactory })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subjectFactory: () => Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, R>(\n  subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n  selector?: (source: Observable<T>) => Observable<R>\n): OperatorFunction<T, R> {\n  const subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : () => subjectOrSubjectFactory;\n\n  if (isFunction(selector)) {\n    // If a selector function is provided, then we're a \"normal\" operator that isn't\n    // going to return a ConnectableObservable. We can use `connect` to do what we\n    // need to do.\n    return connect(selector, {\n      connector: subjectFactory,\n    });\n  }\n\n  return (source: Observable<T>) => new ConnectableObservable<any>(source, subjectFactory);\n}\n","import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { onErrorResumeNext as oERNCreate } from '../observable/onErrorResumeNext';\n\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  ...sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables, subscribes to next one on error or complete.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { of, onErrorResumeNext, map } from 'rxjs';\n *\n * of(1, 2, 3, 0)\n *   .pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *\n *       return 10 / x;\n *     }),\n *     onErrorResumeNext(of(1, 2, 3))\n *   )\n *   .subscribe({\n *     next: val => console.log(val),\n *     error: err => console.log(err),          // Will never be called.\n *     complete: () => console.log('that\\'s it!')\n *   });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'that's it!'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables passed either directly or as an array.\n * @return A function that returns an Observable that emits values from source\n * Observable, but - if it errors - subscribes to the next passed Observable\n * and so on, until it completes or runs out of Observables.\n */\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  // For some reason, TS 4.1 RC gets the inference wrong here and infers the\n  // result to be `A[number][]` - completely dropping the ObservableInput part\n  // of the type. This makes no sense whatsoever. As a workaround, the type is\n  // asserted explicitly.\n  const nextSources = argsOrArgArray(sources) as unknown as ObservableInputTuple<A>;\n\n  return (source) => oERNCreate(source, ...nextSources);\n}\n\n/**\n * @deprecated Renamed. Use {@link onErrorResumeNextWith} instead. Will be removed in v8.\n */\nexport const onErrorResumeNext = onErrorResumeNextWith;\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n *\n * On every click (starting from the second), emit the relative distance to the previous click\n *\n * ```ts\n * import { fromEvent, pairwise, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(([first, second]) => {\n *     const x0 = first.clientX;\n *     const y0 = first.clientY;\n *     const x1 = second.clientX;\n *     const y1 = second.clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   })\n * );\n *\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return A function that returns an Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return operate((source, subscriber) => {\n    let prev: T;\n    let hasPrev = false;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const p = prev;\n        prev = value;\n        hasPrev && subscriber.next([p, value]);\n        hasPrev = true;\n      })\n    );\n  });\n}\n","import { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n  k1: K1,\n  k2: K2,\n  k3: K3\n): OperatorFunction<T, T[K1][K2][K3]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4\n): OperatorFunction<T, T[K1][K2][K3][K4]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, ...rest: string[]): OperatorFunction<T, unknown>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T>(...properties: string[]): OperatorFunction<T, unknown>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted value.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings or numbers describing a path to a property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n *\n * Map every click to the tagName of the clicked target element\n *\n * ```ts\n * import { fromEvent, pluck } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n *\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param properties The nested properties to pluck from each source\n * value.\n * @return A function that returns an Observable of property values from the\n * source values.\n * @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8.\n */\nexport function pluck<T, R>(...properties: Array<string | number | symbol>): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return map((x) => {\n    let currentProp: any = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp?.[properties[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { connect } from './connect';\n\n/**\n * Returns a connectable observable that, when connected, will multicast\n * all values through a single underlying {@link Subject} instance.\n *\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * `source.pipe(publish())` is equivalent to\n * `connectable(source, { connector: () => new Subject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publish`, use {@link share} operator instead.\n * `source.pipe(publish(), refCount())` is equivalent to\n * `source.pipe(share({ resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Returns an observable, that when subscribed to, creates an underlying {@link Subject},\n * provides an observable view of it to a `selector` function, takes the observable result of\n * that selector function and subscribes to it, sending its values to the consumer, _then_ connects\n * the subject to the original source.\n *\n * @param selector A function used to setup multicasting prior to automatic connection.\n *\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `publish(selector)` is equivalent to `connect(selector)`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n *\n * Make `source$` hot by applying `publish` operator, then merge each inner observable into a single one\n * and subscribe\n *\n * ```ts\n * import { zip, interval, of, map, publish, merge, tap } from 'rxjs';\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9))\n *   .pipe(map(([, number]) => number));\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x)))\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @see {@link publishLast}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A function that returns a ConnectableObservable that upon connection\n * causes the source Observable to emit items to its Observers.\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ? (source) => connect(selector)(source) : (source) => multicast(new Subject<T>())(source);\n}\n","import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Creates a {@link ConnectableObservable} that utilizes a {@link BehaviorSubject}.\n *\n * @param initialValue The initial value passed to the {@link BehaviorSubject}.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link BehaviorSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishBehavior(initValue))` is equivalent to\n * `connectable(source, { connector: () => new BehaviorSubject(initValue), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishBehavior`, use the {@link share} operator instead.\n * `source.pipe(publishBehavior(initValue), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new BehaviorSubject(initValue), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false  }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishBehavior<T>(initialValue: T): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported the selector function.\n  return (source) => {\n    const subject = new BehaviorSubject<T>(initialValue);\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { ConnectableObservable, interval, publishLast, tap, take } from 'rxjs';\n *\n * const connectable = <ConnectableObservable<number>>interval(1000)\n *   .pipe(\n *     tap(x => console.log('side effect', x)),\n *     take(3),\n *     publishLast()\n *   );\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. A', x),\n *   error: err => console.log('Sub. A Error', err),\n *   complete: () => console.log('Sub. A Complete')\n * });\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. B', x),\n *   error: err => console.log('Sub. B Error', err),\n *   complete: () => console.log('Sub. B Complete')\n * });\n *\n * connectable.connect();\n *\n * // Results:\n * // 'side effect 0'   - after one second\n * // 'side effect 1'   - after two seconds\n * // 'side effect 2'   - after three seconds\n * // 'Sub. A 2'        - immediately after 'side effect 2'\n * // 'Sub. B 2'\n * // 'Sub. A Complete'\n * // 'Sub. B Complete'\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return A function that returns an Observable that emits elements of a\n * sequence produced by multicasting the source sequence.\n * @deprecated Will be removed in v8. To create a connectable observable with an\n * {@link AsyncSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishLast())` is equivalent to\n * `connectable(source, { connector: () => new AsyncSubject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishLast`, use the {@link share} operator instead.\n * `source.pipe(publishLast(), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new AsyncSubject(), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported a selector function like `publish` and `publishReplay`.\n  return (source) => {\n    const subject = new AsyncSubject<T>();\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { MonoTypeOperatorFunction, OperatorFunction, TimestampProvider, ObservableInput, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T>(\n  bufferSize?: number,\n  windowTime?: number,\n  timestampProvider?: TimestampProvider\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Creates an observable, that when subscribed to, will create a {@link ReplaySubject},\n * and pass an observable from it (using [asObservable](api/index/class/Subject#asObservable)) to\n * the `selector` function, which then returns an observable that is subscribed to before\n * \"connecting\" the source to the internal `ReplaySubject`.\n *\n * Since this is deprecated, for additional details see the documentation for {@link connect}.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector A function used to setup the multicast.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `source.pipe(publishReplay(size, window, selector, scheduler))` is equivalent to\n * `source.pipe(connect(selector, { connector: () => new ReplaySubject(size, window, scheduler) }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: (shared: Observable<T>) => O,\n  timestampProvider?: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector Passing `undefined` here determines that this operator will return a {@link ConnectableObservable}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: undefined,\n  timestampProvider: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, R>(\n  bufferSize?: number,\n  windowTime?: number,\n  selectorOrScheduler?: TimestampProvider | OperatorFunction<T, R>,\n  timestampProvider?: TimestampProvider\n) {\n  if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\n    timestampProvider = selectorOrScheduler;\n  }\n  const selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n  // Note, we're passing `selector!` here, because at runtime, `undefined` is an acceptable argument\n  // but it makes our TypeScript signature for `multicast` unhappy (as it should, because it's gross).\n  return (source: Observable<T>) => multicast(new ReplaySubject<T>(bufferSize, windowTime, timestampProvider), selector!)(source);\n}\n","import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { raceInit } from '../observable/race';\nimport { operate } from '../util/lift';\nimport { identity } from '../util/identity';\n\n/**\n * Creates an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of the Observable to which\n * the operator is applied and supplied Observables.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, raceWith } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * obs1\n *   .pipe(raceWith(obs2, obs3))\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param otherSources Sources used to race for which Observable emits first.\n * @return A function that returns an Observable that mirrors the output of the\n * first Observable to emit an item.\n */\nexport function raceWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return !otherSources.length\n    ? identity\n    : operate((source, subscriber) => {\n        raceInit<T | A[number]>([source, ...otherSources])(subscriber);\n      });\n}\n","import { Subscription } from '../Subscription';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { timer } from '../observable/timer';\n\nexport interface RepeatConfig {\n  /**\n   * The number of times to repeat the source. Defaults to `Infinity`.\n   */\n  count?: number;\n\n  /**\n   * If a `number`, will delay the repeat of the source by that number of milliseconds.\n   * If a function, it will provide the number of times the source has been subscribed to,\n   * and the return value should be a valid observable input that will notify when the source\n   * should be repeated. If the notifier observable is empty, the result will complete.\n   */\n  delay?: number | ((count: number) => ObservableInput<any>);\n}\n\n/**\n * Returns an Observable that will resubscribe to the source stream when the source stream completes.\n *\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\n *\n * ![](repeat.png)\n *\n * Repeat will output values from a source until the source completes, then it will resubscribe to the\n * source a specified number of times, with a specified delay. Repeat can be particularly useful in\n * combination with closing operators like {@link take}, {@link takeUntil}, {@link first}, or {@link takeWhile},\n * as it can be used to restart a source again from scratch.\n *\n * Repeat is very similar to {@link retry}, where {@link retry} will resubscribe to the source in the error case, but\n * `repeat` will resubscribe if the source completes.\n *\n * Note that `repeat` will _not_ catch errors. Use {@link retry} for that.\n *\n * - `repeat(0)` returns an empty observable\n * - `repeat()` will repeat forever\n * - `repeat({ delay: 200 })` will repeat forever, with a delay of 200ms between repetitions.\n * - `repeat({ count: 2, delay: 400 })` will repeat twice, with a delay of 400ms between repetitions.\n * - `repeat({ delay: (count) => timer(count * 1000) })` will repeat forever, but will have a delay that grows by one second for each repetition.\n *\n * ## Example\n *\n * Repeat a message stream\n *\n * ```ts\n * import { of, repeat } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const result = source.pipe(repeat(3));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results\n * // 'Repeat message'\n * // 'Repeat message'\n * // 'Repeat message'\n * ```\n *\n * Repeat 3 values, 2 times\n *\n * ```ts\n * import { interval, take, repeat } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(take(3), repeat(2));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results every second\n * // 0\n * // 1\n * // 2\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Defining two complex repeats with delays on the same source.\n * Note that the second repeat cannot be called until the first\n * repeat as exhausted it's count.\n *\n * ```ts\n * import { defer, of, repeat } from 'rxjs';\n *\n * const source = defer(() => {\n *    return of(`Hello, it is ${new Date()}`)\n * });\n *\n * source.pipe(\n *    // Repeat 3 times with a delay of 1 second between repetitions\n *    repeat({\n *      count: 3,\n *      delay: 1000,\n *    }),\n *\n *    // *Then* repeat forever, but with an exponential step-back\n *    // maxing out at 1 minute.\n *    repeat({\n *      delay: (count) => timer(Math.min(60000, 2 ^ count * 1000))\n *    })\n * )\n * ```\n *\n * @see {@link repeatWhen}\n * @see {@link retry}\n *\n * @param count The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n */\nexport function repeat<T>(countOrConfig?: number | RepeatConfig): MonoTypeOperatorFunction<T> {\n  let count = Infinity;\n  let delay: RepeatConfig['delay'];\n\n  if (countOrConfig != null) {\n    if (typeof countOrConfig === 'object') {\n      ({ count = Infinity, delay } = countOrConfig);\n    } else {\n      count = countOrConfig;\n    }\n  }\n\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let sourceSub: Subscription | null;\n\n        const resubscribe = () => {\n          sourceSub?.unsubscribe();\n          sourceSub = null;\n          if (delay != null) {\n            const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n            const notifierSubscriber = createOperatorSubscriber(subscriber, () => {\n              notifierSubscriber.unsubscribe();\n              subscribeToSource();\n            });\n            notifier.subscribe(notifierSubscriber);\n          } else {\n            subscribeToSource();\n          }\n        };\n\n        const subscribeToSource = () => {\n          let syncUnsub = false;\n          sourceSub = source.subscribe(\n            createOperatorSubscriber(subscriber, undefined, () => {\n              if (++soFar < count) {\n                if (sourceSub) {\n                  resubscribe();\n                } else {\n                  syncUnsub = true;\n                }\n              } else {\n                subscriber.complete();\n              }\n            })\n          );\n\n          if (syncUnsub) {\n            resubscribe();\n          }\n        };\n\n        subscribeToSource();\n      });\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * ## Example\n *\n * Repeat a message stream on click\n *\n * ```ts\n * import { of, fromEvent, repeatWhen } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const documentClick$ = fromEvent(document, 'click');\n *\n * const result = source.pipe(repeatWhen(() => documentClick$));\n *\n * result.subscribe(data => console.log(data))\n * ```\n *\n * @see {@link repeat}\n * @see {@link retry}\n * @see {@link retryWhen}\n *\n * @param notifier Function that receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return A function that returns an `ObservableInput` that mirrors the source\n * Observable with the exception of a `complete`.\n * @deprecated Will be removed in v9 or v10. Use {@link repeat}'s {@link RepeatConfig#delay delay} option instead.\n * Instead of `repeatWhen(() => notify$)`, use: `repeat({ delay: () => notify$ })`.\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<void>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let completions$: Subject<void>;\n    let isNotifierComplete = false;\n    let isMainComplete = false;\n\n    /**\n     * Checks to see if we can complete the result, completes it, and returns `true` if it was completed.\n     */\n    const checkComplete = () => isMainComplete && isNotifierComplete && (subscriber.complete(), true);\n    /**\n     * Gets the subject to send errors through. If it doesn't exist,\n     * we know we need to setup the notifier.\n     */\n    const getCompletionSubject = () => {\n      if (!completions$) {\n        completions$ = new Subject();\n\n        // If the call to `notifier` throws, it will be caught by the OperatorSubscriber\n        // In the main subscription -- in `subscribeForRepeatWhen`.\n        innerFrom(notifier(completions$)).subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            () => {\n              if (innerSub) {\n                subscribeForRepeatWhen();\n              } else {\n                // If we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                syncResub = true;\n              }\n            },\n            () => {\n              isNotifierComplete = true;\n              checkComplete();\n            }\n          )\n        );\n      }\n      return completions$;\n    };\n\n    const subscribeForRepeatWhen = () => {\n      isMainComplete = false;\n\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, () => {\n          isMainComplete = true;\n          // Check to see if we are complete, and complete if so.\n          // If we are not complete. Get the subject. This calls the `notifier` function.\n          // If that function fails, it will throw and `.next()` will not be reached on this\n          // line. The thrown error is caught by the _complete handler in this\n          // `OperatorSubscriber` and handled appropriately.\n          !checkComplete() && getCompletionSubject().next();\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        // It is important to null this out. Not only to free up memory, but\n        // to make sure code above knows we are in a subscribing state to\n        // handle synchronous resubscription.\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flags.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRepeatWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRepeatWhen();\n  });\n}\n","import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { Subscription } from '../Subscription';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * The {@link retry} operator configuration object. `retry` either accepts a `number`\n * or an object described by this interface.\n */\nexport interface RetryConfig {\n  /**\n   * The maximum number of times to retry. If `count` is omitted, `retry` will try to\n   * resubscribe on errors infinite number of times.\n   */\n  count?: number;\n  /**\n   * The number of milliseconds to delay before retrying, OR a function to\n   * return a notifier for delaying. If a function is given, that function should\n   * return a notifier that, when it emits will retry the source. If the notifier\n   * completes _without_ emitting, the resulting observable will complete without error,\n   * if the notifier errors, the error will be pushed to the result.\n   */\n  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);\n  /**\n   * Whether or not to reset the retry counter when the retried subscription\n   * emits its first value.\n   */\n  resetOnSuccess?: boolean;\n}\n\nexport function retry<T>(count?: number): MonoTypeOperatorFunction<T>;\nexport function retry<T>(config: RetryConfig): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`.\n *\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * `count` resubscriptions rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * The number of retries is determined by the `count` parameter. It can be set either by passing a number to\n * `retry` function or by setting `count` property when `retry` is configured using {@link RetryConfig}. If\n * `count` is omitted, `retry` will try to resubscribe on errors infinite number of times.\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those\n * emitted during failed subscriptions. For example, if an Observable fails at first but emits `[1, 2]` then\n * succeeds the second time and emits: `[1, 2, 3, 4, 5, complete]` then the complete stream of emissions and\n * notifications would be: `[1, 2, 1, 2, 3, 4, 5, complete]`.\n *\n * ## Example\n *\n * ```ts\n * import { interval, mergeMap, throwError, of, retry } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   mergeMap(val => val > 5 ? throwError(() => 'Error!') : of(val)),\n *   retry(2) // retry 2 times on error\n * );\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(`${ err }: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 'Error!: Retried 2 times then quit!'\n * ```\n *\n * @see {@link retryWhen}\n *\n * @param configOrCount - Either number of retry attempts before failing or a {@link RetryConfig} object.\n * @return A function that returns an Observable that will resubscribe to the\n * source stream when the source stream errors, at most `count` times.\n */\nexport function retry<T>(configOrCount: number | RetryConfig = Infinity): MonoTypeOperatorFunction<T> {\n  let config: RetryConfig;\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount as number,\n    };\n  }\n  const { count = Infinity, delay, resetOnSuccess: resetOnSuccess = false } = config;\n\n  return count <= 0\n    ? identity\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let innerSub: Subscription | null;\n        const subscribeForRetry = () => {\n          let syncUnsub = false;\n          innerSub = source.subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                // If we're resetting on success\n                if (resetOnSuccess) {\n                  soFar = 0;\n                }\n                subscriber.next(value);\n              },\n              // Completions are passed through to consumer.\n              undefined,\n              (err) => {\n                if (soFar++ < count) {\n                  // We are still under our retry count\n                  const resub = () => {\n                    if (innerSub) {\n                      innerSub.unsubscribe();\n                      innerSub = null;\n                      subscribeForRetry();\n                    } else {\n                      syncUnsub = true;\n                    }\n                  };\n\n                  if (delay != null) {\n                    // The user specified a retry delay.\n                    // They gave us a number, use a timer, otherwise, it's a function,\n                    // and we're going to call it to get a notifier.\n                    const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n                    const notifierSubscriber = createOperatorSubscriber(\n                      subscriber,\n                      () => {\n                        // After we get the first notification, we\n                        // unsubscribe from the notifier, because we don't want anymore\n                        // and we resubscribe to the source.\n                        notifierSubscriber.unsubscribe();\n                        resub();\n                      },\n                      () => {\n                        // The notifier completed without emitting.\n                        // The author is telling us they want to complete.\n                        subscriber.complete();\n                      }\n                    );\n                    notifier.subscribe(notifierSubscriber);\n                  } else {\n                    // There was no notifier given. Just resub immediately.\n                    resub();\n                  }\n                } else {\n                  // We're past our maximum number of retries.\n                  // Just send along the error.\n                  subscriber.error(err);\n                }\n              }\n            )\n          );\n          if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            subscribeForRetry();\n          }\n        };\n        subscribeForRetry();\n      });\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the `ObservableInput` returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * Retry an observable sequence on error based on custom criteria.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, retryWhen, tap, delayWhen, timer } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   map(value => {\n *     if (value > 5) {\n *       // error will be picked up by retryWhen\n *       throw value;\n *     }\n *     return value;\n *   }),\n *   retryWhen(errors =>\n *     errors.pipe(\n *       // log error message\n *       tap(value => console.log(`Value ${ value } was too high!`)),\n *       // restart in 5 seconds\n *       delayWhen(value => timer(value * 1000))\n *     )\n *   )\n * );\n *\n * result.subscribe(value => console.log(value));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 'Value 6 was too high!'\n * // - Wait 5 seconds then repeat\n * ```\n *\n * @see {@link retry}\n *\n * @param notifier Function that receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return A function that returns an `ObservableInput` that mirrors the source\n * Observable with the exception of an `error`.\n * @deprecated Will be removed in v9 or v10, use {@link retry}'s `delay` option instead.\n * Will be removed in v9 or v10. Use {@link retry}'s {@link RetryConfig#delay delay} option instead.\n * Instead of `retryWhen(() => notify$)`, use: `retry({ delay: () => notify$ })`.\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let errors$: Subject<any>;\n\n    const subscribeForRetryWhen = () => {\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n          if (!errors$) {\n            errors$ = new Subject();\n            innerFrom(notifier(errors$)).subscribe(\n              createOperatorSubscriber(subscriber, () =>\n                // If we have an innerSub, this was an asynchronous call, kick off the retry.\n                // Otherwise, if we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                innerSub ? subscribeForRetryWhen() : (syncResub = true)\n              )\n            );\n          }\n          if (errors$) {\n            // We have set up the notifier without error.\n            errors$.next(err);\n          }\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flag.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRetryWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRetryWhen();\n  });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` `ObservableInput` emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` `ObservableInput` emits a value, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n *\n * On every click, sample the most recent `seconds` timer\n *\n * ```ts\n * import { fromEvent, interval, sample } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param notifier The `ObservableInput` to use for sampling the\n * source Observable.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable whenever the notifier\n * Observable emits value or completes.\n */\nexport function sample<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        hasValue = true;\n        lastValue = value;\n      })\n    );\n    innerFrom(notifier).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          if (hasValue) {\n            hasValue = false;\n            const value = lastValue!;\n            lastValue = null;\n            subscriber.next(value);\n          }\n        },\n        noop\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { sample } from './sample';\nimport { interval } from '../observable/interval';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n *\n * Every second, emit the most recent click at most once\n *\n * ```ts\n * import { fromEvent, sampleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable at the specified time\n * interval.\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return sample(interval(period, scheduler));\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\n\nexport function scan<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function scan<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function scan<V, A, S>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n// TODO: link to a \"redux pattern\" section in the guide (location TBD)\n\n/**\n * Useful for encapsulating and managing state. Applies an accumulator (or \"reducer function\")\n * to each value from the source after an initial state is established -- either via\n * a `seed` value (second argument), or from the first value from the source.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation state after each update</span>\n *\n * ![](scan.png)\n *\n * This operator maintains an internal state and emits it after processing each value as follows:\n *\n * 1. First value arrives\n *   - If a `seed` value was supplied (as the second argument to `scan`), let `state = seed` and `value = firstValue`.\n *   - If NO `seed` value was supplied (no second argument), let `state = firstValue` and go to 3.\n * 2. Let `state = accumulator(state, value)`.\n *   - If an error is thrown by `accumulator`, notify the consumer of an error. The process ends.\n * 3. Emit `state`.\n * 4. Next value arrives, let `value = nextValue`, go to 2.\n *\n * ## Examples\n *\n * An average of previous numbers. This example shows how\n * not providing a `seed` can prime the stream with the\n * first value from the source.\n *\n * ```ts\n * import { of, scan, map } from 'rxjs';\n *\n * const numbers$ = of(1, 2, 3);\n *\n * numbers$\n *   .pipe(\n *     // Get the sum of the numbers coming in.\n *     scan((total, n) => total + n),\n *     // Get the average by dividing the sum by the total number\n *     // received so far (which is 1 more than the zero-based index).\n *     map((sum, index) => sum / (index + 1))\n *   )\n *   .subscribe(console.log);\n * ```\n *\n * The Fibonacci sequence. This example shows how you can use\n * a seed to prime accumulation process. Also... you know... Fibonacci.\n * So important to like, computers and stuff that its whiteboarded\n * in job interviews. Now you can show them the Rx version! (Please don't, haha)\n *\n * ```ts\n * import { interval, scan, map, startWith } from 'rxjs';\n *\n * const firstTwoFibs = [0, 1];\n * // An endless stream of Fibonacci numbers.\n * const fibonacci$ = interval(1000).pipe(\n *   // Scan to get the fibonacci numbers (after 0, 1)\n *   scan(([a, b]) => [b, a + b], firstTwoFibs),\n *   // Get the second number in the tuple, it's the one you calculated\n *   map(([, n]) => n),\n *   // Start with our first two digits :)\n *   startWith(...firstTwoFibs)\n * );\n *\n * fibonacci$.subscribe(console.log);\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n * @see {@link switchScan}\n *\n * @param accumulator A \"reducer function\". This will be called for each value after an initial state is\n * acquired.\n * @param seed The initial state. If this is not provided, the first value from the source will\n * be used as the initial state, and emitted without going through the accumulator. All subsequent values\n * will be processed by the accumulator function. If this is provided, all values will go through\n * the accumulator function.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function scan<V, A, S>(accumulator: (acc: V | A | S, value: V, index: number) => A, seed?: S): OperatorFunction<V, V | A> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  return operate(scanInternals(accumulator, seed as S, arguments.length >= 2, true));\n}\n","import { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to source observable and `compareTo` `ObservableInput` (that internally\n * gets converted to an observable) and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other completes, the returned observable will never complete.\n *\n * ## Example\n *\n * Figure out if the Konami code matches\n *\n * ```ts\n * import { from, fromEvent, map, bufferCount, mergeMap, sequenceEqual } from 'rxjs';\n *\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent<KeyboardEvent>(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(last11 => from(last11).pipe(sequenceEqual(codes)))\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param compareTo The `ObservableInput` sequence to compare the source sequence to.\n * @param comparator An optional function to compare each value pair.\n *\n * @return A function that returns an Observable that emits a single boolean\n * value representing whether or not the values emitted by the source\n * Observable and provided `ObservableInput` were equal in sequence.\n */\nexport function sequenceEqual<T>(\n  compareTo: ObservableInput<T>,\n  comparator: (a: T, b: T) => boolean = (a, b) => a === b\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    // The state for the source observable\n    const aState = createState<T>();\n    // The state for the compareTo observable;\n    const bState = createState<T>();\n\n    /** A utility to emit and complete */\n    const emit = (isEqual: boolean) => {\n      subscriber.next(isEqual);\n      subscriber.complete();\n    };\n\n    /**\n     * Creates a subscriber that subscribes to one of the sources, and compares its collected\n     * state -- `selfState` -- to the other source's collected state -- `otherState`. This\n     * is used for both streams.\n     */\n    const createSubscriber = (selfState: SequenceState<T>, otherState: SequenceState<T>) => {\n      const sequenceEqualSubscriber = createOperatorSubscriber(\n        subscriber,\n        (a: T) => {\n          const { buffer, complete } = otherState;\n          if (buffer.length === 0) {\n            // If there's no values in the other buffer\n            // and the other stream is complete, we know\n            // this isn't a match, because we got one more value.\n            // Otherwise, we push onto our buffer, so when the other\n            // stream emits, it can pull this value off our buffer and check it\n            // at the appropriate time.\n            complete ? emit(false) : selfState.buffer.push(a);\n          } else {\n            // If the other stream *does* have values in its buffer,\n            // pull the oldest one off so we can compare it to what we\n            // just got. If it wasn't a match, emit `false` and complete.\n            !comparator(a, buffer.shift()!) && emit(false);\n          }\n        },\n        () => {\n          // Or observable completed\n          selfState.complete = true;\n          const { complete, buffer } = otherState;\n          // If the other observable is also complete, and there's\n          // still stuff left in their buffer, it doesn't match, if their\n          // buffer is empty, then it does match. This is because we can't\n          // possibly get more values here anymore.\n          complete && emit(buffer.length === 0);\n          // Be sure to clean up our stream as soon as possible if we can.\n          sequenceEqualSubscriber?.unsubscribe();\n        }\n      );\n\n      return sequenceEqualSubscriber;\n    };\n\n    // Subscribe to each source.\n    source.subscribe(createSubscriber(aState, bState));\n    innerFrom(compareTo).subscribe(createSubscriber(bState, aState));\n  });\n}\n\n/**\n * A simple structure for the data used to test each sequence\n */\ninterface SequenceState<T> {\n  /** A temporary store for arrived values before they are checked */\n  buffer: T[];\n  /** Whether or not the sequence source has completed. */\n  complete: boolean;\n}\n\n/**\n * Creates a simple structure that is used to represent\n * data used to test each sequence.\n */\nfunction createState<T>(): SequenceState<T> {\n  return {\n    buffer: [],\n    complete: false,\n  };\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubjectLike, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\n\nexport interface ShareConfig<T> {\n  /**\n   * The factory used to create the subject that will connect the source observable to\n   * multicast consumers.\n   */\n  connector?: () => SubjectLike<T>;\n  /**\n   * If `true`, the resulting observable will reset internal state on error from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"retried\" in the event of an error.\n   * If `false`, when an error comes from the source it will push the error into the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent retries\n   * or resubscriptions will resubscribe to that same subject. In all cases, RxJS subjects will emit the same error again, however\n   * {@link ReplaySubject} will also push its buffered values before pushing the error.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnError?: boolean | ((error: any) => ObservableInput<any>);\n  /**\n   * If `true`, the resulting observable will reset internal state on completion from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"repeated\" after it is done.\n   * If `false`, when the source completes, it will push the completion through the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent repeats\n   * or resubscriptions will resubscribe to that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnComplete?: boolean | (() => ObservableInput<any>);\n  /**\n   * If `true`, when the number of subscribers to the resulting observable reaches zero due to those subscribers unsubscribing, the\n   * internal state will be reset and the resulting observable will return to a \"cold\" state. This means that the next\n   * time the resulting observable is subscribed to, a new subject will be created and the source will be subscribed to\n   * again.\n   * If `false`, when the number of subscribers to the resulting observable reaches zero due to unsubscription, the subject\n   * will remain connected to the source, and new subscriptions to the result will be connected through that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnRefCountZero?: boolean | (() => ObservableInput<any>);\n}\n\nexport function share<T>(): MonoTypeOperatorFunction<T>;\n\nexport function share<T>(options: ShareConfig<T>): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * The subscription to the underlying source Observable can be reset (unsubscribe and resubscribe for new subscribers),\n * if the subscriber count to the shared observable drops to 0, or if the source Observable errors or completes. It is\n * possible to use notifier factories for the resets to allow for behaviors like conditional or delayed resets. Please\n * note that resetting on error or complete of the source Observable does not behave like a transparent retry or restart\n * of the source because the error or complete will be forwarded to all subscribers and their subscription will be\n * closed. Only new subscribers after a reset on error or complete happened will cause a fresh subscription to the\n * source. To achieve transparent retries or restarts pipe the source through appropriate operators before sharing.\n *\n * ![](share.png)\n *\n * ## Example\n *\n * Generate new multicast Observable from the `source` Observable value\n *\n * ```ts\n * import { interval, tap, map, take, share } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   tap(x => console.log('Processing: ', x)),\n *   map(x => x * x),\n *   take(6),\n *   share()\n * );\n *\n * source.subscribe(x => console.log('subscription 1: ', x));\n * source.subscribe(x => console.log('subscription 2: ', x));\n *\n * // Logs:\n * // Processing: 0\n * // subscription 1: 0\n * // subscription 2: 0\n * // Processing: 1\n * // subscription 1: 1\n * // subscription 2: 1\n * // Processing: 2\n * // subscription 1: 4\n * // subscription 2: 4\n * // Processing: 3\n * // subscription 1: 9\n * // subscription 2: 9\n * // Processing: 4\n * // subscription 1: 16\n * // subscription 2: 16\n * // Processing: 5\n * // subscription 1: 25\n * // subscription 2: 25\n * ```\n *\n * ## Example with notifier factory: Delayed reset\n *\n * ```ts\n * import { interval, take, share, timer } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   take(3),\n *   share({\n *     resetOnRefCountZero: () => timer(1000)\n *   })\n * );\n *\n * const subscriptionOne = source.subscribe(x => console.log('subscription 1: ', x));\n * setTimeout(() => subscriptionOne.unsubscribe(), 1300);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 2: ', x)), 1700);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 3: ', x)), 5000);\n *\n * // Logs:\n * // subscription 1:  0\n * // (subscription 1 unsubscribes here)\n * // (subscription 2 subscribes here ~400ms later, source was not reset)\n * // subscription 2:  1\n * // subscription 2:  2\n * // (subscription 2 unsubscribes here)\n * // (subscription 3 subscribes here ~2000ms later, source did reset before)\n * // subscription 3:  0\n * // subscription 3:  1\n * // subscription 3:  2\n * ```\n *\n * @see {@link shareReplay}\n *\n * @return A function that returns an Observable that mirrors the source.\n */\nexport function share<T>(options: ShareConfig<T> = {}): MonoTypeOperatorFunction<T> {\n  const { connector = () => new Subject<T>(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n  // It's necessary to use a wrapper here, as the _operator_ must be\n  // referentially transparent. Otherwise, it cannot be used in calls to the\n  // static `pipe` function - to create a partial pipeline.\n  //\n  // The _operator function_ - the function returned by the _operator_ - will\n  // not be referentially transparent - as it shares its source - but the\n  // _operator function_ is called when the complete pipeline is composed via a\n  // call to a source observable's `pipe` method - not when the static `pipe`\n  // function is called.\n  return (wrapperSource) => {\n    let connection: SafeSubscriber<T> | undefined;\n    let resetConnection: Subscription | undefined;\n    let subject: SubjectLike<T> | undefined;\n    let refCount = 0;\n    let hasCompleted = false;\n    let hasErrored = false;\n\n    const cancelReset = () => {\n      resetConnection?.unsubscribe();\n      resetConnection = undefined;\n    };\n    // Used to reset the internal state to a \"cold\"\n    // state, as though it had never been subscribed to.\n    const reset = () => {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n    const resetAndUnsubscribe = () => {\n      // We need to capture the connection before\n      // we reset (if we need to reset).\n      const conn = connection;\n      reset();\n      conn?.unsubscribe();\n    };\n\n    return operate<T, T>((source, subscriber) => {\n      refCount++;\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n\n      // Create the subject if we don't have one yet. Grab a local reference to\n      // it as well, which avoids non-null assertions when using it and, if we\n      // connect to it now, then error/complete need a reference after it was\n      // reset.\n      const dest = (subject = subject ?? connector());\n\n      // Add the finalization directly to the subscriber - instead of returning it -\n      // so that the handling of the subscriber's unsubscription will be wired\n      // up _before_ the subscription to the source occurs. This is done so that\n      // the assignment to the source connection's `closed` property will be seen\n      // by synchronous firehose sources.\n      subscriber.add(() => {\n        refCount--;\n\n        // If we're resetting on refCount === 0, and it's 0, we only want to do\n        // that on \"unsubscribe\", really. Resetting on error or completion is a different\n        // configuration.\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n\n      // The following line adds the subscription to the subscriber passed.\n      // Basically, `subscriber === dest.subscribe(subscriber)` is `true`.\n      dest.subscribe(subscriber);\n\n      if (\n        !connection &&\n        // Check this shareReplay is still activate - it can be reset to 0\n        // and be \"unsubscribed\" _before_ it actually subscribes.\n        // If we were to subscribe then, it'd leak and get stuck.\n        refCount > 0\n      ) {\n        // We need to create a subscriber here - rather than pass an observer and\n        // assign the returned subscription to connection - because it's possible\n        // for reentrant subscriptions to the shared observable to occur and in\n        // those situations we want connection to be already-assigned so that we\n        // don't create another connection to the source.\n        connection = new SafeSubscriber({\n          next: (value) => dest.next(value),\n          error: (err) => {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: () => {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          },\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\n\nfunction handleReset<T extends unknown[] = never[]>(\n  reset: () => void,\n  on: boolean | ((...args: T) => ObservableInput<any>),\n  ...args: T\n): Subscription | undefined {\n  if (on === true) {\n    reset();\n    return;\n  }\n\n  if (on === false) {\n    return;\n  }\n\n  const onSubscriber = new SafeSubscriber({\n    next: () => {\n      onSubscriber.unsubscribe();\n      reset();\n    },\n  });\n\n  return innerFrom(on(...args)).subscribe(onSubscriber);\n}\n","import { ReplaySubject } from '../ReplaySubject';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { share } from './share';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplay`ed observable forever,\n * but an errored source can be retried.\n *\n * ## Why use `shareReplay`?\n *\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ## Reference counting\n *\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\n * (and potentially run for ever).\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\n * observables which we want to keep running instead of having to do the expensive setup again.\n *\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\n * happens when the operators internal reference counter drops to zero.\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\n *\n * ## Examples\n *\n * Example with a third subscriber coming late to the party\n *\n * ```ts\n * import { interval, take, shareReplay } from 'rxjs';\n *\n * const shared$ = interval(2000).pipe(\n *   take(6),\n *   shareReplay(3)\n * );\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * setTimeout(() => {\n *   shared$.subscribe(y => console.log('sub C: ', y));\n * }, 11000);\n *\n * // Logs:\n * // (after ~2000 ms)\n * // sub A: 0\n * // sub B: 0\n * // (after ~4000 ms)\n * // sub A: 1\n * // sub B: 1\n * // (after ~6000 ms)\n * // sub A: 2\n * // sub B: 2\n * // (after ~8000 ms)\n * // sub A: 3\n * // sub B: 3\n * // (after ~10000 ms)\n * // sub A: 4\n * // sub B: 4\n * // (after ~11000 ms, sub C gets the last 3 values)\n * // sub C: 2\n * // sub C: 3\n * // sub C: 4\n * // (after ~12000 ms)\n * // sub A: 5\n * // sub B: 5\n * // sub C: 5\n * ```\n *\n * Example for `refCount` usage\n *\n * ```ts\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\n *\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\n *   tap({\n *     subscribe: () => console.log(`${ name }: subscribed`),\n *     next: value => console.log(`${ name }: ${ value }`),\n *     complete: () => console.log(`${ name }: completed`),\n *     finalize: () => console.log(`${ name }: unsubscribed`)\n *   })\n * );\n *\n * const obs$ = log('source', interval(1000));\n *\n * const shared$ = log('shared', obs$.pipe(\n *   shareReplay({ bufferSize: 1, refCount: true }),\n *   take(2)\n * ));\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * // PRINTS:\n * // shared: subscribed <-- reference count = 1\n * // source: subscribed\n * // shared: subscribed <-- reference count = 2\n * // source: 0\n * // shared: 0\n * // sub A: 0\n * // shared: 0\n * // sub B: 0\n * // source: 1\n * // shared: 1\n * // sub A: 1\n * // shared: completed <-- take(2) completes the subscription for sub A\n * // shared: unsubscribed <-- reference count = 1\n * // shared: 1\n * // sub B: 1\n * // shared: completed <-- take(2) completes the subscription for sub B\n * // shared: unsubscribed <-- reference count = 0\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\n *\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\n * // are listening.\n * // source: 2\n * // source: 3\n * // source: 4\n * // ...\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param configOrBufferSize Maximum element count of the replay buffer or {@link ShareReplayConfig configuration}\n * object.\n * @param windowTime Maximum time length of the replay buffer in milliseconds.\n * @param scheduler Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return A function that returns an Observable sequence that contains the\n * elements of a sequence produced by multicasting the source sequence within a\n * selector function.\n */\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let bufferSize: number;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n  } else {\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\n  }\n  return share<T>({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount,\n  });\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { MonoTypeOperatorFunction, OperatorFunction, TruthyTypesOf } from '../types';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function single<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that asserts that only one value is\n * emitted from the observable that matches the predicate. If no\n * predicate is provided, then it will assert that the observable\n * only emits one value.\n *\n * In the event that the observable is empty, it will throw an\n * {@link EmptyError}.\n *\n * In the event that two values are found that match the predicate,\n * or when there are two values emitted and no predicate, it will\n * throw a {@link SequenceError}\n *\n * In the event that no values match the predicate, if one is provided,\n * it will throw a {@link NotFoundError}\n *\n * ## Example\n *\n * Expect only `name` beginning with `'B'`\n *\n * ```ts\n * import { of, single } from 'rxjs';\n *\n * const source1 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Laney' },\n *  { name: 'Lily' }\n * );\n *\n * source1\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe(x => console.log(x));\n * // Emits 'Ben'\n *\n *\n * const source2 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Bradley' },\n *  { name: 'Lincoln' }\n * );\n *\n * source2\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: SequenceError('Too many values match')\n *\n *\n * const source3 = of(\n *  { name: 'Laney' },\n *  { name: 'Tracy' },\n *  { name: 'Lily' },\n *  { name: 'Lincoln' }\n * );\n *\n * source3\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: NotFoundError('No values match')\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {NotFoundError} Delivers an NotFoundError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @throws {SequenceError} Delivers a SequenceError if more than one value is emitted that matches the\n * provided predicate. If no predicate is provided, will deliver a SequenceError if more\n * than one value comes from the source\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return A function that returns an Observable that emits the single item\n * emitted by the source Observable that matches the predicate.\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let singleValue: T;\n    let seenValue = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          seenValue = true;\n          if (!predicate || predicate(value, index++, source)) {\n            hasValue && subscriber.error(new SequenceError('Too many matching values'));\n            hasValue = true;\n            singleValue = value;\n          }\n        },\n        () => {\n          if (hasValue) {\n            subscriber.next(singleValue);\n            subscriber.complete();\n          } else {\n            subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n          }\n        }\n      )\n    );\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { filter } from './filter';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * Skips the values until the sent notifications are equal or less than provided skip count. It raises\n * an error if skip count is equal or more than the actual number of emits and source raises an error.\n *\n * ## Example\n *\n * Skip the values before the emission\n *\n * ```ts\n * import { interval, skip } from 'rxjs';\n *\n * // emit every half second\n * const source = interval(500);\n * // skip the first 10 emitted values\n * const result = source.pipe(skip(10));\n *\n * result.subscribe(value => console.log(value));\n * // output: 10...11...12...13...\n * ```\n *\n * @see {@link last}\n * @see {@link skipWhile}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return A function that returns an Observable that skips the first `count`\n * values emitted by the source Observable.\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return filter((_, index) => count <= index);\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Skip a specified number of values before the completion of an observable.\n *\n * ![](skipLast.png)\n *\n * Returns an observable that will emit values as soon as it can, given a number of\n * skipped values. For example, if you `skipLast(3)` on a source, when the source\n * emits its fourth value, the first value the source emitted will finally be emitted\n * from the returned observable, as it is no longer part of what needs to be skipped.\n *\n * All values emitted by the result of `skipLast(N)` will be delayed by `N` emissions,\n * as each value is held in a buffer until enough values have been emitted that that\n * the buffered value may finally be sent to the consumer.\n *\n * After subscribing, unsubscribing will not result in the emission of the buffered\n * skipped values.\n *\n * ## Example\n *\n * Skip the last 2 values of an observable with many values\n *\n * ```ts\n * import { of, skipLast } from 'rxjs';\n *\n * const numbers = of(1, 2, 3, 4, 5);\n * const skipLastTwo = numbers.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * // (4 and 5 are skipped)\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @param skipCount Number of elements to skip from the end of the source Observable.\n * @return A function that returns an Observable that skips the last `count`\n * values emitted by the source Observable.\n */\nexport function skipLast<T>(skipCount: number): MonoTypeOperatorFunction<T> {\n  return skipCount <= 0\n    ? // For skipCounts less than or equal to zero, we are just mirroring the source.\n      identity\n    : operate((source, subscriber) => {\n        // A ring buffer to hold the values while we wait to see\n        // if we can emit it or it's part of the \"skipped\" last values.\n        // Note that it is the _same size_ as the skip count.\n        let ring: T[] = new Array(skipCount);\n        // The number of values seen so far. This is used to get\n        // the index of the current value when it arrives.\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Get the index of the value we have right now\n            // relative to all other values we've seen, then\n            // increment `seen`. This ensures we've moved to\n            // the next slot in our ring buffer.\n            const valueIndex = seen++;\n            if (valueIndex < skipCount) {\n              // If we haven't seen enough values to fill our buffer yet,\n              // Then we aren't to a number of seen values where we can\n              // emit anything, so let's just start by filling the ring buffer.\n              ring[valueIndex] = value;\n            } else {\n              // We are traversing over the ring array in such\n              // a way that when we get to the end, we loop back\n              // and go to the start.\n              const index = valueIndex % skipCount;\n              // Pull the oldest value out so we can emit it,\n              // and stuff the new value in it's place.\n              const oldValue = ring[index];\n              ring[index] = value;\n              // Emit the old value. It is important that this happens\n              // after we swap the value in the buffer, if it happens\n              // before we swap the value in the buffer, then a synchronous\n              // source can get the buffer out of whack.\n              subscriber.next(oldValue);\n            }\n          })\n        );\n\n        return () => {\n          // Release our values in memory\n          ring = null!;\n        };\n      });\n}\n","import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values until the passed in observable\n * emits the first value. This can be particularly useful in combination with user interactions, responses of HTTP\n * requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally, the `skipUntil` operator subscribes to the passed in `notifier` `ObservableInput` (which gets converted\n * to an Observable) in order to recognize the emission of its first value. When `notifier` emits next, the operator\n * unsubscribes from it and starts emitting the values of the *source* observable until it completes or errors. It\n * will never let the *source* observable emit any values if the `notifier` completes or throws an error without\n * emitting a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere\n * within the page\n *\n * ```ts\n * import { interval, fromEvent, skipUntil } from 'rxjs';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipWhile}\n * @see {@link skipLast}\n *\n * @param notifier An `ObservableInput` that has to emit an item before the source Observable elements begin to\n * be mirrored by the resulting Observable.\n * @return A function that returns an Observable that skips items from the\n * source Observable until the `notifier` Observable emits an item, then emits the\n * remaining items.\n */\nexport function skipUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n\n    const skipSubscriber = createOperatorSubscriber(\n      subscriber,\n      () => {\n        skipSubscriber?.unsubscribe();\n        taking = true;\n      },\n      noop\n    );\n\n    innerFrom(notifier).subscribe(skipSubscriber);\n\n    source.subscribe(createOperatorSubscriber(subscriber, (value) => taking && subscriber.next(value)));\n  });\n}\n","import { Falsy, MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function skipWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, Extract<T, Falsy> extends never ? never : T>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => true): OperatorFunction<T, never>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * Skips all the notifications with a truthy predicate. It will not skip the notifications when the predicate is falsy.\n * It can also be skipped using index. Once the predicate is true, it will not be called again.\n *\n * ## Example\n *\n * Skip some super heroes\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from(['Green Arrow', 'SuperMan', 'Flash', 'SuperGirl', 'Black Canary'])\n * // Skip the heroes until SuperGirl\n * const example = source.pipe(skipWhile(hero => hero !== 'SuperGirl'));\n * // output: SuperGirl, Black Canary\n * example.subscribe(femaleHero => console.log(femaleHero));\n * ```\n *\n * Skip values from the array until index 5\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from([1, 2, 3, 4, 5, 6, 7, 9, 10]);\n * const example = source.pipe(skipWhile((_, i) => i !== 5));\n * // output: 6, 7, 9, 10\n * example.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return A function that returns an Observable that begins emitting items\n * emitted by the source Observable when the specified predicate becomes false.\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => (taking || (taking = !predicate(value, index++))) && subscriber.next(value))\n    );\n  });\n}\n","import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n","import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switchAll}.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subscriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n","import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable\n * producing values only from the most recent observable sequence\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](switchAll.png)\n *\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\n * to inner observable, such that only the most recent inner observable may be subscribed to at\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\n * if there are any.\n *\n * ## Examples\n *\n * Spawn a new interval observable for each click event, but for every new\n * click, cancel the previous interval and subscribe to the new one\n *\n * ```ts\n * import { fromEvent, tap, map, interval, switchAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\n * const source = clicks.pipe(map(() => interval(1000)));\n *\n * source\n *   .pipe(switchAll())\n *   .subscribe(x => console.log(x));\n *\n * // Output\n * // click\n * // 0\n * // 1\n * // 2\n * // 3\n * // ...\n * // click\n * // 0\n * // 1\n * // 2\n * // ...\n * // click\n * // ...\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link mergeAll}\n *\n * @return A function that returns an Observable that converts a higher-order\n * Observable into a first-order Observable producing values only from the most\n * recent Observable sequence.\n */\nexport function switchAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return switchMap(identity);\n}\n","import { switchMap } from './switchMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)` */\nexport function switchMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable` (and optionally transformed through the deprecated\n * `resultSelector`) every time a value is emitted on the source Observable,\n * and taking only the values from the most recently projected inner\n * Observable.\n * @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)`\n */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","import { ObservableInput, ObservedValueOf, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\nimport { operate } from '../util/lift';\n\n// TODO: Generate a marble diagram for these docs.\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, emitting values\n * only from the most recently returned Observable.\n *\n * <span class=\"informal\">It's like {@link mergeScan}, but only the most recent\n * Observable returned by the accumulator is merged into the outer Observable.</span>\n *\n * @see {@link scan}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @return A function that returns an observable of the accumulated values.\n */\nexport function switchScan<T, R, O extends ObservableInput<any>>(\n  accumulator: (acc: R, value: T, index: number) => O,\n  seed: R\n): OperatorFunction<T, ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    // The state we will keep up to date to pass into our\n    // accumulator function at each new value from the source.\n    let state = seed;\n\n    // Use `switchMap` on our `source` to do the work of creating\n    // this operator. Note the backwards order here of `switchMap()(source)`\n    // to avoid needing to use `pipe` unnecessarily\n    switchMap(\n      // On each value from the source, call the accumulator with\n      // our previous state, the value and the index.\n      (value: T, index) => accumulator(state, value, index),\n      // Using the deprecated result selector here as a dirty trick\n      // to update our state with the flattened value.\n      (_, innerValue) => ((state = innerValue), innerValue)\n    )(source).subscribe(subscriber);\n\n    return () => {\n      // Release state on finalization\n      state = null!;\n    };\n  });\n}\n","import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n *\n * Tick every second until the first click happens\n *\n * ```ts\n * import { interval, fromEvent, takeUntil } from 'rxjs';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return A function that returns an Observable that emits the values from the\n * source Observable until `notifier` emits its first value.\n */\nexport function takeUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n    !subscriber.closed && source.subscribe(subscriber);\n  });\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: true): MonoTypeOperatorFunction<T>;\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: false): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n *\n * Emit click events only while the clientX property is greater than 200\n *\n * ```ts\n * import { fromEvent, takeWhile } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return A function that returns an Observable that emits values from the\n * source Observable so long as each value satisfies the condition defined by\n * the `predicate`, then completes.\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive = false): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const result = predicate(value, index++);\n        (result || inclusive) && subscriber.next(value);\n        !result && subscriber.complete();\n      })\n    );\n  });\n}\n","import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\n/**\n * An extension to the {@link Observer} interface used only by the {@link tap} operator.\n *\n * It provides a useful set of callbacks a user can register to do side-effects in\n * cases other than what the usual {@link Observer} callbacks are\n * ({@link guide/glossary-and-semantics#next next},\n * {@link guide/glossary-and-semantics#error error} and/or\n * {@link guide/glossary-and-semantics#complete complete}).\n *\n * ## Example\n *\n * ```ts\n * import { fromEvent, switchMap, tap, interval, take } from 'rxjs';\n *\n * const source$ = fromEvent(document, 'click');\n * const result$ = source$.pipe(\n *   switchMap((_, i) => i % 2 === 0\n *     ? fromEvent(document, 'mousemove').pipe(\n *         tap({\n *           subscribe: () => console.log('Subscribed to the mouse move events after click #' + i),\n *           unsubscribe: () => console.log('Mouse move events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('Mouse move events #' + i + ' finalized')\n *         })\n *       )\n *     : interval(1_000).pipe(\n *         take(5),\n *         tap({\n *           subscribe: () => console.log('Subscribed to the 1-second interval events after click #' + i),\n *           unsubscribe: () => console.log('1-second interval events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('1-second interval events #' + i + ' finalized')\n *         })\n *       )\n *   )\n * );\n *\n * const subscription = result$.subscribe({\n *   next: console.log\n * });\n *\n * setTimeout(() => {\n *   console.log('Unsubscribe after 60 seconds');\n *   subscription.unsubscribe();\n * }, 60_000);\n * ```\n */\nexport interface TapObserver<T> extends Observer<T> {\n  /**\n   * The callback that `tap` operator invokes at the moment when the source Observable\n   * gets subscribed to.\n   */\n  subscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when an explicit\n   * {@link guide/glossary-and-semantics#unsubscription unsubscribe} happens. It won't get invoked on\n   * `error` or `complete` events.\n   */\n  unsubscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when any kind of\n   * {@link guide/glossary-and-semantics#finalization finalization} happens - either when\n   * the source Observable `error`s or `complete`s or when it gets explicitly unsubscribed\n   * by the user. There is no difference in using this callback or the {@link finalize}\n   * operator, but if you're already using `tap` operator, you can use this callback\n   * instead. You'd get the same result in either case.\n   */\n  finalize: () => void;\n}\nexport function tap<T>(observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void)): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link TapObserver}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n","import { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * An object interface used by {@link throttle} or {@link throttleTime} that ensure\n * configuration options of these operators.\n *\n * @see {@link throttle}\n * @see {@link throttleTime}\n */\nexport interface ThrottleConfig {\n  /**\n   * If `true`, the resulting Observable will emit the first value from the source\n   * Observable at the **start** of the \"throttling\" process (when starting an\n   * internal timer that prevents other emissions from the source to pass through).\n   * If `false`, it will not emit the first value from the source Observable at the\n   * start of the \"throttling\" process.\n   *\n   * If not provided, defaults to: `true`.\n   */\n  leading?: boolean;\n  /**\n   * If `true`, the resulting Observable will emit the last value from the source\n   * Observable at the **end** of the \"throttling\" process (when ending an internal\n   * timer that prevents other emissions from the source to pass through).\n   * If `false`, it will not emit the last value from the source Observable at the\n   * end of the \"throttling\" process.\n   *\n   * If not provided, defaults to: `false`.\n   */\n  trailing?: boolean;\n}\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.svg)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttle, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(() => interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function that receives a value from the source\n * Observable, for computing the silencing duration for each source value,\n * returned as an `ObservableInput`.\n * @param config A configuration object to define `leading` and `trailing`\n * behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttle<T>(durationSelector: (value: T) => ObservableInput<any>, config?: ThrottleConfig): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const { leading = true, trailing = false } = config ?? {};\n    let hasValue = false;\n    let sendValue: T | null = null;\n    let throttled: Subscription | null = null;\n    let isComplete = false;\n\n    const endThrottling = () => {\n      throttled?.unsubscribe();\n      throttled = null;\n      if (trailing) {\n        send();\n        isComplete && subscriber.complete();\n      }\n    };\n\n    const cleanupThrottling = () => {\n      throttled = null;\n      isComplete && subscriber.complete();\n    };\n\n    const startThrottle = (value: T) =>\n      (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n\n    const send = () => {\n      if (hasValue) {\n        // Ensure we clear out our value and hasValue flag\n        // before we emit, otherwise reentrant code can cause\n        // issues here.\n        hasValue = false;\n        const value = sendValue!;\n        sendValue = null;\n        // Emit the value.\n        subscriber.next(value);\n        !isComplete && startThrottle(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Regarding the presence of throttled.closed in the following\n        // conditions, if a synchronous duration selector is specified - weird,\n        // but legal - an already-closed subscription will be assigned to\n        // throttled, so the subscription's closed property needs to be checked,\n        // too.\n        (value) => {\n          hasValue = true;\n          sendValue = value;\n          !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        },\n        () => {\n          isComplete = true;\n          !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { throttle, ThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { timer } from '../observable/timer';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * ### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param scheduler The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling. Defaults to {@link asyncScheduler}.\n * @param config A configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttleTime<T>(\n  duration: number,\n  scheduler: SchedulerLike = asyncScheduler,\n  config?: ThrottleConfig\n): MonoTypeOperatorFunction<T> {\n  const duration$ = timer(duration, scheduler);\n  return throttle(() => duration$, config);\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeInterval.png)\n *\n * ## Example\n *\n * Emit interval between current value with the last value\n *\n * ```ts\n * import { interval, timeInterval } from 'rxjs';\n *\n * const seconds = interval(1000);\n *\n * seconds\n *   .pipe(timeInterval())\n *   .subscribe(value => console.log(value));\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // { value: 0, interval: 1000 }\n * // { value: 1, interval: 1000 }\n * // { value: 2, interval: 1000 }\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return A function that returns an Observable that emits information about\n * value and interval.\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = asyncScheduler): OperatorFunction<T, TimeInterval<T>> {\n  return operate((source, subscriber) => {\n    let last = scheduler.now();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const now = scheduler.now();\n        const interval = now - last;\n        last = now;\n        subscriber.next(new TimeInterval(value, interval));\n      })\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\nexport class TimeInterval<T> {\n  /**\n   * @deprecated Internal implementation detail, do not construct directly. Will be made an interface in v8.\n   */\n  constructor(public value: T, public interval: number) {}\n}\n","import { async } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { ObservableInput, OperatorFunction, SchedulerLike } from '../types';\nimport { timeout } from './timeout';\n\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(someDate, a$, scheduler)`, use the configuration object\n * `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(dueBy: Date, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use the configuration object\n *  `timeout({ each: 100, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(waitFor: number, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n\n/**\n * When the passed timespan elapses before the source emits any given value, it will unsubscribe from the source,\n * and switch the subscription to another observable.\n *\n * <span class=\"informal\">Used to switch to a different observable if your source is being slow.</span>\n *\n * Useful in cases where:\n *\n * - You want to switch to a different source that may be faster.\n * - You want to notify a user that the data stream is slow.\n * - You want to emit a custom error rather than the {@link TimeoutError} emitted\n *   by the default usage of {@link timeout}.\n *\n * If the first parameter is passed as Date and the time of the Date arrives before the first value arrives from the source,\n * it will unsubscribe from the source and switch the subscription to another observable.\n *\n * <span class=\"informal\">Use Date object to switch to a different observable if the first value doesn't arrive by a specific time.</span>\n *\n * Can be used to set a timeout only for the first value, however it's recommended to use the {@link timeout} operator with\n * the `first` configuration to get the same effect.\n *\n * ## Examples\n *\n * Fallback to a faster observable\n *\n * ```ts\n * import { interval, timeoutWith } from 'rxjs';\n *\n * const slow$ = interval(1000);\n * const faster$ = interval(500);\n *\n * slow$\n *   .pipe(timeoutWith(900, faster$))\n *   .subscribe(console.log);\n * ```\n *\n * Emit your own custom timeout error\n *\n * ```ts\n * import { interval, timeoutWith, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(1000);\n *\n * slow$\n *   .pipe(timeoutWith(900, throwError(() => new CustomTimeoutError())))\n *   .subscribe({\n *     error: err => console.error(err.message)\n *   });\n * ```\n *\n * @see {@link timeout}\n *\n * @param due When passed a number, used as the time (in milliseconds) allowed between each value from the source before timeout\n * is triggered. When passed a Date, used as the exact time at which the timeout will be triggered if the first value does not arrive.\n * @param withObservable The observable to switch to when timeout occurs.\n * @param scheduler The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it starts emitting values\n * from the `ObservableInput` passed as a second parameter.\n * @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use {@link timeout} with the configuration\n * object: `timeout({ each: 100, with: () => a$, scheduler })`. Instead of `timeoutWith(someDate, a$, scheduler)`, use {@link timeout}\n * with the configuration object: `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8.\n */\nexport function timeoutWith<T, R>(\n  due: number | Date,\n  withObservable: ObservableInput<R>,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T | R> {\n  let first: number | Date | undefined;\n  let each: number | undefined;\n  let _with: () => ObservableInput<R>;\n  scheduler = scheduler ?? async;\n\n  if (isValidDate(due)) {\n    first = due;\n  } else if (typeof due === 'number') {\n    each = due;\n  }\n\n  if (withObservable) {\n    _with = () => withObservable;\n  } else {\n    throw new TypeError('No observable provided to switch to');\n  }\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return timeout<T, ObservableInput<R>>({\n    first,\n    each,\n    scheduler,\n    with: _with,\n  });\n}\n","import { OperatorFunction, TimestampProvider, Timestamp } from '../types';\nimport { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default, it uses the `asyncScheduler` which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the document's click events\n *\n * ```ts\n * import { fromEvent, timestamp } from 'rxjs';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type { value: PointerEvent, timestamp: number }\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param timestampProvider An object with a `now()` method used to get the current timestamp.\n * @return A function that returns an Observable that attaches a timestamp to\n * each item emitted by the source Observable indicating when it was emitted.\n */\nexport function timestamp<T>(timestampProvider: TimestampProvider = dateTimestampProvider): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => ({ value, timestamp: timestampProvider.now() }));\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * `windowBoundaries` emits an item. `windowBoundaries` can be any type that\n * `ObservableInput` accepts. It internally gets converted to an Observable.\n * Because each window is an Observable, the output is a higher-order Observable.\n *\n * ## Example\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, interval, window, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const sec = interval(1000);\n * const result = clicks.pipe(\n *   window(sec),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param windowBoundaries An `ObservableInput` that completes the\n * previous window and starts a new window.\n * @return A function that returns an Observable of windows, which are\n * Observables emitting values of the source Observable.\n */\nexport function window<T>(windowBoundaries: ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let windowSubject: Subject<T> = new Subject<T>();\n\n    subscriber.next(windowSubject.asObservable());\n\n    const errorHandler = (err: any) => {\n      windowSubject.error(err);\n      subscriber.error(err);\n    };\n\n    // Subscribe to our source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => windowSubject?.next(value),\n        () => {\n          windowSubject.complete();\n          subscriber.complete();\n        },\n        errorHandler\n      )\n    );\n\n    // Subscribe to the window boundaries.\n    innerFrom(windowBoundaries).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          windowSubject.complete();\n          subscriber.next((windowSubject = new Subject()));\n        },\n        noop,\n        errorHandler\n      )\n    );\n\n    return () => {\n      // Unsubscribing the subject ensures that anyone who has captured\n      // a reference to this window that tries to use it after it can\n      // no longer get values from the source will get an ObjectUnsubscribedError.\n      windowSubject?.unsubscribe();\n      windowSubject = null!;\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowCount.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * ## Examples\n *\n * Ignore every 3rd click event, starting from the first one\n *\n * ```ts\n * import { fromEvent, windowCount, map, skip, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(3),\n *   map(win => win.pipe(skip(1))), // skip first of every 3 clicks\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Ignore every 3rd click event, starting from the third one\n *\n * ```ts\n * import { fromEvent, windowCount, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(2, 3),\n *   mergeAll() // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of windows, which in turn are\n * Observable of values.\n */\nexport function windowCount<T>(windowSize: number, startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  const startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;\n\n  return operate((source, subscriber) => {\n    let windows = [new Subject<T>()];\n    let starts: number[] = [];\n    let count = 0;\n\n    // Open the first window.\n    subscriber.next(windows[0].asObservable());\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Emit the value through all current windows.\n          // We don't need to create a new window yet, we\n          // do that as soon as we close one.\n          for (const window of windows) {\n            window.next(value);\n          }\n          // Here we're using the size of the window array to figure\n          // out if the oldest window has emitted enough values. We can do this\n          // because the size of the window array is a function of the values\n          // seen by the subscription. If it's time to close it, we complete\n          // it and remove it.\n          const c = count - windowSize + 1;\n          if (c >= 0 && c % startEvery === 0) {\n            windows.shift()!.complete();\n          }\n\n          // Look to see if the next count tells us it's time to open a new window.\n          // TODO: We need to figure out if this really makes sense. We're technically\n          // emitting windows *before* we have a value to emit them for. It's probably\n          // more expected that we should be emitting the window when the start\n          // count is reached -- not before.\n          if (++count % startEvery === 0) {\n            const window = new Subject<T>();\n            windows.push(window);\n            subscriber.next(window.asObservable());\n          }\n        },\n        () => {\n          while (windows.length > 0) {\n            windows.shift()!.complete();\n          }\n          subscriber.complete();\n        },\n        (err) => {\n          while (windows.length > 0) {\n            windows.shift()!.error(err);\n          }\n          subscriber.error(err);\n        },\n        () => {\n          starts = null!;\n          windows = null!;\n        }\n      )\n    );\n  });\n}\n","import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Observer, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function windowTime<T>(windowTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number | null | void,\n  maxWindowSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with `maxWindowCount` instead of `take`\n *\n * ```ts\n * import { fromEvent, windowTime, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // take at most 2 emissions from each window\n *   mergeAll()                 // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param windowTimeSpan The amount of time, in milliseconds, to fill each window.\n * @param windowCreationInterval The interval at which to start new\n * windows.\n * @param maxWindowSize Max number of\n * values each window can emit before completion.\n * @param scheduler The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const windowCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxWindowSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active windows, their related subscriptions, and removal functions.\n    let windowRecords: WindowRecord<T>[] | null = [];\n    // If true, it means that every time we close a window, we want to start a new window.\n    // This is only really used for when *just* the time span is passed.\n    let restartOnClose = false;\n\n    const closeWindow = (record: { window: Subject<T>; subs: Subscription }) => {\n      const { window, subs } = record;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n\n    /**\n     * Called every time we start a new window. This also does\n     * the work of scheduling the job to close the window.\n     */\n    const startWindow = () => {\n      if (windowRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const window = new Subject<T>();\n        const record = {\n          window,\n          subs,\n          seen: 0,\n        };\n        windowRecords.push(record);\n        subscriber.next(window.asObservable());\n        executeSchedule(subs, scheduler, () => closeWindow(record), windowTimeSpan);\n      }\n    };\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      // The user passed both a windowTimeSpan (required), and a creation interval\n      // That means we need to start new window on the interval, and those windows need\n      // to wait the required time span before completing.\n      executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n    } else {\n      restartOnClose = true;\n    }\n\n    startWindow();\n\n    /**\n     * We need to loop over a copy of the window records several times in this operator.\n     * This is to save bytes over the wire more than anything.\n     * The reason we copy the array is that reentrant code could mutate the array while\n     * we are iterating over it.\n     */\n    const loop = (cb: (record: WindowRecord<T>) => void) => windowRecords!.slice().forEach(cb);\n\n    /**\n     * Used to notify all of the windows and the subscriber in the same way\n     * in the error and complete handlers.\n     */\n    const terminate = (cb: (consumer: Observer<any>) => void) => {\n      loop(({ window }) => cb(window));\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Notify all windows of the value.\n          loop((record) => {\n            record.window.next(value);\n            // If the window is over the max size, we need to close it.\n            maxWindowSize <= ++record.seen && closeWindow(record);\n          });\n        },\n        // Complete the windows and the downstream subscriber and clean up.\n        () => terminate((consumer) => consumer.complete()),\n        // Notify the windows and the downstream subscriber of the error and clean up.\n        (err) => terminate((consumer) => consumer.error(err))\n      )\n    );\n\n    // Additional finalization. This will be called when the\n    // destination tears down. Other finalizations are registered implicitly\n    // above via subscription.\n    return () => {\n      // Ensure that the buffer is released.\n      windowRecords = null!;\n    };\n  });\n}\n\ninterface WindowRecord<T> {\n  seen: number;\n  window: Subject<T>;\n  subs: Subscription;\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowToggle.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, windowToggle, EMPTY, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const result = clicks.pipe(\n *   windowToggle(openings, i => i % 2 ? interval(500) : EMPTY),\n *   mergeAll()\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits a next notification, signals that the\n * associated window should complete.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowToggle<T, O>(\n  openings: ObservableInput<O>,\n  closingSelector: (openValue: O) => ObservableInput<any>\n): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    const windows: Subject<T>[] = [];\n\n    const handleError = (err: any) => {\n      while (0 < windows.length) {\n        windows.shift()!.error(err);\n      }\n      subscriber.error(err);\n    };\n\n    innerFrom(openings).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (openValue) => {\n          const window = new Subject<T>();\n          windows.push(window);\n          const closingSubscription = new Subscription();\n          const closeWindow = () => {\n            arrRemove(windows, window);\n            window.complete();\n            closingSubscription.unsubscribe();\n          };\n\n          let closingNotifier: Observable<any>;\n          try {\n            closingNotifier = innerFrom(closingSelector(openValue));\n          } catch (err) {\n            handleError(err);\n            return;\n          }\n\n          subscriber.next(window.asObservable());\n\n          closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n        },\n        noop\n      )\n    );\n\n    // Subscribe to the source to get things started.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Copy the windows array before we emit to\n          // make sure we don't have issues with reentrant code.\n          const windowsCopy = windows.slice();\n          for (const window of windowsCopy) {\n            window.next(value);\n          }\n        },\n        () => {\n          // Complete all of our windows before we complete.\n          while (0 < windows.length) {\n            windows.shift()!.complete();\n          }\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Add this finalization so that all window subjects are\n          // disposed of. This way, if a user tries to subscribe\n          // to a window *after* the outer subscription has been unsubscribed,\n          // they will get an error, instead of waiting forever to\n          // see if a value arrives.\n          while (0 < windows.length) {\n            windows.shift()!.unsubscribe();\n          }\n        }\n      )\n    );\n  });\n}\n","import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n *\n * Emit only the first two clicks events in every window of [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, windowWhen, interval, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let window: Subject<T> | null;\n    let closingSubscriber: Subscriber<any> | undefined;\n\n    /**\n     * When we get an error, we have to notify both the\n     * destination subscriber and the window.\n     */\n    const handleError = (err: any) => {\n      window!.error(err);\n      subscriber.error(err);\n    };\n\n    /**\n     * Called every time we need to open a window.\n     * Recursive, as it will start the closing notifier, which\n     * inevitably *should* call openWindow -- but may not if\n     * it is a \"never\" observable.\n     */\n    const openWindow = () => {\n      // We need to clean up our closing subscription,\n      // we only cared about the first next or complete notification.\n      closingSubscriber?.unsubscribe();\n\n      // Close our window before starting a new one.\n      window?.complete();\n\n      // Start the new window.\n      window = new Subject<T>();\n      subscriber.next(window.asObservable());\n\n      // Get our closing notifier.\n      let closingNotifier: Observable<any>;\n      try {\n        closingNotifier = innerFrom(closingSelector());\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      // Subscribe to the closing notifier, be sure\n      // to capture the subscriber (aka Subscription)\n      // so we can clean it up when we close the window\n      // and open a new one.\n      closingNotifier.subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openWindow, openWindow, handleError)));\n    };\n\n    // Start the first window.\n    openWindow();\n\n    // Subscribe to the source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => window!.next(value),\n        () => {\n          // The source completed, close the window and complete.\n          window!.complete();\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Be sure to clean up our closing subscription\n          // when this tears down.\n          closingSubscriber?.unsubscribe();\n          window = null!;\n        }\n      )\n    );\n  });\n}\n","import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\n\nexport function withLatestFrom<T, O extends unknown[]>(...inputs: [...ObservableInputTuple<O>]): OperatorFunction<T, [T, ...O]>;\n\nexport function withLatestFrom<T, O extends unknown[], R>(\n  ...inputs: [...ObservableInputTuple<O>, (...value: [T, ...O]) => R]\n): OperatorFunction<T, R>;\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * ![](withLatestFrom.png)\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * ## Example\n *\n * On every click event, emit an array with the latest timer event plus the click event\n *\n * ```ts\n * import { fromEvent, interval, withLatestFrom } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const result = clicks.pipe(withLatestFrom(timer));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return A function that returns an Observable of projected values from the\n * most recent values from each input Observable, or an array of the most\n * recent values from each input Observable.\n */\nexport function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {\n  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;\n\n  return operate((source, subscriber) => {\n    const len = inputs.length;\n    const otherValues = new Array(len);\n    // An array of whether or not the other sources have emitted. Matched with them by index.\n    // TODO: At somepoint, we should investigate the performance implications here, and look\n    // into using a `Set()` and checking the `size` to see if we're ready.\n    let hasValue = inputs.map(() => false);\n    // Flipped true when we have at least one value from all other sources and\n    // we are ready to start emitting values.\n    let ready = false;\n\n    // Other sources. Note that here we are not checking `subscriber.closed`,\n    // this causes all inputs to be subscribed to, even if nothing can be emitted\n    // from them. This is an important distinction because subscription constitutes\n    // a side-effect.\n    for (let i = 0; i < len; i++) {\n      innerFrom(inputs[i]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            otherValues[i] = value;\n            if (!ready && !hasValue[i]) {\n              // If we're not ready yet, flag to show this observable has emitted.\n              hasValue[i] = true;\n              // Intentionally terse code.\n              // If all of our other observables have emitted, set `ready` to `true`,\n              // so we know we can start emitting values, then clean up the `hasValue` array,\n              // because we don't need it anymore.\n              (ready = hasValue.every(identity)) && (hasValue = null!);\n            }\n          },\n          // Completing one of the other sources has\n          // no bearing on the completion of our result.\n          noop\n        )\n      );\n    }\n\n    // Source subscription\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        if (ready) {\n          // We have at least one value from the other sources. Go ahead and emit.\n          const values = [value, ...otherValues];\n          subscriber.next(project ? project(...values) : values);\n        }\n      })\n    );\n  });\n}\n","import { OperatorFunction, ObservableInput } from '../types';\nimport { zip } from '../observable/zip';\nimport { joinAllInternals } from './joinAllInternals';\n\n/**\n * Collects all observable inner sources from the source, once the source completes,\n * it will subscribe to all inner sources, combining their values by index and emitting\n * them.\n *\n * @see {@link zipWith}\n * @see {@link zip}\n */\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: T[]) => R) {\n  return joinAllInternals(zip, project);\n}\n","import { zip as zipStatic } from '../observable/zip';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { operate } from '../util/lift';\n\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  otherInputsAndProject: [...ObservableInputTuple<A>],\n  project: (...values: Cons<T, A>) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  ...otherInputsAndProject: [...ObservableInputTuple<A>, (...values: Cons<T, A>) => R]\n): OperatorFunction<T, R>;\n\n/**\n * @deprecated Replaced with {@link zipWith}. Will be removed in v8.\n */\nexport function zip<T, R>(...sources: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, any> {\n  return operate((source, subscriber) => {\n    zipStatic(source as ObservableInput<any>, ...(sources as Array<ObservableInput<any>>)).subscribe(subscriber);\n  });\n}\n","import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { zip } from './zip';\n\n/**\n * Subscribes to the source, and the observable inputs provided as arguments, and combines their values, by index, into arrays.\n *\n * What is meant by \"combine by index\": The first value from each will be made into a single array, then emitted,\n * then the second value from each will be combined into a single array and emitted, then the third value\n * from each will be combined into a single array and emitted, and so on.\n *\n * This will continue until it is no longer able to combine values of the same index into an array.\n *\n * After the last value from any one completed source is emitted in an array, the resulting observable will complete,\n * as there is no way to continue \"zipping\" values together by index.\n *\n * Use-cases for this operator are limited. There are memory concerns if one of the streams is emitting\n * values at a much faster rate than the others. Usage should likely be limited to streams that emit\n * at a similar pace, or finite streams of known length.\n *\n * In many cases, authors want `combineLatestWith` and not `zipWith`.\n *\n * @param otherInputs other observable inputs to collate values from.\n * @return A function that returns an Observable that emits items by index\n * combined from the source Observable and provided Observables, in form of an\n * array.\n */\nexport function zipWith<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>> {\n  return zip(...otherInputs);\n}\n","//////////////////////////////////////////////////////////\n// Here we need to reference our other deep imports\n// so VS code will figure out where they are\n// see conversation here:\n// https://github.com/microsoft/TypeScript/issues/43034\n//////////////////////////////////////////////////////////\n\n// tslint:disable: no-reference\n// It's tempting to add references to all of the deep-import locations, but\n// adding references to those that require DOM types breaks Node projects.\n/// <reference path=\"./operators/index.ts\" />\n/// <reference path=\"./testing/index.ts\" />\n// tslint:enable: no-reference\n\n/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\nexport { animationFrames } from './internal/observable/dom/animationFrames';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap, asapScheduler } from './internal/scheduler/asap';\nexport { async, asyncScheduler } from './internal/scheduler/async';\nexport { queue, queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Promise Conversion */\nexport { lastValueFrom } from './internal/lastValueFrom';\nexport { firstValueFrom } from './internal/firstValueFrom';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { NotFoundError } from './internal/util/NotFoundError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { SequenceError } from './internal/util/SequenceError';\nexport { TimeoutError } from './internal/operators/timeout';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { connectable } from './internal/observable/connectable';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config, GlobalConfig } from './internal/config';\n\n/* Operators */\nexport { audit } from './internal/operators/audit';\nexport { auditTime } from './internal/operators/auditTime';\nexport { buffer } from './internal/operators/buffer';\nexport { bufferCount } from './internal/operators/bufferCount';\nexport { bufferTime } from './internal/operators/bufferTime';\nexport { bufferToggle } from './internal/operators/bufferToggle';\nexport { bufferWhen } from './internal/operators/bufferWhen';\nexport { catchError } from './internal/operators/catchError';\nexport { combineAll } from './internal/operators/combineAll';\nexport { combineLatestAll } from './internal/operators/combineLatestAll';\nexport { combineLatestWith } from './internal/operators/combineLatestWith';\nexport { concatAll } from './internal/operators/concatAll';\nexport { concatMap } from './internal/operators/concatMap';\nexport { concatMapTo } from './internal/operators/concatMapTo';\nexport { concatWith } from './internal/operators/concatWith';\nexport { connect, ConnectConfig } from './internal/operators/connect';\nexport { count } from './internal/operators/count';\nexport { debounce } from './internal/operators/debounce';\nexport { debounceTime } from './internal/operators/debounceTime';\nexport { defaultIfEmpty } from './internal/operators/defaultIfEmpty';\nexport { delay } from './internal/operators/delay';\nexport { delayWhen } from './internal/operators/delayWhen';\nexport { dematerialize } from './internal/operators/dematerialize';\nexport { distinct } from './internal/operators/distinct';\nexport { distinctUntilChanged } from './internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from './internal/operators/elementAt';\nexport { endWith } from './internal/operators/endWith';\nexport { every } from './internal/operators/every';\nexport { exhaust } from './internal/operators/exhaust';\nexport { exhaustAll } from './internal/operators/exhaustAll';\nexport { exhaustMap } from './internal/operators/exhaustMap';\nexport { expand } from './internal/operators/expand';\nexport { filter } from './internal/operators/filter';\nexport { finalize } from './internal/operators/finalize';\nexport { find } from './internal/operators/find';\nexport { findIndex } from './internal/operators/findIndex';\nexport { first } from './internal/operators/first';\nexport { groupBy, BasicGroupByOptions, GroupByOptionsWithElement } from './internal/operators/groupBy';\nexport { ignoreElements } from './internal/operators/ignoreElements';\nexport { isEmpty } from './internal/operators/isEmpty';\nexport { last } from './internal/operators/last';\nexport { map } from './internal/operators/map';\nexport { mapTo } from './internal/operators/mapTo';\nexport { materialize } from './internal/operators/materialize';\nexport { max } from './internal/operators/max';\nexport { mergeAll } from './internal/operators/mergeAll';\nexport { flatMap } from './internal/operators/flatMap';\nexport { mergeMap } from './internal/operators/mergeMap';\nexport { mergeMapTo } from './internal/operators/mergeMapTo';\nexport { mergeScan } from './internal/operators/mergeScan';\nexport { mergeWith } from './internal/operators/mergeWith';\nexport { min } from './internal/operators/min';\nexport { multicast } from './internal/operators/multicast';\nexport { observeOn } from './internal/operators/observeOn';\nexport { onErrorResumeNextWith } from './internal/operators/onErrorResumeNextWith';\nexport { pairwise } from './internal/operators/pairwise';\nexport { pluck } from './internal/operators/pluck';\nexport { publish } from './internal/operators/publish';\nexport { publishBehavior } from './internal/operators/publishBehavior';\nexport { publishLast } from './internal/operators/publishLast';\nexport { publishReplay } from './internal/operators/publishReplay';\nexport { raceWith } from './internal/operators/raceWith';\nexport { reduce } from './internal/operators/reduce';\nexport { repeat, RepeatConfig } from './internal/operators/repeat';\nexport { repeatWhen } from './internal/operators/repeatWhen';\nexport { retry, RetryConfig } from './internal/operators/retry';\nexport { retryWhen } from './internal/operators/retryWhen';\nexport { refCount } from './internal/operators/refCount';\nexport { sample } from './internal/operators/sample';\nexport { sampleTime } from './internal/operators/sampleTime';\nexport { scan } from './internal/operators/scan';\nexport { sequenceEqual } from './internal/operators/sequenceEqual';\nexport { share, ShareConfig } from './internal/operators/share';\nexport { shareReplay, ShareReplayConfig } from './internal/operators/shareReplay';\nexport { single } from './internal/operators/single';\nexport { skip } from './internal/operators/skip';\nexport { skipLast } from './internal/operators/skipLast';\nexport { skipUntil } from './internal/operators/skipUntil';\nexport { skipWhile } from './internal/operators/skipWhile';\nexport { startWith } from './internal/operators/startWith';\nexport { subscribeOn } from './internal/operators/subscribeOn';\nexport { switchAll } from './internal/operators/switchAll';\nexport { switchMap } from './internal/operators/switchMap';\nexport { switchMapTo } from './internal/operators/switchMapTo';\nexport { switchScan } from './internal/operators/switchScan';\nexport { take } from './internal/operators/take';\nexport { takeLast } from './internal/operators/takeLast';\nexport { takeUntil } from './internal/operators/takeUntil';\nexport { takeWhile } from './internal/operators/takeWhile';\nexport { tap, TapObserver } from './internal/operators/tap';\nexport { throttle, ThrottleConfig } from './internal/operators/throttle';\nexport { throttleTime } from './internal/operators/throttleTime';\nexport { throwIfEmpty } from './internal/operators/throwIfEmpty';\nexport { timeInterval } from './internal/operators/timeInterval';\nexport { timeout, TimeoutConfig, TimeoutInfo } from './internal/operators/timeout';\nexport { timeoutWith } from './internal/operators/timeoutWith';\nexport { timestamp } from './internal/operators/timestamp';\nexport { toArray } from './internal/operators/toArray';\nexport { window } from './internal/operators/window';\nexport { windowCount } from './internal/operators/windowCount';\nexport { windowTime } from './internal/operators/windowTime';\nexport { windowToggle } from './internal/operators/windowToggle';\nexport { windowWhen } from './internal/operators/windowWhen';\nexport { withLatestFrom } from './internal/operators/withLatestFrom';\nexport { zipAll } from './internal/operators/zipAll';\nexport { zipWith } from './internal/operators/zipWith';\n","import { fromEvent, merge, take, tap } from \"rxjs\";\n\n/**\n * Adds script element to document body and starts downloading provided script URL.\n * @param scriptUri Script URL.\n * @returns Script element added.\n */\nexport function loadScript(scriptUri: string): Promise<HTMLScriptElement> {\n    return new Promise((resolve, reject) => {\n        const scriptElement = document.createElement(\"script\");\n        scriptElement.src = scriptUri;\n        scriptElement.async = true;\n        merge(\n            fromEvent(scriptElement, \"load\").pipe(tap(() => resolve(scriptElement))),\n            fromEvent(scriptElement, \"error\").pipe(tap((e) => reject(e)))\n        )\n            .pipe(take(1))\n            .subscribe();\n        document.body.appendChild(scriptElement);\n    });\n}\n","export * from \"./getFilename\";\nexport * from \"./loadScript\";\n","type UnknownRecord<T = unknown> = Record<string | number | symbol, T>;\nexport type Guard<T, U = unknown> = (value: U | T) => value is T;\n\nexport function isString(value: unknown): value is string {\n    return typeof value === \"string\";\n}\n\n/**\n * Ensures given value is a safe string.\n *\n * Safe strings allow to prevent CRLF attacks. We use encoding approach inspired by:\n * https://community.veracode.com/s/question/0D53n00007hJJV5CAO/is-cwe-id-117-intended-for-consolelog\n */\nexport function isSafeString(value: unknown): value is string {\n    return isString(value) && encodeURIComponent(value) === value;\n}\n\nexport function isNumber(value: unknown): value is number {\n    return typeof value === \"number\";\n}\nexport function isNotNull<T>(value: T): value is Exclude<T, null> {\n    return value !== null;\n}\nexport function isArrayOfType<T>(elementTypeGuard: Guard<T>, value: unknown): value is T[] {\n    return Array.isArray(value) && value.every((id) => elementTypeGuard(id));\n}\nexport function isStringArray<T>(value: unknown): value is T[] {\n    return isArrayOfType(isString, value);\n}\n\nexport function isSafeStringArray<T>(value: unknown): value is T[] {\n    return isArrayOfType(isSafeString, value);\n}\n\n/**\n * Guards given value is instance of ArrayBuffer.\n */\nexport function isArrayBuffer(value: unknown): value is ArrayBuffer {\n    return value instanceof ArrayBuffer;\n}\n\n/**\n * Guards given value is a typed array.\n */\nexport function isTypedArray<T>(value: unknown): value is T {\n    return value instanceof Object.getPrototypeOf(Uint8Array);\n}\n\n/**\n * Guards given object is not undefined.\n */\nexport function isUndefined<T>(value: unknown): value is T {\n    return typeof value === \"undefined\";\n}\n\n/**\n * Narrow an unknown type to a Record (i.e. a non-null JS object). This holds true for class instances, not just\n * plain objects.\n */\nexport function isRecord(value: unknown): value is UnknownRecord {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n\n/**\n * Check if the value is an arbitrary function\n */\nexport function isFunction(value: unknown): value is (...args: unknown[]) => unknown {\n    return typeof value === \"function\";\n}\n\n/**\n * Apply a given type predicate asserting values are of type T to each value in a Record.\n *\n * @param predicate Any unary type predicate\n * @returns A type predicate which takes an UnknownRecord and tests that all its values are of type T\n */\nexport function predicateRecordValues<T>(predicate: (value: unknown) => value is T) {\n    return (value: UnknownRecord): value is UnknownRecord<T> => {\n        for (const v of Object.values(value)) if (!predicate(v)) return false;\n        return true;\n    };\n}\n\n/**\n * Checks whether given value is undefined or a safe URL string.\n *\n * The function checks whether given string is a valid URL with https: protocol.\n *\n * @param urlString URL string to check.\n * @returns True if URL is valid.\n */\nexport function isEmptyOrSafeUrl(urlString: string | undefined): boolean {\n    if (!urlString) return true;\n    try {\n        const url = new URL(urlString);\n        return url.protocol === \"https:\" || url.protocol === \"http:\";\n    } catch {\n        return false;\n    }\n}\n","import { isString } from \"../common/typeguards\";\nimport { getConfigurationOverrides } from \"../configurationOverrides\";\nimport { ChainableHandler, HandlerChainBuilder } from \"./HandlerChainBuilder\";\n\n/**\n * Addes cookies to auth requests to custom LensCore binaries\n * when there are debugging overrides.\n *\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createDebugHandler = <Res>(): ChainableHandler<\n    RequestInfo,\n    Res,\n    RequestInfo,\n    Res,\n    RequestInit | undefined\n> => {\n    const noCustomWasmEndpoint = !getConfigurationOverrides()?.wasmEndpointOverride;\n\n    if (noCustomWasmEndpoint) {\n        return (next) => next;\n    }\n    return (next) => (input, init) => {\n        const url = isString(input) ? input : input?.url ?? \"\";\n        // if requests are made to internal LensCore binaries site\n        // we have to include cookies for auth purposes\n        // as per https://wiki.sc-corp.net/x/KsnRCg\n        if (url.startsWith(\"https://lens-core-wasm.sc-corp.net/\")) {\n            return next(input, {\n                ...init,\n                credentials: \"include\",\n            });\n        }\n        return next(input, init);\n    };\n};\n","export type RequestMetadata =\n    | {\n          signal?: AbortSignal | null | undefined;\n          /**\n           * When calling a handler, if that handler is part of a handler chain, then by default an abort signal will be\n           * sent to that handler if another handler higher up in the chain completes first. Usually this is desirable,\n           * since we know if a handler higher up in the chain has completed and returned a response to its caller, then\n           * the response from all the handlers below it in the chain will not be used.\n           *\n           * But in some cases, a handler in a handler chain wants to call the next handler in the chain as a\n           * side-effect. If a handler is called as a side-effect, it will not be sent an abort signal when handlers\n           * higher up in the chain complete.\n           *\n           * For example: a caching handler might return a cached value immediately, but then call the next handler as\n           * a side-effect to fetch an updated value to refresh the cache in the background. In that case, the next\n           * handler should not be sent an abort signal when the caching handler returns the cached value.\n           */\n          isSideEffect?: boolean;\n      }\n    | undefined;\nexport type Handler<Req, Res, Meta extends RequestMetadata> = (req: Req, metadata?: Meta) => Promise<Res>;\nexport type ChainableHandler<Req, Res, NextReq, NextRes, Meta extends RequestMetadata | undefined> = (\n    next: Handler<NextReq, NextRes, Meta>\n) => Handler<Req, Res, Meta>;\n\n/**\n * Creates a Handler chain – a series of functions composed such that each function may call a supplied `next` function\n * which passes execution down the chain. When the final Handler in the chain returns, execution passes back up the\n * chain eventually returning to the caller.\n *\n * Each Handler chain begins with a \"raw\" Handler – this is a function which takes some request and returns some\n * response. A chain is then created by supplying a series of mapping functions – the ChainableHandler type – which will\n * be called with the `next` Handler in the chain.\n *\n * Ex:\n * ```ts\n * const handler = (request: string, metadata?: RequestMetadata) => Promise.resolve(`Responded to ${request}`)\n * const chainable = (next: Handler<string, string>) => (request: string, metadata?: RequestMetadata) => {\n *   return next(`modified ${request}`, metadata)\n * }\n *\n * const chain = new HandlerChainBuilder(handler)\n *   .map(chainable)\n *   .handler\n *\n * const response = await chain('hello')\n * expect(response).toBe('Responded to modified hello; 0')\n * ```\n * You can largely ignore the `metadata` argument present in the above example. This is the mechanism by which an\n * AbortSignal is passed to each Handler in the chain, but the only real requirement when implementing a Handler is\n * to pass this argument along to the `next` function. In fact, many Handlers will want to be generic over the type\n * of metadata:\n * ```ts\n * const chainable = <Meta>(next: Handler<string, string, Meta>) => (request: string, metadata: Meta) => {\n *   return next(`modified ${request}`, metadata)\n * }\n * ```\n * Actually, it's a very good idea for Handlers to be as generic as possible, since that will allow greater re-use. In\n * the above example, we don't do anything with the response from `next`, so we can let that be generic, too:\n * ```ts\n * const chainable = <Res, Meta>(next: Handler<string, Res, Meta>) => (request: string, metadata: Meta) => {\n *   return next(`modified ${request}`, metadata)\n * }\n * ```\n * Now if some other Handler in the chain decides to return a different response type, our Handler won't require any\n * changes to compile.\n *\n * ---\n *\n * Since execution passes from handler to handler in the chain, and then back, handlers have the opportunity to modify\n * or observe both the request and response. This might be useful for implementing serialization/deserialization, but\n * the simplest example that demonstrates this feature is measuring request latency:\n * ```ts\n * const latencyMeasuringHandler = <Req, Res, Meta>(next: Handler<Req, Res, Meta>) =>\n *   async (req: Req, metadata: Meta) => {\n *     const start = performance.now()\n *     const response = await next(req, metadata)\n *     const latency = performance.now() - start\n *     console.log(`latency for request ${request} was ${latency}`)\n *     return response\n *   }\n * ```\n * Execution is first passed to our measuring handler, which marks the `start` timestamp. Then it passes execution on\n * down the chain. After a response is received (by some handler down the chain), execution passes back up to our\n * handler here, which records the amount of time spent inside `next`.\n *\n * ---\n *\n * Handlers may also abort requests. They can do this in two ways:\n *   1. Create an `AbortController` and add its `AbortSignal` to the `metadata` object when calling `next`.\n *   2. Resolve its returned Promise.\n *\n * The first approach is straightforward, but the second may benefit from an example – the simplest is a handler which\n * will timeout a request:\n * ```ts\n * const timeoutHandler = <Req, Res, Meta>(next: Handler<Req, Res, Meta>) => (req: Req, metadata: Meta) => {\n *   return Promise.race([\n *     next(req, metadata),\n *     sleep(1000),\n *   ])\n * }\n * ```\n * The Promise returned by this handler will resolve either when the `next` handler resolves or 1 second has elapsed,\n * whichever happens first. If the timeout happens first, we want the `next` handler to recieve an abort signal so that\n * it can terminate early (since its result is no longer needed).\n *\n * HandlerChainBuilder makes this happen by observing when each handler completes, and sending an abort signal to all\n * the handlers \"downstream\" from the aborting handler.\n */\nexport class HandlerChainBuilder<Req, Res, Meta extends RequestMetadata> {\n    private readonly inner: Handler<Req, Res, Meta>;\n\n    constructor(inner: (req: Req, metadata: Meta) => Promise<Res>) {\n        // The TS compiler has the following behavior:\n        //\n        // class Infer<T extends SomeType | undefined> { constructor(f: (t?: T) => void) {} }\n        // const f = (t?: SomeType) => {}\n        // const i = new Infer(f)\n        //\n        // The type of `i` is inferred to be `Infer<SomeType>` instead of `Infer<SomeType | undefined>`, even though the\n        // type of `f`'s argument is `SomeType | undefined`. This seems to be a bug in type inference. Note that making\n        // the constructor argument required gives the expected behavior:\n        //\n        // class Infer<T extends SomeType | undefined> { constructor(f: (t: T) => void) {} }\n        // const f = (t?: SomeType) => {}\n        // const i = new Infer(f)\n        //\n        // Now `i` is inferred to be `Infer<SomeType | undefined>`.\n        //\n        // This has consequences if the inferred type T is used elsewhere in the class.\n        //\n        // In this case, we need to make sure that if the given `inner` function marks the metadata argument as\n        // optional, that HandlerChainBuilder correctly infers that the Meta type includes undefined. So we don't mark\n        // metadata as optional, and so we must cast to `Handler` (which does mark it as optional).\n        //\n        // Safety: We're adding `| undefined` to the metadata type, which may be unsafe – `undefined` may not be\n        // assignable to Meta. But when handling the argument of type Meta, we simply pass it through from handler to\n        // handler – we never call `inner` without passing the metadata argument we've received from some call to an\n        // outer handler. The typing visible to callers remains safe.\n        this.inner = inner as Handler<Req, Res, Meta>;\n    }\n\n    get handler(): Handler<Req, Res, Meta> {\n        return this.inner;\n    }\n\n    map<PriorReq, PriorRes>(\n        outer: ChainableHandler<PriorReq, PriorRes, Req, Res, Meta>\n    ): HandlerChainBuilder<PriorReq, PriorRes, Meta> {\n        // To create the next handler in the chain, we compose the \"outer\" handler with the \"inner\" handler.\n        //\n        // The outer handler observes its own completion and sends an abort signal to the inner handler when it has\n        // resolved. To prevent unexpected behavior, the inner handler also observes its own completion, setting a flag\n        // when it resolves so that – if it resolves before the outer handler – the outer handler can skip sending the\n        // abort signal (since the inner handler has already completed).\n        const outerHandler = (req: PriorReq, metadata: Meta): Promise<PriorRes> => {\n            const abort = new AbortController();\n            const signal = abort.signal;\n\n            // It's important to not signal an abort to an inner handler which has already completed – it seems like\n            // this would be a non-issue (shouldn't aborting after completion be a no-op?), but specifically for the\n            // browser's implementation of `fetch`, aborting even after the `fetch` Promise resolves can cause an abort\n            // error if e.g. the Fetch Response's body has not yet been read.\n            //\n            // So, for safety, we will only abort inner handlers which are still executing.\n            let innerCompleted = false;\n\n            const maybeAbort = () => {\n                // Safety: we never give `abort` to anyone else, so we know if the signal is aborted, this function\n                // has already run, so we can return early without fear of leaking. We also know if inner has completed,\n                // it has already performed cleanup.\n                if (signal.aborted || innerCompleted) return;\n\n                // If we've gotten here, the outer handler has either completed, or we heard an abort event while the\n                // inner handler is still executing – so we pass the abort signal down to the inner handler.\n                abort.abort();\n                metadata?.signal?.removeEventListener(\"abort\", maybeAbort);\n            };\n\n            metadata?.signal?.addEventListener(\"abort\", maybeAbort);\n\n            const innerHandler = new Proxy(this.inner, {\n                apply: (target, thisArg, args) => {\n                    const [req, metadata] = args as Parameters<typeof target>;\n\n                    // When calling the inner handler, we may not care about the result and don't want the handler's\n                    // operation to be interrupted by an abort signal. For example, we might be calling the inner\n                    // handler as a side-effect which we want to continue after the outer handler has completed.\n                    //\n                    // In this cases, we'll treat the inner handler as having completed immediately -- as far as the\n                    // outer handler is concerned, the inner handler is a no-op. This means that when the outer handler\n                    // completes, `maybeAbort` will not send an abort signal to the inner handler.\n                    //\n                    // A concrete example: returning a value from cache immediately, but then calling the inner handler\n                    // as a side-effect to refresh the cache \"in the background.\"\n                    if (metadata?.isSideEffect) innerCompleted = true;\n\n                    // To help Handler authors out, we'll do some bookkeeping and cleanup for them – if they forget to\n                    // remove an abort event listener, we'll remove it for them when the Promise they return resolves.\n                    // Note: No need to proxy removeEventListener, since removing a non-existent listener just no-ops.\n                    const abortListeners: EventListenerOrEventListenerObject[] = [];\n                    signal.addEventListener = new Proxy(signal.addEventListener, {\n                        apply: (target, thisArg, args) => {\n                            abortListeners.push(args[1]);\n                            return Reflect.apply(target, thisArg, args);\n                        },\n                    });\n\n                    const cleanupAndMarkComplete = () => {\n                        // The only reason we listen to upstream aborts is to pass them to the inner handler – since the\n                        // inner handler has completed, we no longer need the listener.\n                        metadata?.signal?.removeEventListener(\"abort\", maybeAbort);\n                        abortListeners.forEach((listener) => signal.removeEventListener(\"abort\", listener));\n                        innerCompleted = true;\n                    };\n\n                    const innerResponse: ReturnType<typeof target> = Reflect.apply(target, thisArg, [\n                        req,\n                        // Side-effect state does not propagate down the handler chain -- each outer handler must set\n                        // this property on their own when calling their inner handler. One outer handler may treat its\n                        // inner handler as a side-effect, but that doesn't each subsequent handler in the chain should\n                        // be treated as a side-effect. In other words, passing isSideEffect is only relevant to the\n                        // HandlerChainBuilder (telling it not to abort the inner handler), and not to any subsequent\n                        // handlers in the chain.\n                        { ...metadata, isSideEffect: false, signal },\n                    ]);\n\n                    // Using `finally` is more idiomatic, but causes trouble in some environments (e.g. some testing\n                    // runtimes which detect uncaught rejected promises).\n                    innerResponse.catch(() => {}).then(cleanupAndMarkComplete);\n                    return innerResponse;\n                },\n            });\n\n            const outerResponse = outer(innerHandler)(req, metadata);\n            outerResponse.catch(() => {}).then(maybeAbort);\n            return outerResponse;\n        };\n        return new HandlerChainBuilder(outerHandler as Handler<PriorReq, PriorRes, Meta>);\n    }\n}\n","// `Object.entries` does not use `keyof` types, so it loses type specificity. We'll fix this with a wrapper.\nexport const entries = <T extends { [s: string]: U } | ArrayLike<U>, U>(o: T): Array<[keyof T, T[keyof T]]> =>\n    Object.entries(o) as Array<[keyof T, T[keyof T]]>;\n\n// `Object.fromEntries` similarly does not preserve key types.\nexport const fromEntries = <K extends string | number | symbol, V>(entries: ReadonlyArray<[K, V]>): Record<K, V> =>\n    Object.fromEntries(entries) as Record<K, V>;\n","import { Subject } from \"rxjs\";\nimport { entries } from \"../common/entries\";\n\n/**\n * A reference to the recently created log messages subject.\n * The subject is overridden in resetLogger() method, which is called during CameraKit bootstrapping.\n */\nlet logEntriesSubject = new Subject<LogEntry>();\n\n/**\n * This map associates log level names with their corresponding level value.\n * This means that a configured log level will match all log entries with a level value greater than\n * or equal to the configured value.\n */\nexport const logLevelMap = {\n    error: 3,\n    warn: 2,\n    log: 1,\n    info: 1,\n    debug: 0,\n};\n\n/**\n * Initializes a new logger subject.\n *\n * Note: currently only one `CameraKit` instance is allowed to listen to log messages at a time, therefore that is\n * necessary to avoid sharing the same subject between multiple `CameraKit` instances by calling`resetLogger()`.\n * Also, `resetLogger()` should be called when there is no interest in logged messages.\n * This allows the previous logEntriesSubject to be GCec.\n * @internal\n */\nexport function resetLogger() {\n    return (logEntriesSubject = new Subject<LogEntry>());\n}\n\nexport interface LogEntry {\n    time: Date;\n    module: string;\n    level: keyof Logger;\n    messages: any[];\n}\n\nexport type LogLevelName = keyof typeof logLevelMap;\nexport type Logger = Record<LogLevelName, (message?: any, ...optionalParams: any[]) => void>;\n\n/**\n * Gets logger for a given module.\n *\n * @internal\n *\n * @param module Module name.\n * @returns Logger instance.\n */\nexport function getLogger(module: string): Logger {\n    return entries(logLevelMap).reduce((logger, [level]) => {\n        logger[level] = (...messages: any[]) => {\n            logEntriesSubject.next({\n                time: new Date(),\n                module,\n                level,\n                messages,\n            });\n        };\n        return logger;\n    }, {} as Logger);\n}\n","import { copyDefinedProperties } from \"../common/copyDefinedProperties\";\nimport { getLogger } from \"../logger/logger\";\nimport { ChainableHandler, Handler, RequestMetadata } from \"./HandlerChainBuilder\";\n\nconst logger = getLogger(\"retryingHandler\");\n\nconst logRetry = (responseOrError: any, sleep: number) => {\n    logger.warn(\n        `Retrying handler got failed response:`,\n        responseOrError,\n        `Waited ${sleep} millis, attempting retry now.`\n    );\n};\n\nconst sleep = (millis: number) => new Promise((resolve) => setTimeout(resolve, millis));\n\nconst randomInRange = (min: number, max: number) => Math.round(Math.random() * (max - min) + min);\n\nconst defaultOptions: RetryingHandlerOptions<unknown> = {\n    backoffMultiple: 3,\n    baseSleep: 500,\n    maxSleep: 5 * 1000,\n    maxRetries: 10,\n\n    // The Response type is very common, so our default predicate special-cases to retry all failed Responses.\n    retryPredicate: (responseOrError: unknown) => (responseOrError instanceof Response ? !responseOrError.ok : true),\n};\n\n/**\n * Returns a cloned instance of Request if the input is of that type, otherwise returns the input unchanged.\n *\n * This is necessary when attempting to retry a request.\n * It is not possible to reuse the same Request instance that has already been sent.\n */\nexport function ensureClonedRequest<T>(input: T): T {\n    return input instanceof Request ? (input.clone() as T) : input;\n}\n\nexport interface RetryingHandlerOptions<Req> {\n    /**\n     * Multiple used to increase the random backoff between attempts. Default is 3, usually doesn't need to be changed.\n     */\n    backoffMultiple: number;\n\n    /**\n     * The minimum number of milliseconds to sleep between attempts.\n     *\n     * The actual number of milliseconds slept between attempts is chosen at random.\n     */\n    baseSleep: number;\n\n    /**\n     * The maximum number of milliseconds to sleep between attempts. Note that this is not a timeout -- if multiple\n     * request attempts are made, the total request latency will be longer than this.\n     *\n     * The actual number of milliseconds slept between attempts is chosen at random.\n     */\n    maxSleep: number;\n\n    /**\n     * The maximum number of retry attempts. The initial request is not counted against this number.\n     */\n    maxRetries: number;\n\n    /**\n     * Determine if a given error is retryable. If `false` is returned, the error will be passed up to the Handler's\n     * caller and no additional retry attempts will be made.\n     */\n    retryPredicate: (responseOrError: Req | Error, retryCount: number) => boolean;\n}\n\n/**\n * Retry requests using an exponential backoff with jitter strategy.\n *\n * More about this approach to retries can be found\n * [here](https://aws.amazon.com/blogs/architecture/exponential-backoff-and-jitter/). This implementation uses the\n * \"Decorrelated jitter\" algorithm described in that post. This offers a good tradeoff between call volume and latency,\n * and also allows for convenient configurability.\n *\n * @param options\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createRetryingHandler = <Req, Res, Meta extends RequestMetadata>(\n    options: Partial<RetryingHandlerOptions<Res>> = {}\n): ChainableHandler<Req, Res, Req, Res, Meta> => {\n    const definedOptions = copyDefinedProperties(options);\n    const { backoffMultiple, baseSleep, maxSleep, maxRetries, retryPredicate } = {\n        ...defaultOptions,\n        ...definedOptions,\n    };\n    let retryCount = -1;\n\n    const jitterSleep = async (priorSleep: number) => {\n        const nextSleep = Math.min(maxSleep, randomInRange(baseSleep, priorSleep * backoffMultiple));\n        await sleep(nextSleep);\n        return nextSleep;\n    };\n\n    const makeRequestAttempt =\n        (next: Handler<Req, Res, Meta>, priorSleep = baseSleep) =>\n        async (req: Req, metadata?: Meta): Promise<Res> => {\n            retryCount++;\n\n            try {\n                const response = await next(ensureClonedRequest(req), metadata);\n                if (retryCount < maxRetries && retryPredicate(response, retryCount)) {\n                    const nextSleep = await jitterSleep(priorSleep);\n                    // The request may have been aborted while we were sleeping. In that case, we'll resolve\n                    // with the failed response. In many cases this will be ignored, because an AbortError has already\n                    // been returned to the caller of the Handler chain – but this prevents us from doing\n                    // any extra work, and there may be edge cases where the caller could find the response useful.\n                    if (metadata?.signal?.aborted) return response;\n                    logRetry(response, nextSleep);\n                    return makeRequestAttempt(next, nextSleep)(req, metadata);\n                }\n                return response;\n            } catch (error) {\n                if (!(error instanceof Error)) {\n                    throw new Error(\n                        \"Invalid type caught by retrying handler. Handlers may only throw Errors. Got \" +\n                            `${JSON.stringify(error)}`\n                    );\n                }\n\n                // If the request fails because it was aborted, we assume this was done intentionally and we can stop.\n                if (error.name === \"AbortError\") throw error;\n\n                if (retryCount < maxRetries && retryPredicate(error, retryCount)) {\n                    const nextSleep = await jitterSleep(priorSleep);\n                    if (metadata?.signal?.aborted) throw error;\n                    logRetry(error, nextSleep);\n                    return makeRequestAttempt(next, nextSleep)(req, metadata);\n                }\n\n                // If no retry is to be attempted, return the error to the caller.\n                throw error;\n            }\n        };\n\n    return (next) => makeRequestAttempt(next);\n};\n","import { getLogger } from \"../logger/logger\";\nimport { ChainableHandler } from \"./HandlerChainBuilder\";\nimport { ensureClonedRequest } from \"./retryingHandler\";\n\nconst logger = getLogger(\"noCorsRetryingFetchHandler\");\n\nconst logRetry = (error: any) => {\n    logger.warn(`NoCorsRetrying handler got failed response:`, error, `Retrying request with {mode: \"no-cors\"}.`);\n};\n\n/**\n * Some requests may require a no-cors pre-flight (which are allowed to follow redirects) before they can be\n * successful.\n *\n * An example is a federated identity authentication flow, like OpenID Connect or OAuth. In many such schemes,\n * an unauthenticated request will not include CORs headers. Instead, a redirect to an Identity Provider will be\n * returned. In order follow this redirect, the Fetch request must be made with \"no-cors\" mode.\n *\n * Once the \"no-cors\" request is made, redirects are followed resulting in authentication cookies being set on the\n * original domain. Then, the original request can be retried and the server will authenticate the request and set\n * proper CORs headers on the response.\n *\n * Here's an example request flow, in which the page already has cookies for IdentityProvider.com (if that wasn't\n * the case, IdentityProvider.com would prompt the user for credentials and the rest of the flow would be the same):\n *\n * ```\n * WebPage a.com        MyServer b.com    IdentityProvider c.com\n *    |                         |                 |\n * Original request,            |                 |\n * unauthenticated:             |                 |\n *    |------------------------>|                 |\n *    |<--302: c.com, no CORs---|                 |\n *    |                         |                 |\n *    |                         |                 |\n * No CORs headers in           |                 |\n * response. Retry in           |                 |\n * \"no-cors\" mode:              |                 |\n *    |-----\"no-cors\" mode----->|                 |\n *    |<--302: c.com, no CORs---|                 |\n *    |                         |                 |\n *    |                         |                 |\n *    |------------------IdP cookies------------->|\n *    |<----------302: b.com?token=foo------------|\n *                              |                 |\n *    |                         |                 |\n *    |----b.com?token=foo----->|                 |\n *    |<-302: b.com, set cookie-|                 |\n *    |                         |                 |\n *    |                         |                 |\n * Retry original request,      |                 |\n * now authenticated:           |                 |\n *    |-----------cookie------->|                 |\n *    |<-----------200----------|                 |\n *                              |                 |\n * ```\n */\nexport const createNoCorsRetryingFetchHandler = <Res>(): ChainableHandler<\n    RequestInfo,\n    Res,\n    RequestInfo,\n    Res,\n    RequestInit | undefined\n> => {\n    // If concurrent requests are made to the same domain, we only want to perform one \"no-cors\" request. We assume\n    // requests to the same domain will set the same authentication cookies. To support this, we'll store any\n    // in-flight \"no-cors\" retries and re-use them for concurrent requests.\n    const noCorsRequests = new Map<string, Promise<Res>>();\n\n    return (next) =>\n        async (input, init = {}) => {\n            // `host` includes domain:port, so works for local development. If the input is a relative path, we'll\n            // use `location.origin` to resolve into a fully qualified URL (although of course we don't actually\n            // anticipate any CORs issues in that case -- but this is cleaner than special-casing).\n            let requestKey = typeof input === \"string\" ? input : input.url;\n            try {\n                requestKey = new URL(requestKey, location.origin).host;\n            } catch (_) {\n                /* no-op, use the full input URL as the requestKey */\n            }\n\n            try {\n                // By always attempting the request first, we avoid needing to maintain any state about the validity\n                // of the request (e.g. the expiration time for a credential). We just make the request, and if it\n                // fails, this tells us we've made an invalid request. This does result in one additional request, but\n                // it makes this much more flexible and avoids having to maintain state (which can be a source of bugs).\n                return await next(ensureClonedRequest(input), init);\n            } catch (error) {\n                // If the request fails because it was aborted, we assume this was done intentionally and we can stop.\n                if (error instanceof Error && error.name === \"AbortError\") throw error;\n\n                // Otherwise we don't actually care what error occurred – we know this will be an error thrown by\n                // `fetch` itself (rather than some error encountered on the server, which wouldn't cause `next` to\n                // throw), and we'll just assume it's a CORs error. If it's not, we'll perform a \"no-cors\" retry anyway,\n                // which will presumably also fail, and that failure will be returned to the caller.\n                logRetry(error);\n                const noCorsRequest =\n                    noCorsRequests.get(requestKey) ?? next(ensureClonedRequest(input), { ...init, mode: \"no-cors\" });\n                noCorsRequests.set(requestKey, noCorsRequest);\n                await noCorsRequest;\n                noCorsRequests.delete(requestKey);\n                return next(ensureClonedRequest(input), init);\n            }\n        };\n};\n","import { copyDefinedProperties } from \"../common/copyDefinedProperties\";\nimport { isString } from \"../common/typeguards\";\nimport { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\n\nconst sleep = (millis: number) => new Promise<void>((resolve) => setTimeout(resolve, millis));\n\nconst defaultOptions: TimeoutHandlerOptions<unknown> = {\n    createError: (request) => {\n        // The string and Request types are very common, so our default error creator special-cases those types to\n        // provide better error messages.\n        const destination = isString(request)\n            ? `for ${request}`\n            : request instanceof Request\n            ? `for ${request.url}`\n            : \"\";\n        return new Error(`Request ${destination} timed out by client timeout handler.`);\n    },\n    timeout: 30 * 1000,\n};\n\nexport interface TimeoutHandlerOptions<Req> {\n    /**\n     * A function that returns a new Error instance when a timeout occurs.\n     */\n    createError: (req: Req, meta?: RequestMetadata | void) => Error;\n\n    /**\n     * Abort requests after this number of milliseconds. Defaults to 30 seconds.\n     */\n    timeout: number;\n}\n\n/**\n * Timeout requests after a given number of milliseconds, rejecting the Response promise with a custom error.\n *\n * @param options\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createTimeoutHandler = <Req, Res, Meta extends RequestMetadata>(\n    options: Partial<TimeoutHandlerOptions<Req>> = {}\n): ChainableHandler<Req, Res, Req, Res, Meta> => {\n    const definedOptions = copyDefinedProperties(options);\n    const { createError, timeout } = { ...defaultOptions, ...definedOptions };\n\n    // If the timeout Promise wins the race, the HandlerChainBuilder sets the abort signal for subsequent handlers. They\n    // may look at the abort signal in order to terminate themselves early.\n    return (next) => (req, meta) =>\n        Promise.race([next(req, meta), sleep(timeout).then(() => Promise.reject(createError(req, meta)))]);\n};\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { createDebugHandler } from \"./debugHandler\";\nimport { HandlerChainBuilder } from \"./HandlerChainBuilder\";\nimport { createNoCorsRetryingFetchHandler } from \"./noCorsRetryingFetchHandler\";\nimport { createRetryingHandler } from \"./retryingHandler\";\nimport { createTimeoutHandler } from \"./timeoutHandler\";\n\nexport type FetchHandler<R = Response> = (input: RequestInfo, init?: RequestInit) => Promise<R>;\n\n/**\n * The default Fetch implementation, used to make a simple HTTP requests without any custom headers. This can be passed\n * to `HandlerChainBuilder` to form the basis for other Fetch implementations (e.g. with custom headers, which extract\n * the Response body, etc.)\n *\n * Has support for retries, client-side timeout, and navigating federated auth flows that may not support CORs requests.\n *\n * @internal\n */\n\nexport const defaultFetchHandlerFactory = Injectable(\"defaultFetchHandler\", () => {\n    return (\n        new HandlerChainBuilder(fetch)\n            .map(createDebugHandler())\n            // The 20-second per-request timeout is pretty arbitrary, it's just set to be longer than our API gateway\n            // timeout (15s) and lower than the browsers own timeout (variable, Chrome's is 5m).\n            .map(createTimeoutHandler({ timeout: 20 * 1000 }))\n            .map(createNoCorsRetryingFetchHandler())\n            .map(\n                createRetryingHandler({\n                    maxRetries: 3,\n                    retryPredicate: (responseOrError) => {\n                        // Don't retry successful Responses or Responses with a 4xx HTTP status code (indicating a\n                        // client error). Do retry all 5xx HTTP status codes.\n                        if (responseOrError instanceof Response) {\n                            if (responseOrError.ok) return false;\n                            if (responseOrError.status % 400 < 100) return false;\n                        }\n                        return true;\n                    },\n                })\n            ).handler\n    );\n});\n","export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),extendedConst=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,0,1,11,9,1,0,65,1,65,2,106,11,0])),gc=()=>(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,95,1,120,0])))(),jspi=()=>(async()=>\"Suspender\"in WebAssembly)(),memory64=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,4,1])),multiMemory=()=>(async()=>{try{return new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,5,5,2,0,0,0,0])),!0}catch(e){return!1}})(),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),relaxedSimd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,15,1,13,0,65,1,253,15,65,2,253,15,253,128,2,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),streamingCompilation=()=>(async()=>\"compileStreaming\"in WebAssembly)(),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])),typeReflection=()=>(async()=>\"Function\"in WebAssembly)();\n","type AnyFunction<A extends any[] = any[], B = any> = (...args: A) => B;\n\nexport type Memoized<Fn extends AnyFunction> = {\n    (...args: Parameters<Fn>): ReturnType<Fn>;\n    delegate: Fn;\n};\n\nexport function isMemoized(fn: unknown): fn is Memoized<AnyFunction> {\n    return typeof fn === \"function\" && typeof (fn as any).delegate === \"function\";\n}\n\nexport function memoize<Fn extends AnyFunction>(delegate: Fn): Memoized<Fn> {\n    let memo: any;\n    const memoized = (...args: any[]) => {\n        if (typeof memo !== \"undefined\") return memo;\n        memo = delegate(...args);\n        return memo;\n    };\n    memoized.delegate = delegate;\n    return memoized;\n}\n","// NOTE: All errors thrown in the CameraKit package have to be defined here.\n// Error types are not infered from error factories for API doc purposes and consistency.\n\n/**\n * Helper type to extract type generic parameter.\n */\ntype ExtractName<P> = P extends NamedError<infer T> ? T : never;\n\n/**\n * All errors are expected to have \"Error\" suffix.\n */\ntype ErrorName = `${string}Error`;\n\ntype NamedError<Name extends ErrorName> = Error & { name: Name };\n\n/**\n * Removes the top trace line from the stack.\n */\nfunction cleanErrorStack(stack: string): string {\n    const [first, _, ...rest] = stack.split(\"\\n\");\n    return [first, ...rest].join(\"\\n\");\n}\n\n/**\n * Creates error factory that ensures Error.prototype.name field value.\n *\n * NOTE: exported only for unit tests.\n *\n * @param name Error name.\n * @returns Error factory function.\n * @internal\n */\nexport function namedError<\n    // default to never to ensure the type argument is specified\n    TError extends NamedError<TName> = never,\n    // default to provided error name to make this type argument optional to reduce boilerplate\n    TName extends ErrorName = ExtractName<TError>\n>(name: TName) {\n    return (message: string, cause?: unknown): TError => {\n        const error = new Error(message, { cause });\n        error.name = name;\n        error.stack = error.stack && cleanErrorStack(error.stack);\n        // Safety: we set name above and therefore sure the type of error is correct\n        return error as TError;\n    };\n}\n\nexport type LegalError = NamedError<\"LegalError\">;\n/** @internal */\nexport const legalError = namedError<LegalError>(\"LegalError\");\n\nexport type LensContentValidationError = NamedError<\"LensContentValidationError\">;\n/** @internal */\nexport const lensContentValidationError = namedError<LensContentValidationError>(\"LensContentValidationError\");\n\nexport type LensError = NamedError<\"LensError\">;\n/** @internal */\nexport const lensError = namedError<LensError>(\"LensError\");\n\nexport type CameraKitSourceError = NamedError<\"CameraKitSourceError\">;\n/** @internal */\nexport const cameraKitSourceError = namedError<CameraKitSourceError>(\"CameraKitSourceError\");\n\n/**\n * The error triggered when a lens prompts the user to select an image, but the image fails to be successfully delivered\n * to the lens.\n */\nexport type LensImagePickerError = NamedError<\"LensImagePickerError\">;\n/** @internal */\nexport const lensImagePickerError = namedError<LensImagePickerError>(\"LensImagePickerError\");\n\nexport type CacheKeyNotFoundError = NamedError<\"CacheKeyNotFoundError\">;\n/** @internal */\nexport const cacheKeyNotFoundError = namedError<CacheKeyNotFoundError>(\"CacheKeyNotFoundError\");\n\n/**\n * Thrown by {@link bootstrapCameraKit} if provided configuration is invalid.\n *\n * @category Bootstrapping and Configuration\n */\nexport type ConfigurationError = NamedError<\"ConfigurationError\">;\n/** @internal */\nexport const configurationError = namedError<ConfigurationError>(\"ConfigurationError\");\n\nexport type WebGLError = NamedError<\"WebGLError\">;\n/** @internal */\nexport const webGLError = namedError<WebGLError>(\"WebGLError\");\n\nexport type BenchmarkError = NamedError<\"BenchmarkError\">;\n/** @internal */\nexport const benchmarkError = namedError<BenchmarkError>(\"BenchmarkError\");\n\n/**\n * Thrown by {@link bootstrapCameraKit} when the current platform is not supported by CameraKit.\n *\n * This can happen if the browser doesn't support a required feature (e.g. WebGL).\n *\n * @category Bootstrapping and Configuration\n */\nexport type PlatformNotSupportedError = NamedError<\"PlatformNotSupportedError\">;\n/** @internal */\nexport const platformNotSupportedError = namedError<PlatformNotSupportedError>(\"PlatformNotSupportedError\");\n\n/**\n * This error occurs if a Lens is unable to continue rendering.\n *\n * If this error occurs, Camera Kit automatically removes the Lens from the session.\n * It's always a good idea to handle this error and update the user experience accordingly.\n * For example, you could remove the faulty Lens from your Lens selection UI.\n *\n * ```ts\n * cameraKitSession.events.addEventListener('error', ({ detail }) => {\n *   if (detail.error.name === 'LensExecutionError') {\n *     console.log(`Lens ${detail.lens.name} encountered an error and was removed. Please pick a different lens.`)\n *   }\n * })\n * ```\n */\nexport type LensExecutionError = NamedError<\"LensExecutionError\">;\n/** @internal */\nexport const lensExecutionError = namedError<LensExecutionError>(\"LensExecutionError\");\n\n/**\n * This error occurs when a session becomes inoperable.\n *\n * It's always a good idea to handle this error and update the user experience accordingly.\n * For example, you could show a message to a user.\n *\n * ```ts\n * cameraKitSession.events.addEventListener('error', ({ detail }) => {\n *   if (detail.error.name === 'LensAbortError') {\n *     console.log(`Camera Kit encountered an unrecoverable error and became inoperable. Please refresh the page.`)\n *   }\n * })\n * ```\n */\nexport type LensAbortError = NamedError<\"LensAbortError\">;\n/** @internal */\nexport const lensAbortError = namedError<LensAbortError>(\"LensAbortError\");\n\n/**\n * Error thrown when LensCore asked to store lens data, but CameraKit failed storing that.\n */\nexport type PersistentStoreError = NamedError<\"PersistentStoreError\">;\n/** @internal */\nexport const persistentStoreError = namedError<PersistentStoreError>(\"PersistentStoreError\");\n\n/**\n * Error thrown when LensCore asked to provide an asset, but CameraKit failed providing that.\n */\nexport type LensAssetError = NamedError<\"LensAssetError\">;\n/** @internal */\nexport const lensAssetError = namedError<LensAssetError>(\"LensAssetError\");\n\n/**\n * Thrown by {@link bootstrapCameraKit} if an error occurs during SDK initializion or while downloading the render\n * engine WebAssembly.\n *\n * @category Bootstrapping and Configuration\n */\nexport type BootstrapError = NamedError<\"BootstrapError\">;\n/** @internal */\nexport const bootstrapError = namedError<BootstrapError>(\"BootstrapError\");\n","module.exports = { \"PACKAGE_VERSION\": \"0.15.1-alpha.1\" }\n;","import { memoize } from \"../common/memoize\";\nimport { isRecord } from \"../common/typeguards\";\nimport environment from \"../environment.json\";\nimport lensCoreWasm from \"../lensCoreWasmVersions.json\";\n\ntype BrandArray = Array<{ brand: string; version: string }>;\n\ninterface NavigatorUAData {\n    brands: BrandArray;\n    mobile: boolean;\n    platform: string;\n}\n\nexport type ConnectionType = \"bluetooth\" | \"cellular\" | \"ethernet\" | \"none\" | \"wifi\" | \"wimax\" | \"other\" | \"unknown\";\n\ndeclare global {\n    interface Navigator {\n        userAgentData?: NavigatorUAData;\n        connection?: {\n            // This currently has extremely limited support in browsers.\n            // https://wicg.github.io/netinfo/#dom-networkinformation-type\n            type?: ConnectionType;\n        };\n    }\n}\n\n/**\n * Some user agents may not properly implement the NavigatorUAData interface, so we have to do our own validation here\n * to make sure we're dealing with a well-formed value.\n */\nfunction isNavigatorUAData(value: unknown): value is NavigatorUAData {\n    return (\n        isRecord(value) &&\n        Array.isArray(value[\"brands\"]) &&\n        value[\"brands\"].every((brand) => {\n            return isRecord(brand) && typeof brand[\"brand\"] === \"string\" && typeof brand[\"version\"] === \"string\";\n        }) &&\n        typeof value[\"mobile\"] === \"boolean\" &&\n        typeof value[\"platform\"] === \"string\"\n    );\n}\n\n/**\n * In the future, we may invest in more robust device-detection (e.g. a UA string database), but for now this will give\n * us some sense of device usage.\n */\nfunction parseDeviceModel(userAgent: string) {\n    // from user agent like \"(Linux; Android 11; Pixel 2)\" extact \"Pixel 2\"\n    const userAgentWithModel = userAgent.match(/;[^;]+?;([^\\)]+?)\\)/);\n\n    if (userAgentWithModel) {\n        return userAgentWithModel[1].trim();\n    }\n\n    // from user agent like \"... (iPad; CPU OS 15_1 like Mac OS X) ...\" extract \"iPad\"\n    const userAgentWithModel2 = userAgent.match(/\\(([^;]+);/);\n\n    if (userAgentWithModel2) {\n        return userAgentWithModel2[1].trim();\n    }\n\n    return \"unknown\";\n}\n\n/**\n * The origin may be useful to identify the running application (e.g. to attribute metrics).\n *\n * We need to handle cases in which we run inside a child browsing context (e.g. an iframe), which may not have a\n * hostname – in this case we'll check each ancestor context until we find a valid hostname.\n */\nfunction parseOrigin(): string {\n    if (location.hostname !== \"\") return location.hostname;\n\n    // Firefox does not implement ancestorOrigins, so we need a fallback.\n    // Context here: https://github.com/whatwg/html/issues/1918\n    const possibleOrigins =\n        location.ancestorOrigins === undefined && typeof window !== \"undefined\"\n            ? [window.parent.origin, window.top?.origin ?? \"\"]\n            : location.ancestorOrigins ?? [];\n\n    for (let origin of possibleOrigins) {\n        try {\n            origin = new URL(origin).hostname;\n            if (origin) return origin;\n        } catch (_) {}\n    }\n\n    return \"unknown\";\n}\n\n/* eslint-disable max-len */\n/**\n * The backend defines the allowed list of known OSes which will pass their RegEx test when found in our custom\n * CameraKitWeb userAgent string.\n *\n * See https://github.sc-corp.net/Snapchat/useragent/blob/9333afe7cc6ac00503ad46cb234bcf94006dff98/java/useragent/src/main/java/snapchat/client/UserAgent.java#L124\n */\n/* eslint-enable */\ntype KnownPlatform = \"macos\" | \"windows\" | \"linux\" | \"android\" | \"ios\" | \"ipados\" | \"unknown\";\nfunction parseOSName(userAgent: string): KnownPlatform {\n    const knownPlatforms = new Map<string, KnownPlatform>([\n        [\"android\", \"android\"],\n        [\"linux\", \"linux\"],\n        [\"iphone os\", \"ios\"],\n        [\"ipad\", \"ipados\"],\n        [\"mac os\", \"macos\"],\n        [\"macos\", \"macos\"],\n        [\"windows\", \"windows\"],\n    ]);\n\n    const normalizedUserAgent = userAgent.toLowerCase();\n    for (const [match, platform] of knownPlatforms.entries()) {\n        if (normalizedUserAgent.includes(match)) return platform;\n    }\n    return \"unknown\";\n}\n\n/**\n * Parse the OS (a.k.a. platform) version.\n *\n * From limited testing, this seems to often produce incorrect results – the userAgent string does not typically include\n * the actual OS version.\n *\n * Better results could be obtained from [NavigatorUAData.getHighEntropyValues]\n * (https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData/getHighEntropyValues), but this presents two\n * problems: 1) it's currently only supported on Chrome and 2) browsers may prompt the user for permission to share\n * this information.\n *\n * So, at least for now, we'll be satisfied with the incorrect version number.\n */\nfunction parseOSVersion(userAgent: string) {\n    // possible platform version values inside of user agent string\n    // \" 11;\"\n    // \" 10_15_7)\"\n    // \" 13_5_1 \"\n    // \" 10.0;\"\n    // \" 15_1 \"\n    const versionMatch = userAgent.match(/\\s([\\d][\\d_.]*[\\d])(;|\\)|\\s)/);\n\n    if (versionMatch != null) {\n        return versionMatch[1].replace(/_/g, \".\");\n    }\n\n    return \"\";\n}\n\n/**\n * Some browsers (e.g. Safari) do not support the `Navigator.userAgentData` API. We'll attempt a sort of polyfill by\n * parsing the data found in [NavigatorUAData](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData) from\n * the raw user agent string.\n */\nfunction parseUserAgentData(userAgent: string): NavigatorUAData {\n    let brand: BrandArray[number];\n\n    // Parse UA string for Chromium-based browsers (e.g. Chrome, Edge)\n    if (/Chrome/.test(userAgent)) {\n        const versionMatch = userAgent.match(/Chrome\\/([\\d.]+)/);\n        brand = {\n            brand: \"Chrome\",\n            version: versionMatch !== null ? versionMatch[1] : \"unknown\",\n        };\n    }\n\n    // Parse UA string for Safari (very important for this to only be done if Chrome is not found – Chrome userAgent\n    // strings will contain \"Safari\")\n    else if (/Safari/.test(userAgent)) {\n        let versionMatch = userAgent.match(/Version\\/([\\d.]+)/);\n        if (versionMatch === null) versionMatch = userAgent.match(/Safari\\/([\\d.]+)/);\n        brand = {\n            brand: \"Safari\",\n            version: versionMatch !== null ? versionMatch[1] : \"unknown\",\n        };\n    }\n\n    // Parse UA for unknown browser.\n    // TODO: will be changed, default value support should be added on a COF server side.\n    else {\n        brand = {\n            brand: \"Firefox\",\n            version: \"0\",\n        };\n    }\n\n    // We're not using `mobile` for anything, and we have no consistent way to determine this from the UA string.\n    // We'll set it to false, but this should not be used – instead, we'll need to rely on more sophisticated methods\n    // (e.g. a userAgent database) to determine actual device.\n    const mobile = false;\n    const platform = parseOSName(userAgent);\n\n    return {\n        brands: [brand],\n        mobile,\n        platform,\n    };\n}\n\n/* eslint-disable max-len */\n/**\n * The `brands` array found in [NavigatorUAData](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData) is\n * intentionally designed to discourage standardized processing. This method of extracting brand information will be\n * inherently brittle, and it relies on us matching some well-known brands.\n *\n * For more detail from the spec:\n * See https://wicg.github.io/ua-client-hints/#monkeypatch-html-windoworworkerglobalscope\n * And https://wicg.github.io/ua-client-hints/#grease\n *\n * We also must match the list of known brands allowed by the backend, defined here:\n * https://github.sc-corp.net/Snapchat/useragent/blob/9333afe7cc6ac00503ad46cb234bcf94006dff98/java/useragent/src/main/java/snapchat/client/UserAgent.java#L124\n */\n/* eslint-enable */\ntype KnownBrand = \"Chrome\" | \"Safari\" | \"Firefox\";\nfunction normalizeBrands(brands: BrandArray): BrandArray {\n    const knownBrands = new Map<string, KnownBrand>([\n        [\"Google Chrome\", \"Chrome\"],\n        [\"Chrome\", \"Chrome\"],\n        [\"Chromium\", \"Chrome\"],\n        [\"Firefox\", \"Firefox\"],\n        [\"Microsoft Edge\", \"Chrome\"],\n        [\"Safari\", \"Safari\"],\n    ]);\n\n    const normalizedBrands = brands\n        .filter(({ brand }) => knownBrands.has(brand))\n        .map((brand) => {\n            return {\n                // Safety: we've filtered out brands which do not appear as keys in `knownBrands`, so this cannot return\n                // undefined.\n                brand: knownBrands.get(brand.brand)!,\n                version: brand.version,\n            };\n        });\n\n    // TODO: default \"unknown\" value should be added on COF server side. For now we'll use Firefox.\n    if (normalizedBrands.length === 0) return [{ brand: \"Firefox\", version: \"0\" }];\n    return normalizedBrands;\n}\n\n/* eslint-disable max-len */\n/**\n * We must ensure the data we get from `navigator.userAgentData` is normalized to match what our backend expects to\n * see in our custom CameraKitWeb userAgent string.\n *\n * This string is defined here:\n * https://github.sc-corp.net/Snapchat/useragent/blob/9333afe7cc6ac00503ad46cb234bcf94006dff98/java/useragent/src/main/java/snapchat/client/UserAgent.java#L124\n */\n/* eslint-enable */\nfunction normalizeUserAgentData(userAgentData: NavigatorUAData): NavigatorUAData {\n    return {\n        brands: normalizeBrands(userAgentData.brands),\n        mobile: userAgentData.mobile,\n        platform: parseOSName(userAgentData.platform),\n    };\n}\n\n/** @internal */\nexport interface PlatformInfo {\n    sdkShortVersion: string;\n    sdkLongVersion: string;\n    lensCore: {\n        version: string;\n        buildNumber: string;\n        baseUrl: string;\n    };\n    browser: { brand: string; version: string };\n    osName: string;\n    osVersion: string;\n    deviceModel: string;\n    locale: string;\n    fullLocale: string;\n    origin: string;\n    connectionType: ConnectionType;\n}\n\n/** @internal */\nexport const getPlatformInfo = memoize(function getPlatformIno(): PlatformInfo {\n    // [NavigatorUAData](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData) is currently only\n    // available on Chromium-based browsers – it's nice because it gives us clear, well-documented information. But\n    // we'll have to fallback to parsing the userAgent string when it's not available.\n    const userAgent = navigator.userAgent;\n    const userAgentData = isNavigatorUAData(navigator.userAgentData)\n        ? normalizeUserAgentData(navigator.userAgentData)\n        : parseUserAgentData(userAgent);\n\n    const osVersion = parseOSVersion(userAgent);\n    const deviceModel = parseDeviceModel(userAgent);\n\n    // Remove any `-prerelease` or `+buildmetadata` portions from the semver string.\n    const sdkShortVersion = environment.PACKAGE_VERSION.replace(/[-+]\\S+$/, \"\");\n\n    const locale = navigator.language;\n    // The full locale string includes all the languages with qvalues -- this is needed for some API calls.\n    // More on qvalues: https://developer.mozilla.org/en-US/docs/Glossary/Quality_values\n    const fullLocale =\n        (navigator.languages ?? [])\n            .map((lang, index) => {\n                const qvalue = Math.max(0, (10 - index) / 10);\n                return `${lang};q=${qvalue.toFixed(1)}`;\n            })\n            .join(\", \") || locale;\n\n    return {\n        sdkShortVersion,\n        sdkLongVersion: environment.PACKAGE_VERSION,\n        lensCore: lensCoreWasm,\n        // In cases where we've parsed the userAgent string to find the brand, there will only ever be a single brand –\n        // in browsers which support NavigatorUAData there could be more than one (e.g. Chrome and Chromium), but they\n        // should be equivalent for our purposes -- either way we're okay just picking the first one.\n        browser: userAgentData.brands[0],\n        osName: userAgentData.platform,\n        osVersion,\n        deviceModel,\n        locale,\n        fullLocale,\n        origin: parseOrigin(),\n        connectionType: navigator.connection?.type ?? \"unknown\",\n    };\n});\n","import { exceptions, simd } from \"wasm-feature-detect\";\nimport { memoize } from \"../common/memoize\";\nimport { XrCapabilities } from \"../lens-core-module\";\nimport { platformNotSupportedError } from \"../namedErrors\";\nimport { getPlatformInfo } from \"./platformInfo\";\n\n/** @internal */\nexport type SupportedCapability<T> = T & { supported: true };\n/** @internal */\nexport type UnsupportedCapability = { supported: false; error: Error };\n/** @internal */\nexport type Capability<T = void> = SupportedCapability<T> | UnsupportedCapability;\n\n//-----------\n// WebGL\n//-----------\n\ntype WebGlCapability = Capability<{ maxTextureSize: number }>;\n\n// This required minimum max texture size is based on data from\n// https://web3dsurvey.com/webgl/parameters/MAX_TEXTURE_SIZE. Checking for a reasonable minimum MAX_TEXTURE_SIZE avoids\n// attempting to run lenses on platforms that will not support them -- most commonly, we've seen some platforms that\n// report 0 MAX_TEXTURE_SIZE, which will cause errors for all lenses.\nconst minRequiredMaxTextureSize = 1024;\n\n/**\n * @returns An object with fields describing support for various WebGL features.\n *\n * @internal\n */\nfunction getWebGlSupport(): WebGlCapability {\n    const ctx = globalThis.document?.createElement(\"canvas\").getContext(\"webgl2\");\n    if (!ctx)\n        return {\n            supported: false,\n            error: platformNotSupportedError(\"CameraKit requires WebGL2, but this browser does not support WebGL2.\"),\n        };\n    const maxTextureSize = ctx.getParameter(ctx.MAX_TEXTURE_SIZE);\n    const supported = maxTextureSize >= minRequiredMaxTextureSize;\n    return supported\n        ? { supported, maxTextureSize }\n        : {\n              supported,\n              error: platformNotSupportedError(\n                  `CameraKit requires WebGL's MAX_TEXTURE_SIZE exceed a minimum value of ` +\n                      `${minRequiredMaxTextureSize}, but the browser's reported MAX_TEXTURE_SIZE is ${maxTextureSize}.`\n              ),\n          };\n}\n\n//-----------\n// WASM\n//-----------\n\ntype WasmCapability = Capability<{ wasmFeatures: number }>;\n\n/**\n * Because there may be a large number of WASM-related capabilities, and because these may correspond to various builds\n * of LensCore, we encode the various WASM capabilities into a single number by bitwise OR-ing together the numbers\n * corresponding to each capability.\n *\n * Since each combindation of capabilities is represented by a single number, we can easily map between that number and\n * the corresponding LensCore build name that makes use of those capabilities.\n *\n * @internal\n */\nexport enum WasmFeatures {\n    Default = 0b00000000,\n    SIMD = 0b00000001,\n    ExceptionHandling = 0b00000010,\n}\n\n/**\n * @returns A non-negative integer representing the combination of supported WebAssembly features, or -1 if WebAssembly\n * is not supported at all.\n *\n * @internal\n */\nasync function getWebAssemblyCapabilities(): Promise<WasmCapability> {\n    if (globalThis.WebAssembly === undefined)\n        return {\n            supported: false,\n            error: platformNotSupportedError(\n                \"CameraKit requires WebAssembly, but this browser does not support WebAssembly.\"\n            ),\n        };\n    return {\n        supported: true,\n        wasmFeatures: (\n            await Promise.all([\n                simd().then((supported) => {\n                    // Although Safari 16.4 reports SIMD support, LensCore encounters rendering bugs when using\n                    // SIMD in Safari 16.4. We will disable SIMD for now until Safari stabilizes the feature.\n                    if (getPlatformInfo().browser.brand === \"Safari\") return WasmFeatures.Default;\n                    return supported ? WasmFeatures.SIMD : WasmFeatures.Default;\n                }),\n                exceptions().then((supported) => (supported ? WasmFeatures.ExceptionHandling : WasmFeatures.Default)),\n            ])\n        ).reduce((features, feature) => features | feature, WasmFeatures.Default),\n    };\n}\n\n//-----------\n// WebXR\n//-----------\n\ntype WebXrCapability = Capability<XrCapabilities>;\n\n/**\n * @returns A Promise containing an object with fields describing the support of various WebXR features. This object's\n * type is defined by LensCore, as they consume these capabilities and adjust behavior accordingly.\n *\n * @internal\n */\nasync function getWebXrCapabilities(): Promise<WebXrCapability> {\n    const notSupported: WebXrCapability = {\n        supported: false,\n        error: platformNotSupportedError(\n            `Use of this feature requires WebXR support for immersive AR sessions, but ` +\n                `this browser does not support immersive AR sessions.`\n        ),\n    };\n    if (!isSecureContext) return notSupported;\n    if (!navigator.xr) return notSupported;\n    const isImmersiveArSupported = await navigator.xr.isSessionSupported(\"immersive-ar\");\n    return isImmersiveArSupported\n        ? {\n              supported: true,\n              sixDofSupported: true,\n              sceneDepthSupported: true,\n          }\n        : notSupported;\n}\n\n/** @internal */\nexport interface PlatformCapabilities {\n    webgl: WebGlCapability;\n    wasm: WasmCapability;\n    webxr: WebXrCapability;\n}\n\n/**\n * Get information about the current platform capabilities, including:\n * - WebGL support and various WebGL parameters.\n * - WASM support and support for various WASM features.\n * - WebXR support and support for various WebXR features.\n *\n * @internal\n */\nexport const getPlatformCapabilities = memoize(async function getPlatformCapabilities(): Promise<PlatformCapabilities> {\n    return {\n        webgl: getWebGlSupport(),\n        wasm: await getWebAssemblyCapabilities(),\n        webxr: await getWebXrCapabilities(),\n    };\n});\n","import { DefaultErrorHandler, LensCoreModule } from \"./generated-types\";\n\ntype ErrorName = `${string}Error`;\ntype NamedError<Name extends ErrorName> = Error & { name: Name };\n\nexport type LensCoreLensDeserializationError = NamedError<\"LensCoreLensDeserializationError\">;\nexport type LensCoreValidationError = NamedError<\"LensCoreValidationError\">;\nexport type LensCoreUncategorizedError = NamedError<\"LensCoreUncategorizedError\">;\nexport type LensCoreLensExecutionError = NamedError<\"LensCoreLensExecutionError\">;\nexport type LensCoreAbortError = NamedError<\"LensCoreAbortError\">;\nexport type LensCoreUninitializedError = NamedError<\"LensCoreUninitializedError\">;\nexport type LensCoreUnknownError = NamedError<\"LensCoreUnknownError\">;\n\nexport type LensCoreError =\n    | LensCoreLensDeserializationError\n    | LensCoreValidationError\n    | LensCoreUncategorizedError\n    | LensCoreLensExecutionError\n    | LensCoreAbortError\n    | LensCoreUninitializedError;\n\ntype NativeLensCoreError = keyof LensCoreModule[\"ErrorType\"];\n\n// Construct a map linking each LensCore error name to its value,\n// designed to trigger a compile-time error if an error is added or removed in LensCore.\n// eslint-disable-next-line max-len\n// https://github.sc-corp.net/Snapchat/LensCore/blob/285ac47cad7fe5268f38d1bab82d51b7b19d6b48/Src/PlatformSpecific/WebAssembly/ErrorType.hpp#L4\nconst lensCoreErrorValue: Record<NativeLensCoreError, number> = {\n    LensDeserialization: 0,\n    Validation: 1,\n    Uncategorized: 2,\n    LensExecution: 3,\n    Abort: 4,\n    Uninitialized: 5,\n};\n\n// The purpose of lensCoreErrorValue above is to safeguard integrity.\n// To achieve constant lookup times, we must swap the keys with their corresponding values.\nconst lensCoreErrorName = Object.fromEntries(\n    Object.entries(lensCoreErrorValue).map((entry) => [entry[1], entry[0] as NativeLensCoreError] as const)\n);\n\nexport function wrapLensCoreError(fn: (e: LensCoreError) => void) {\n    const handler: DefaultErrorHandler = (cause) => {\n        const error = new Error(cause.message.split(\"\\n\")[0], {\n            cause:\n                cause.otherExceptions || cause.cause?.metadata\n                    ? {\n                          otherExceptions: cause.otherExceptions,\n                          metadata: cause.cause.metadata,\n                      }\n                    : undefined,\n        });\n        const name: (LensCoreError | LensCoreUnknownError)[\"name\"] = `LensCore${\n            cause.cause ? lensCoreErrorName[cause.cause.type.value] : \"Unknown\"\n        }Error` as const;\n        error.name = name;\n        if (cause.stack) {\n            // if cause has a stack, then we just replace the first line of it\n            // which is actually a error message with our new one, which also contains new error name\n            const [_, ...stackLines] = cause.stack.split(\"\\n\");\n            if (error.stack) {\n                stackLines.unshift(error.stack.split(\"\\n\")[0]);\n            }\n            error.stack = stackLines.join(\"\\n\");\n        }\n        // Safety: we set name above and therefore sure the type of error is correct\n        fn(error as LensCoreError);\n    };\n    return handler;\n}\n","import { DefaultErrorHandler, DefaultEventHandler, LensCoreModule, PlayCanvasInput } from \"./generated-types\";\nimport { LensCoreError, wrapLensCoreError } from \"./lensCoreError\";\n\n// Note: While this looks similar to Omit, Omit breaks discriminated unions:\n// https://github.com/microsoft/TypeScript/issues/31501\n// This is relevant in the case of setRenderMode().\ntype SafeOmit<T, K extends keyof any> = T extends any ? Omit<T, K> : never;\n\n/**\n * LensCore methods that require additional handling.\n */\ntype LensCoreCustomMethods = {\n    // initialize() param has exceptionHandler, which requires error mapping.\n    initialize(input: PromisifiedParam<MapParamErrorCallback<\"initialize\", \"exceptionHandler\">>): Promise<void>;\n\n    // provideRemoteAssetsResponse() param has onFailure, which requires error mapping.\n    provideRemoteAssetsResponse(input: MapParamErrorCallback<\"provideRemoteAssetsResponse\", \"onFailure\">): void;\n\n    // playCanvas() should resolve its Promise when the `onReady` callback is invoked, instead of the `onSuccess`.\n    playCanvas(input: Omit<PlayCanvasInput, \"onReady\" | \"onSuccess\" | \"onFailure\">): Promise<void>;\n};\n\n// Ensure method names defined in CustomLensCoreMethods are the ones that exist in LensCoreModule.\ntype LensCoreCustomMethodNames = keyof LensCoreCustomMethods extends keyof LensCoreModule\n    ? keyof LensCoreCustomMethods\n    : never;\n\ntype PropertyKinds = \"enum\" | \"sync method\" | \"promisifiable method\" | \"custom method\";\n\n// Create a mapping between property keys and the kind of property it is (enum, sync method, or async method)\ntype LensCorePropertyKinds = {\n    [K in keyof LensCoreModule]: LensCoreModule[K] extends (...args: any[]) => any\n        ? K extends LensCoreCustomMethodNames\n            ? \"custom method\"\n            : Parameters<LensCoreModule[K]>[0] extends {\n                  onSuccess?: DefaultEventHandler;\n                  onFailuer?: DefaultErrorHandler;\n              }\n            ? \"promisifiable method\"\n            : \"sync method\"\n        : \"enum\";\n};\n\n// Helper to select LensCoreModule properties of a particular kind.\ntype PropertiesOfKind<T extends PropertyKinds> = Exclude<\n    {\n        [K in keyof LensCorePropertyKinds]: LensCorePropertyKinds[K] extends T ? K : never;\n    }[keyof LensCorePropertyKinds],\n    undefined\n>;\ntype FirstParameter<T> = T extends (first: infer P, ...rest: any[]) => any ? P : never;\ntype LensCoreEnums = Pick<LensCoreModule, PropertiesOfKind<\"enum\">>;\ntype LensCoreSyncMethods = Pick<LensCoreModule, PropertiesOfKind<\"sync method\">>;\ntype LensCorePromisifiedMethods = {\n    [K in PropertiesOfKind<\"promisifiable method\">]: K extends keyof LensCoreModule\n        ? keyof SafeOmit<Parameters<LensCoreModule[K]>[0], \"onSuccess\" | \"onFailure\"> extends never\n            ? () => Promise<FirstParameter<Parameters<LensCoreModule[K]>[0][\"onSuccess\"]>>\n            : (\n                  input: SafeOmit<Parameters<LensCoreModule[K]>[0], \"onSuccess\" | \"onFailure\">\n              ) => Promise<FirstParameter<Parameters<LensCoreModule[K]>[0][\"onSuccess\"]>>\n        : never;\n};\ntype PromisifiedParam<T extends { onSuccess?: DefaultEventHandler; onFailure?: DefaultErrorHandler }> = {\n    [P in keyof T as P extends \"onSuccess\" | \"onFailure\" ? never : P]: T[P];\n};\ntype MapParamErrorCallback<\n    T extends PropertiesOfKind<\"custom method\">,\n    U extends keyof LensCoreMethodFirstParam<T>\n> = MapErrorCallback<LensCoreMethodFirstParam<T>, U>;\ntype LensCoreMethodFirstParam<T extends PropertiesOfKind<\"custom method\">> = Parameters<LensCoreModule[T]>[0];\ntype MapErrorCallback<T, U extends keyof T> = { [P in keyof T]: P extends U ? (err: LensCoreError) => void : T[P] };\n\n// By using PropertiesOfKind, we can ensure a compile-time error if LensCoreModule adds a new async method,\n// but we forget to update this list.\nconst promisifiableMethods: { [K in PropertiesOfKind<\"promisifiable method\">]: null } = {\n    addLens: null,\n    clearAllLenses: null,\n    imageToYuvBuffer: null,\n    pauseCanvas: null,\n    processAudioSampleBuffer: null,\n    processFrame: null,\n    removeLens: null,\n    replaceLenses: null,\n    setAudioParameters: null,\n    setDeviceClass: null,\n    setFPSLimit: null,\n    setInputTransform: null,\n    setOnFrameProcessedCallback: null,\n    setRenderLoopMode: null,\n    setRenderSize: null,\n    teardown: null,\n    useMediaElement: null,\n    yuvBufferToBitmap: null,\n};\n\nexport type LensCore = LensCoreEnums & LensCoreSyncMethods & LensCorePromisifiedMethods & LensCoreCustomMethods;\n\nexport const createLensCore = (lensCoreModule: LensCoreModule): LensCore => {\n    const customMethods: LensCoreCustomMethods = {\n        initialize(input) {\n            return new Promise((onSuccess, onFailure) =>\n                lensCoreModule.initialize({\n                    ...input,\n                    exceptionHandler: input.exceptionHandler && wrapLensCoreError(input.exceptionHandler),\n                    onSuccess,\n                    onFailure: wrapLensCoreError(onFailure),\n                })\n            );\n        },\n\n        provideRemoteAssetsResponse(input) {\n            return lensCoreModule.provideRemoteAssetsResponse({\n                ...input,\n                onFailure: input.onFailure && wrapLensCoreError(input.onFailure),\n            });\n        },\n\n        playCanvas(input) {\n            return new Promise((onReady, onFailure) => {\n                lensCoreModule.playCanvas({\n                    ...input,\n                    onReady,\n                    onFailure,\n                });\n            });\n        },\n    };\n\n    return new Proxy(lensCoreModule, {\n        get: (target, property, receiver) => {\n            // Handle special methods with custom implementations\n            if (property in customMethods) {\n                // Safety: \"in\" operator above ensures that property is keyof LensCoreCustomMethods\n                return customMethods[property as keyof LensCoreCustomMethods];\n            }\n\n            // All other async methods return Promises\n            if (property in promisifiableMethods) {\n                const method = Reflect.get(target, property, receiver);\n                if (!method) method;\n                return (input: Parameters<LensCorePromisifiedMethods[keyof LensCorePromisifiedMethods]>[0]) =>\n                    new Promise((onSuccess, onFailure) =>\n                        method({\n                            ...input,\n                            onSuccess,\n                            onFailure: wrapLensCoreError(onFailure),\n                        })\n                    );\n            }\n\n            // All other kinds of properties (enums, sync methods) are unmodified.\n            return Reflect.get(target, property, receiver);\n        },\n        // Safety: We ensured safety by defining types for both custom and promisifiable methods.\n    }) as LensCore;\n};\n","import lensCoreWasm from \"../../lensCoreWasmVersions.json\";\nimport { loadScript } from \"../../common\";\nimport { CameraKitConfiguration, configurationToken } from \"../../configuration\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { InitialEmscriptenModule, LensCoreModule } from \"../generated-types\";\nimport { getLogger } from \"../../logger/logger\";\nimport { WasmFeatures, getPlatformCapabilities } from \"../../platform/platformCapabilities\";\nimport { getPlatformInfo } from \"../../platform/platformInfo\";\nimport { createLensCore } from \"../lensCore\";\n\nconst logger = getLogger(\"lensCoreFactory\");\n\nconst wasmAssets = [\"LensCoreWebAssembly.js\", \"LensCoreWebAssembly.wasm\"];\n\nconst findMatch = (regex: RegExp, strings: string[]) => strings.find((s) => regex.test(s));\n\n/**\n * Map various combinations of WebAssembly capabilities to the corresponding LensCore build flavours which make use\n * of them.\n */\nconst wasmCapabilitiesToLensCoreBuildFlavor = {\n    [WasmFeatures.Default]: \"release\",\n    [WasmFeatures.ExceptionHandling]: \"rel-neh\",\n    [WasmFeatures.SIMD]: \"release-simd\",\n    [WasmFeatures.ExceptionHandling | WasmFeatures.SIMD]: \"rel-simd-neh\",\n};\n\n/**\n * Returns a list of URLs for resources which will be fetched during {@link bootstrapCameraKit}.\n *\n * When CameraKit is used on a website, these URLs much be reachable in order for CameraKit to be successfully\n * bootstrapped.\n *\n * @param endpointOverride Optional endpoint override to load the assets from.\n * @returns An array of asset URLs.\n *\n * @category Bootstrapping and Configuration\n */\nexport async function getRequiredBootstrapURLs(endpointOverride?: string): Promise<string[]> {\n    // If we have an endpoint override, remove trailing `/` so we can construct a valid URL.\n    const endpoint = endpointOverride?.replace(/[\\/]+$/, \"\");\n\n    const { wasm } = await getPlatformCapabilities();\n    if (!wasm.supported) throw wasm.error;\n\n    const { lensCore } = getPlatformInfo();\n    const flavor = wasmCapabilitiesToLensCoreBuildFlavor[wasm.wasmFeatures];\n    if (!flavor)\n        throw new Error(\n            `Could not determine a LensCore build flavor corresponding to the bitstring ` +\n                `${wasm.wasmFeatures.toString(2)}. CameraKit cannot be bootstrapped.`\n        );\n    const version = lensCore.version;\n    const buildNumber = lensCore.buildNumber;\n    return wasmAssets.map((asset) => {\n        if (endpoint) return `${endpoint}/${asset}`;\n        const { origin, pathname, search } = new URL(lensCore.baseUrl);\n        return `${origin}${pathname}/${version}/${buildNumber}/${flavor}/${asset}${search}`;\n    });\n}\n\n/**\n * This component is responsible for:\n *   1) Loading LensCore WebAssembly (WASM) assets\n *   2) Using the WASM assets to initialize the LensCore WASM module\n *\n * By default, WASM assets will be loaded from the Bolt CDN – but if `endpoint` is provided, assets will be loaded\n * using it as a base URL.\n *\n * @internal\n */\nexport const lensCoreFactory = Injectable(\n    \"lensCore\",\n    [defaultFetchHandlerFactory.token, configurationToken] as const,\n    async (handler: FetchHandler, { lensCoreOverrideUrls, wasmEndpointOverride }: CameraKitConfiguration) => {\n        let lensCoreJS: string;\n        let lensCoreWASM: string;\n\n        if (lensCoreOverrideUrls) {\n            lensCoreJS = lensCoreOverrideUrls.js;\n            lensCoreWASM = lensCoreOverrideUrls.wasm;\n        } else {\n            const endpointOverride = wasmEndpointOverride ?? undefined;\n            const assetURLs = await getRequiredBootstrapURLs(endpointOverride);\n\n            lensCoreJS = findMatch(/\\.js/, assetURLs) ?? \"\";\n            lensCoreWASM = findMatch(/\\.wasm/, assetURLs) ?? \"\";\n\n            if (!lensCoreJS || !lensCoreWASM) {\n                throw new Error(\n                    `Cannot fetch required LensCore assets. Either the JS or WASM filename is missing from ` +\n                        `this list: ${assetURLs}.`\n                );\n            }\n\n            // Fetching here and creating an Object URL lets LensCore optimized loading itself in a WebWorker,\n            // otherwise the glue script would need to be downloaded again.\n            const glueScript = await handler(lensCoreJS).then((r) => r.blob());\n            lensCoreJS = URL.createObjectURL(glueScript);\n        }\n\n        const scriptElement = await loadScript(lensCoreJS);\n\n        const lensCore = await new Promise<InitialEmscriptenModule & LensCoreModule>((resolve, reject) => {\n            let initialModule: Partial<InitialEmscriptenModule>;\n            // will trigger WASM initialization and data loading,\n            // after completion it will be safe to call imported WASM functions\n            // More about emscripten initialization:\n            // eslint-disable-next-line max-len\n            // https://emscripten.org/docs/getting_started/FAQ.html?highlight=modularize#how-can-i-tell-when-the-page-is-fully-loaded-and-it-is-safe-to-call-compiled-functions\n            const moduleInit = globalThis.createLensesModule(\n                (initialModule = {\n                    // url will be used for loading glue JS during Worker inialization\n                    mainScriptUrlOrBlob: lensCoreJS,\n                    // will be triggered by Emscripten during the initialization\n                    instantiateWasm: (importObject, receiveInstance) => {\n                        WebAssembly.instantiateStreaming(handler(lensCoreWASM), importObject)\n                            .then(function ({ instance, module }) {\n                                receiveInstance(instance, module);\n                                // compiled module will be reused in Worker\n                                initialModule.compiledModule = module;\n                                resolve(moduleInit);\n                            })\n                            .catch(reject);\n                    },\n                })\n            );\n        });\n\n        // now when we have LensCore WASM in memory we can release the script element\n        scriptElement.remove();\n\n        // print warning if loaded version differs from hardcoded one\n        if (lensCoreWasm.version != `${lensCore.getCoreVersion()}`) {\n            logger.warn(\n                `Loaded LensCore version (${lensCore.getCoreVersion()}) differs from expected one (${\n                    lensCoreWasm.version\n                })`\n            );\n        }\n\n        return createLensCore(lensCore);\n    }\n);\n","import { webGLError } from \"../namedErrors\";\n\nconst webGLEntityCreationError = (name: string) => webGLError(`Could not create ${name}.`);\n\nexport function createProgram(gl: WebGL2RenderingContext, vertexSource: string, fragmentSource: string): WebGLProgram {\n    const vertexShader = createShader(gl, vertexSource, gl.VERTEX_SHADER);\n    const fragmentShader = createShader(gl, fragmentSource, gl.FRAGMENT_SHADER);\n    const program = gl.createProgram();\n    if (!program) throw webGLEntityCreationError(\"WebGLProgram\");\n    gl.attachShader(program, vertexShader);\n    gl.deleteShader(vertexShader);\n\n    gl.attachShader(program, fragmentShader);\n    gl.deleteShader(fragmentShader);\n\n    gl.linkProgram(program);\n\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!success) {\n        const message = gl.getProgramInfoLog(program);\n        gl.deleteProgram(program);\n        throw webGLError(`WebGLProgram linking failed with status: ${message}.`);\n    }\n\n    return program;\n}\n\nexport function createShader(gl: WebGL2RenderingContext, source: string, type: number): WebGLShader {\n    const shader = gl.createShader(type);\n    if (!shader) throw webGLEntityCreationError(`WebGLShader (type ${type})`);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!success) {\n        const message = gl.getShaderInfoLog(shader);\n        gl.deleteShader(shader);\n        throw webGLError(`WebGLShader (type ${type}) compilation failed with status: ${message}.`);\n    }\n    return shader;\n}\n\nexport function createTexture(gl: WebGL2RenderingContext, width: number, height: number): WebGLTexture {\n    const texture = gl.createTexture();\n    if (!texture) throw webGLEntityCreationError(\"WebGLTexture\");\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    return texture;\n}\n\nexport function createFramebuffer(gl: WebGL2RenderingContext, texture: WebGLTexture): WebGLFramebuffer {\n    const framebuffer = gl.createFramebuffer();\n    if (!framebuffer) throw webGLEntityCreationError(\"WebGLFramebuffer\");\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    return framebuffer;\n}\n\nexport function setUniform1i(gl: WebGL2RenderingContext, program: WebGLProgram, name: string, data: number): void {\n    gl.uniform1i(gl.getUniformLocation(program, name), data);\n}\n\nexport function setUniform4f(\n    gl: WebGL2RenderingContext,\n    program: WebGLProgram,\n    name: string,\n    data: [number, number, number, number]\n): void {\n    gl.uniform4f(gl.getUniformLocation(program, name), ...data);\n}\n\nexport function promiseSync(gl: WebGL2RenderingContext): Promise<void> {\n    const sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    if (!sync) throw webGLEntityCreationError(\"WebGLSync\");\n    gl.flush();\n    return new Promise((resolve, reject) => {\n        const waitForSync = (): void => {\n            const glEnum = gl.clientWaitSync(sync, 0, 0);\n            switch (glEnum) {\n                case gl.TIMEOUT_EXPIRED:\n                    setTimeout(waitForSync);\n                    return;\n                case gl.WAIT_FAILED:\n                    gl.deleteSync(sync);\n                    return reject();\n                case gl.ALREADY_SIGNALED:\n                case gl.CONDITION_SATISFIED:\n                    gl.deleteSync(sync);\n                    return resolve();\n            }\n        };\n        waitForSync();\n    });\n}\n","import { BenchmarkResult, LensPerformanceCluster } from \"./estimateLensPerformanceCluster\";\nimport { createFramebuffer, createProgram, createTexture, promiseSync, setUniform1i, setUniform4f } from \"./webglUtils\";\n\nconst vertexSource = `#version 300 es\n\nprecision mediump float;\nprecision mediump int;\n\nin vec2 pos;\n\nvoid main() {\n    gl_Position = vec4(pos, 0.0, 1.0);\n}\n`;\n\nconst fragmentSource = `#version 300 es\n\nprecision mediump float;\nprecision mediump int;\n\nuniform int LOOP_COUNT;\nuniform vec4 v0;\nuniform vec4 v1;\nuniform vec4 v2;\n\nout vec4 fragColor;\n\n#define REPEAT_2(x) x; x\n#define REPEAT_4(x) REPEAT_2(x); REPEAT_2(x)\n#define REPEAT_8(x) REPEAT_4(x); REPEAT_4(x)\n#define REPEAT_16(x) REPEAT_8(x); REPEAT_8(x)\n#define REPEAT_32(x) REPEAT_16(x); REPEAT_16(x)\n\nvoid main() {\n    vec4 r = v2;\n    for (int i = 0; i < LOOP_COUNT; i++) {\n        REPEAT_32(r = r * v1 + v0);\n    }\n    fragColor = r;\n}\n`;\n\nconst width = 1024;\nconst height = 1024;\nconst budgetMs = 300;\nconst maxLoopCount = 1000;\n\nfunction prepareBenchmark(gl: WebGL2RenderingContext): { program: WebGLProgram; cleanupBenchmark: () => void } {\n    const texture = createTexture(gl, width, height);\n    const framebuffer = createFramebuffer(gl, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n        throw new Error(\"Failed to create WebGLBuffer.\");\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, 1, -1, -1, 1, -1, 1, 1]), gl.STATIC_DRAW);\n\n    gl.viewport(0, 0, width, height);\n    gl.disable(gl.CULL_FACE);\n    gl.disable(gl.DEPTH_TEST);\n\n    const program = createProgram(gl, vertexSource, fragmentSource);\n    gl.useProgram(program);\n\n    const posLocation = gl.getAttribLocation(program, \"pos\");\n    gl.enableVertexAttribArray(posLocation);\n    gl.vertexAttribPointer(posLocation, 2, gl.FLOAT, false, 0, 0);\n\n    setUniform4f(gl, program, \"v0\", [1.15, 1.23, 1.47, 1.84]);\n    setUniform4f(gl, program, \"v1\", [1.65, 1.22, 1.69, 1.04]);\n    setUniform4f(gl, program, \"v2\", [1.05, 1.3, 1.55, 1.23]);\n\n    return {\n        program,\n        cleanupBenchmark: () => {\n            gl.deleteProgram(program);\n            gl.deleteBuffer(buffer);\n            gl.deleteFramebuffer(framebuffer);\n            gl.deleteTexture(texture);\n        },\n    };\n}\n\nasync function runBenchmark(gl: WebGL2RenderingContext, program: WebGLProgram): Promise<number> {\n    await promiseSync(gl);\n\n    const start = performance.now();\n    const flops: number[] = [];\n\n    let loopCount = 20;\n    while (true) {\n        setUniform1i(gl, program, \"LOOP_COUNT\", loopCount);\n\n        const iterationStart = performance.now();\n\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n        await promiseSync(gl);\n\n        const iterationEnd = performance.now();\n        const duration = iterationEnd - iterationStart;\n        flops.push(loopCount / duration);\n\n        const remainingBudgetMs = budgetMs - (iterationEnd - start);\n        if (remainingBudgetMs < 0) break;\n\n        if (loopCount < maxLoopCount) {\n            loopCount += remainingBudgetMs < duration ? 10 : (0.6 * loopCount * remainingBudgetMs) / duration;\n        }\n    }\n\n    const maxFlops = Math.max(...flops) * (8 * 32) * width * height;\n    return maxFlops / 1e6;\n}\n\n/**\n * These are obtained from historical performance data gathered from end-user devices. Keys are gflops, values are the\n * corresponding performance rating.\n *\n * To compute the performance rating given a gflops value, find the nearest key in this map and look up the rating.\n */\nexport const gflopsClusterCenters = new Map<number, LensPerformanceCluster>([\n    [34, 1],\n    [134, 2],\n    [385, 3],\n    [783, 4],\n    [1484, 5],\n    [2313, 6],\n]);\n\n/**\n * This benchmark is the same that's run on non-web (e.g. native mobile) platforms, and produces results that can be\n * compared to those gathered on those platforms – this allows us to cluster results and determine a performance rating\n * based on historical data gathered elsewhere.\n *\n * @internal\n */\nexport async function benchmarkGflops(gl: WebGL2RenderingContext): Promise<BenchmarkResult> {\n    const { program, cleanupBenchmark } = prepareBenchmark(gl);\n    const gflops = await runBenchmark(gl, program);\n    cleanupBenchmark();\n    return { name: \"gflops\", value: gflops };\n}\n","import { benchmarkError } from \"../namedErrors\";\nimport { gflopsClusterCenters, benchmarkGflops } from \"./benchmarkGflops\";\n\nconst findNearest = (n: number, arr: number[]) => arr.reduce((a, b) => (Math.abs(a - n) <= Math.abs(b - n) ? a : b));\n\nconst webglContextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    antialias: false,\n    premultipliedAlpha: false,\n    preserveDrawingBuffer: false,\n    depth: false,\n    stencil: false,\n    failIfMajorPerformanceCaveat: false,\n    powerPreference: \"high-performance\",\n};\n\n/** @category Bootstrapping and Configuration */\nexport type LensPerformanceCluster = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n/** @internal */\nexport type BenchmarkResult = { name: string; value: number };\n\n/**\n * Some lenses may decide to modify their behavior based on the performance of the current environment. If you are\n * using such lenses, providing an estimation of lens performance may lead to better user experience (especially on\n * low-performance devices).\n *\n * The cluster value will be an integer from 1-6 which classifies expected lens performance, where 6 is the highest-\n * performing cluster and 1 the lowest.\n *\n * All the raw benchmark results used to estimate the performance cluster are also included for reporting purposes.\n *\n * @category Bootstrapping and Configuration\n */\nexport interface EstimatedLensPerformance {\n    cluster: LensPerformanceCluster;\n    benchmarks: BenchmarkResult[];\n    webglRendererInfo: string;\n}\n\n/**\n * Run benchmarks which attempt to predict expected lens performance, and assign a cluster (i.e. a performance rating)\n * which the CameraKit SDK can use to optimize certain lenses.\n *\n * @returns A rating from 1-6, indicating expected Lens performance.\n *\n * @category Bootstrapping and Configuration\n */\nexport async function estimateLensPerformance(): Promise<EstimatedLensPerformance> {\n    // Prepare performance measurement.\n    const canvas = document.createElement(\"canvas\");\n    const gl = canvas.getContext(\"webgl2\", webglContextAttributes);\n    if (!gl) throw benchmarkError(\"WebGL2 is required to compute performance, but it is not supported.\");\n\n    const debugInfo = gl.getExtension(\"WEBGL_debug_renderer_info\");\n    const webglRendererInfo = debugInfo ? (gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL) as string) : \"unknown\";\n\n    // Measure performance (just GFLOPS for now, but could add more benchmarks in the future).\n    const gflops = await benchmarkGflops(gl);\n\n    // Combine performance results and compute a performance rating. Right now we just run a single benchmark, so this\n    // is pretty trivial.\n    const nearestGflopsClusterCenter = findNearest(gflops.value, Array.from(gflopsClusterCenters.keys()));\n\n    // This should always find a value, but just in case something strange happens inside `findNearest`, we'll default\n    // to zero (instead of asserting .get() will always be defined).\n    const gflopsCluster = gflopsClusterCenters.get(nearestGflopsClusterCenter) ?? 0;\n\n    return {\n        cluster: gflopsCluster,\n        benchmarks: [gflops],\n        webglRendererInfo,\n    };\n}\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process[\"env\" + \"\"] && process[\"env\" + \"\"][\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","import \"reflect-metadata\";\nimport { Guard } from \"./typeguards\";\n\nconst predicateMetadataKey = Symbol(\"validate\");\n\n// A map of primitive types accoring to\n/* eslint-disable max-len */\n// http://blog.wolksoftware.com/decorators-metadata-reflection-in-typescript-from-novice-to-expert-part-4#3-basic-type-serialization_1\nconst primitiveMap: Record<string, StringConstructor | NumberConstructor | BooleanConstructor> = {\n    string: String,\n    number: Number,\n    boolean: Boolean,\n};\n\nconst ordinalSuffixMap: Record<number, string> = {\n    1: \"st\",\n    2: \"nd\",\n    3: \"rd\",\n};\n\nfunction getArgumentInfo(target: Object, methodName: string | symbol, argumentIndex: number, arg: unknown) {\n    let argString;\n    try {\n        argString = JSON.stringify(arg);\n    } catch {\n        argString = String(arg);\n    }\n    return {\n        argPosition: `${argumentIndex + 1}${ordinalSuffixMap[argumentIndex + 1] ?? \"th\"}`,\n        methodPath: `${getTypeName(target)}.${String(methodName)}()`,\n        argTypeName: getTypeName(arg),\n        argString,\n    };\n}\n\nexport function guard<T>(predicate: Guard<T>) {\n    return (target: Object, propertyKey: string | symbol, parameterIndex: number) => {\n        let existingPredicates: Array<Guard<any>> =\n            Reflect.getOwnMetadata(predicateMetadataKey, target, propertyKey) || [];\n        existingPredicates[parameterIndex] = predicate;\n        Reflect.defineMetadata(predicateMetadataKey, existingPredicates, target, propertyKey);\n    };\n}\n\nexport function validate(target: Object, key: string | symbol, descriptor: PropertyDescriptor): void {\n    const method = descriptor.value!;\n    const types = Reflect.getMetadata(\"design:paramtypes\", target, key);\n    const predicates = Reflect.getMetadata(predicateMetadataKey, target, key);\n    descriptor.value = function (...args: unknown[]) {\n        for (const [i, type] of types.entries()) {\n            let arg = Array.isArray(args) && args[i];\n\n            if (!!predicates && predicates[i] && !predicates[i](arg)) {\n                const { methodPath, argPosition, argString } = getArgumentInfo(target, key, i, arg);\n                throw new Error(\n                    `The ${argPosition} argument to ${methodPath} method has an invalid value: ${argString}.`\n                );\n            }\n            if (arg === undefined || arg === null) {\n                // TODO: is there a way to check for nullable parameter?\n                break;\n            }\n            if (!isValueOfType(arg, type)) {\n                const { methodPath, argPosition, argTypeName } = getArgumentInfo(target, key, i, arg);\n                throw new Error(\n                    `The ${argPosition} argument to ${methodPath} method is of type ` +\n                        `${argTypeName}, which is not assignable to parameter of type ${type.name}.`\n                );\n            }\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * Checks whether given value is assignable to provided type.\n */\nexport function isValueOfType(value: unknown, type: any) {\n    if (value instanceof type) {\n        return true;\n    }\n    // test for primitive value\n    const isPrimitive = value !== Object(value);\n    return isPrimitive && primitiveMap[typeof value] === type;\n}\n\n/* eslint-disable max-len */\n/**\n * Returns type string of a value. It mostly mimics the behavior of typeof, but for non-primitives\n * (i.e. objects and functions), it returns a more granular type name where possible. Source:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof#custom_method_that_gets_a_more_specific_type\n */\nexport function getTypeName(value: unknown): string {\n    if (value === null) {\n        return \"null\";\n    }\n\n    const baseType = typeof value;\n    // Primitive types\n    if (![\"object\", \"function\"].includes(baseType)) {\n        return baseType;\n    }\n\n    // Safety: at this point null and undefined values are already handled\n    const nonNullValue = value!;\n\n    // Symbol.toStringTag often specifies the \"display name\" of the\n    // object's class. It's used in Object.prototype.toString().\n    // Safety: cast to an object with Symbol.toStringTag key in order to check for its existance.\n    const tag = (nonNullValue as { [Symbol.toStringTag]?: string })[Symbol.toStringTag];\n    if (typeof tag === \"string\") {\n        return tag;\n    }\n\n    // If it's a function whose source code starts with the \"class\" keyword\n    if (baseType === \"function\" && Function.prototype.toString.call(nonNullValue).startsWith(\"class\")) {\n        return \"class\";\n    }\n\n    // The name of the constructor; for example `Array`, `GeneratorFunction`,\n    // `Number`, `String`, `Boolean` or `MyCustomClass`\n    const className = nonNullValue.constructor.name;\n    if (typeof className === \"string\" && className !== \"\") {\n        return className;\n    }\n\n    // At this point there's no robust way to get the type of value,\n    // so we use the base implementation.\n    return baseType;\n}\n","/**\n * Returns a stack trace for a given error, and also appends the stack trace of any nested error, if one exists.\n * @param error Error to stringify.\n * @returns Error stack trace.\n */\nexport function stringifyError(error: Error): string {\n    const outer = error.stack ?? \"\";\n    return error.cause ? `${outer}\\nCaused by:\\n\\t${stringifyError(ensureError(error.cause))}` : outer;\n}\n\n/**\n * If given a value of type Error, return it – otherwise wrap the value in an Error.\n */\nexport function ensureError(error: unknown): Error {\n    if (error instanceof Error) return error;\n\n    try {\n        return new Error(`Non-Error type exception thrown. Serialized error value: ${JSON.stringify(error)}`);\n    } catch (_) {\n        return new Error(\"Non-Error type exception thrown. Original error value could not be serialized.\");\n    }\n}\n","export const getTimeMs = () => performance.now();\n\nexport const convertDaysToSeconds = (days: number) => days * 24 * 60 * 60;\n","export type EventOfType<K extends string, Event extends TypedCustomEvent> = Extract<Event, TypedCustomEvent<K, any>>;\n\n/**\n * This wrapper around CustomEvent provides more descriptive type information. By using this class, the `type` property\n * of the CustomEvent will be typed as a string literal – this allows [TypedEventTarget] to provide more useful type\n * checking of events.\n */\nexport class TypedCustomEvent<N extends string = string, T = any> extends CustomEvent<T> {\n    // @ts-ignore: The compiler complains that this property \"has no initializer and is not definitely set in the\n    // constructor\" – we must rely on the superclass constructor to set this, because CustomEvent only implements a\n    // getter for type, so if we try to do `this.type = type` we get a runtime error. We do need to re-define type,\n    // though, so we can give it the specific type N instead of the less-useful string type defined by the superclass.\n    readonly type: N;\n    constructor(type: N, detail: T, eventInitDict: Omit<CustomEventInit<T>, \"detail\"> = {}) {\n        super(type, { ...eventInitDict, detail });\n    }\n}\n","import { EventOfType, TypedCustomEvent } from \"./TypedCustomEvent\";\n\nexport type TypedEventListener<Event extends TypedCustomEvent> = (evt: Event) => void;\n\nexport interface TypedEventListenerOptions {\n    once?: boolean;\n}\n\n/**\n * Extract the generic Events type (which must extend {@link TypedCustomEvent}) from a {@link TypedEventTarget}\n */\nexport type EventsFromTarget<Target extends TypedEventTarget> = Target extends TypedEventTarget<infer Events>\n    ? Events\n    : never;\n\n/**\n * This wrapper around EventTarget provides more descriptive type information. By using this class, calls to EventTarget\n * methods are correctly type checked to ensure only allowed event types are used, and that events and their type\n * strings are correctly associated.\n *\n * For example, when calling TypedEventTarget::addEventListener, the event passed to the callback will have the correct\n * type corresponding to the type of event for which the listener has been added.\n */\nexport class TypedEventTarget<Events extends TypedCustomEvent = TypedCustomEvent> {\n    private readonly listeners: Map<string, TypedEventListener<TypedCustomEvent>[]>;\n    private readonly options: Map<TypedEventListener<TypedCustomEvent>, TypedEventListenerOptions>;\n\n    constructor() {\n        this.listeners = new Map();\n        this.options = new Map();\n    }\n\n    addEventListener<K extends Events[\"type\"]>(\n        type: K,\n        callback: TypedEventListener<EventOfType<K, Events>>,\n        options?: TypedEventListenerOptions\n    ): void {\n        // Safety: the type in the method signature ensures the callback handles events of type K, and we use that type\n        // as the key when storing the callback – we only ever invoke callbacks obtained by mapping from that event\n        // type to the callback, so even though we store the callback with a wider type, we only ever call it with the\n        // specific event type specified by K.\n        const listener = callback as TypedEventListener<TypedCustomEvent>;\n        const listeners = this.listeners.get(type) ?? [];\n        this.listeners.set(type, [...listeners, listener]);\n        if (options) this.options.set(listener, options);\n    }\n\n    dispatchEvent(event: Events): true {\n        const listeners = this.listeners.get(event.type);\n        if (!listeners) return true;\n\n        listeners.forEach((listener) => {\n            const options = this.options.get(listener) ?? {};\n            try {\n                listener(event);\n            } catch (error) {\n                // We'll do our best to immitate native behavior, where if a listener throws an error it is caught and\n                // emitted as an error event on the window – this might be slightly different from native behavior since\n                // we have to use a CustomEvent, but it's as close as we can get.\n                if (window) window.dispatchEvent(new CustomEvent(\"error\", { detail: error }));\n            }\n            if (options.once) this.removeEventListener(event.type, listener);\n        });\n\n        return true;\n    }\n\n    removeEventListener<K extends Events[\"type\"]>(type: K, callback: TypedEventListener<EventOfType<K, Events>>): void {\n        const listener = callback as TypedEventListener<TypedCustomEvent>;\n        const listeners = this.listeners.get(type);\n        if (!listeners) return;\n        this.listeners.set(\n            type,\n            listeners.filter((l) => l !== listener)\n        );\n        this.options.delete(listener);\n    }\n}\n","import { ensureError } from \"../common/errorHelpers\";\nimport { getTimeMs } from \"../common/time\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { TypedEventTarget } from \"../events/TypedEventTarget\";\nimport { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\n\nlet requestId = 0;\nconst safeParseInt = (str: string | null) => {\n    if (str == null) return 0;\n    const maybeInt = parseInt(str);\n    return isNaN(maybeInt) ? 0 : maybeInt;\n};\n\ninterface Started {\n    requestId: number;\n    timeMs: number;\n    dimensions: Dimensions;\n}\n\ninterface Completed {\n    requestId: number;\n    timeMs: number;\n    dimensions: Dimensions;\n    status: number;\n    sizeByte: number;\n}\n\ninterface Errored {\n    requestId: number;\n    timeMs: number;\n    dimensions: Dimensions;\n    error: Error;\n}\n\nexport type Dimensions = Record<string, string | undefined>;\n\nexport type RequestStateEvents =\n    | TypedCustomEvent<\"started\", Started>\n    | TypedCustomEvent<\"completed\", Completed>\n    | TypedCustomEvent<\"errored\", Errored>;\n\nexport const dispatchRequestStarted = (\n    requestStateEventTarget: RequestStateEventTarget,\n    data: Omit<Started, \"requestId\" | \"timeMs\">\n): Started => {\n    const started: Started = { ...data, requestId: requestId++, timeMs: getTimeMs() };\n    requestStateEventTarget.dispatchEvent(new TypedCustomEvent(\"started\", started));\n    return started;\n};\n\nexport const dispatchRequestCompleted = (\n    requestStateEventTarget: RequestStateEventTarget,\n    data: Omit<Completed, \"timeMs\">\n): Completed => {\n    const completed: Completed = { ...data, timeMs: getTimeMs() };\n    requestStateEventTarget.dispatchEvent(new TypedCustomEvent(\"completed\", completed));\n    return completed;\n};\n\nexport const dispatchRequestErrored = (\n    requestStateEventTarget: RequestStateEventTarget,\n    data: Omit<Errored, \"timeMs\">\n): Errored => {\n    const errored: Errored = { ...data, timeMs: getTimeMs() };\n    requestStateEventTarget.dispatchEvent(new TypedCustomEvent(\"errored\", errored));\n    return errored;\n};\n\nexport const createRequestStateEmittingHandler =\n    <D extends Dimensions = Dimensions>(\n        requestStateEventTarget: RequestStateEventTarget\n    ): ChainableHandler<[RequestInfo, D], Response, RequestInfo, Response, RequestMetadata> =>\n    (next) =>\n    async ([request, dimensions], metadata) => {\n        const { requestId } = dispatchRequestStarted(requestStateEventTarget, { dimensions });\n        try {\n            const response = await next(request, metadata);\n            const status = response.status;\n            const sizeByte = safeParseInt(response.headers.get(\"content-length\"));\n            dispatchRequestCompleted(requestStateEventTarget, { requestId, dimensions, status, sizeByte });\n            return response;\n        } catch (error) {\n            dispatchRequestErrored(requestStateEventTarget, { requestId, dimensions, error: ensureError(error) });\n            throw error;\n        }\n    };\n\n/**\n * This event target may be used to listen for any network request state changes initiated by CameraKit.\n *\n * @internal\n */\nexport type RequestStateEventTarget = TypedEventTarget<RequestStateEvents>;\n\n/**\n * @internal\n */\nexport const requestStateEventTargetFactory = Injectable(\n    \"requestStateEventTarget\",\n    (): RequestStateEventTarget => new TypedEventTarget()\n);\n","import { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\n\ntype ArrayBufferResponse = [ArrayBuffer, Response];\ntype ChainableArrayBufferHandler<Req, Meta extends RequestMetadata> = ChainableHandler<\n    Req,\n    ArrayBufferResponse,\n    Req,\n    Response,\n    Meta\n>;\n\n/**\n * Parse a Fetch Response body into an ArrayBuffer.\n *\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createArrayBufferParsingHandler =\n    <Req, Meta extends RequestMetadata>(): ChainableArrayBufferHandler<Req, Meta> =>\n    (next) =>\n    async (req, metadata) => {\n        const response = await next(req, metadata);\n        let buffer: ArrayBuffer;\n        try {\n            buffer = await response.arrayBuffer();\n        } catch (_) {\n            buffer = new ArrayBuffer(0);\n        }\n        return [buffer, response];\n    };\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nexport interface Any {\n    typeUrl: string;\n    value: Uint8Array;\n}\nfunction createBaseAny(): Any {\n    return { typeUrl: \"\", value: new Uint8Array() };\n}\nexport const Any = {\n    encode(message: Any, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Any {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAny();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Any {\n        return {\n            typeUrl: isSet(object.typeUrl) ? String(object.typeUrl) : \"\",\n            value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(),\n        };\n    },\n    toJSON(message: Any): unknown {\n        const obj: any = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Any>, I>>(object: I): Any {\n        const message = createBaseAny();\n        message.typeUrl = object.typeUrl ?? \"\";\n        message.value = object.value ?? new Uint8Array();\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob: (b64: string) => string = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa: (bin: string) => string = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n    const bin: string[] = [];\n    for (const byte of arr) {\n        bin.push(String.fromCharCode(byte));\n    }\n    return btoa(bin.join(\"\"));\n}\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Any } from \"../../google/protobuf/any\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport interface Lens {\n    id: string;\n    name: string;\n    vendorData: {\n        [key: string]: string;\n    };\n    content: Content | undefined;\n    isThirdParty: boolean;\n    cameraFacingPreference: Lens_CameraFacing;\n    featureMetadata: Any[];\n    lensCreator: LensCreator | undefined;\n    scannable: Scannable | undefined;\n}\nexport enum Lens_CameraFacing {\n    CAMERA_FACING_UNSET = 0,\n    CAMERA_FACING_FRONT = 1,\n    CAMERA_FACING_BACK = 2,\n    UNRECOGNIZED = -1\n}\nexport function lens_CameraFacingFromJSON(object: any): Lens_CameraFacing {\n    switch (object) {\n        case 0:\n        case \"CAMERA_FACING_UNSET\":\n            return Lens_CameraFacing.CAMERA_FACING_UNSET;\n        case 1:\n        case \"CAMERA_FACING_FRONT\":\n            return Lens_CameraFacing.CAMERA_FACING_FRONT;\n        case 2:\n        case \"CAMERA_FACING_BACK\":\n            return Lens_CameraFacing.CAMERA_FACING_BACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Lens_CameraFacing.UNRECOGNIZED;\n    }\n}\nexport function lens_CameraFacingToJSON(object: Lens_CameraFacing): string {\n    switch (object) {\n        case Lens_CameraFacing.CAMERA_FACING_UNSET:\n            return \"CAMERA_FACING_UNSET\";\n        case Lens_CameraFacing.CAMERA_FACING_FRONT:\n            return \"CAMERA_FACING_FRONT\";\n        case Lens_CameraFacing.CAMERA_FACING_BACK:\n            return \"CAMERA_FACING_BACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport interface Lens_VendorDataEntry {\n    key: string;\n    value: string;\n}\nexport interface Content {\n    lnsUrl: string;\n    lnsSha256: string;\n    iconUrl: string;\n    preview: Preview | undefined;\n    assetManifest: LensAssetManifestItem[];\n    defaultHintId: string;\n    hintTranslations: {\n        [key: string]: string;\n    };\n    lnsUrlBolt: string;\n    iconUrlBolt: string;\n}\nexport interface Content_HintTranslationsEntry {\n    key: string;\n    value: string;\n}\nexport interface LensAssetManifestItem {\n    type: LensAssetManifestItem_Type;\n    id: string;\n    requestTiming: LensAssetManifestItem_RequestTiming;\n    assetUrl: string;\n    assetChecksum: string;\n}\nexport enum LensAssetManifestItem_Type {\n    DEVICE_DEPENDENT_ASSET_UNSET = 0,\n    ASSET = 1,\n    UNRECOGNIZED = -1\n}\nexport function lensAssetManifestItem_TypeFromJSON(object: any): LensAssetManifestItem_Type {\n    switch (object) {\n        case 0:\n        case \"DEVICE_DEPENDENT_ASSET_UNSET\":\n            return LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET;\n        case 1:\n        case \"ASSET\":\n            return LensAssetManifestItem_Type.ASSET;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LensAssetManifestItem_Type.UNRECOGNIZED;\n    }\n}\nexport function lensAssetManifestItem_TypeToJSON(object: LensAssetManifestItem_Type): string {\n    switch (object) {\n        case LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET:\n            return \"DEVICE_DEPENDENT_ASSET_UNSET\";\n        case LensAssetManifestItem_Type.ASSET:\n            return \"ASSET\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport enum LensAssetManifestItem_RequestTiming {\n    PRELOAD_UNSET = 0,\n    ON_DEMAND = 1,\n    REQUIRED = 2,\n    UNRECOGNIZED = -1\n}\nexport function lensAssetManifestItem_RequestTimingFromJSON(object: any): LensAssetManifestItem_RequestTiming {\n    switch (object) {\n        case 0:\n        case \"PRELOAD_UNSET\":\n            return LensAssetManifestItem_RequestTiming.PRELOAD_UNSET;\n        case 1:\n        case \"ON_DEMAND\":\n            return LensAssetManifestItem_RequestTiming.ON_DEMAND;\n        case 2:\n        case \"REQUIRED\":\n            return LensAssetManifestItem_RequestTiming.REQUIRED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LensAssetManifestItem_RequestTiming.UNRECOGNIZED;\n    }\n}\nexport function lensAssetManifestItem_RequestTimingToJSON(object: LensAssetManifestItem_RequestTiming): string {\n    switch (object) {\n        case LensAssetManifestItem_RequestTiming.PRELOAD_UNSET:\n            return \"PRELOAD_UNSET\";\n        case LensAssetManifestItem_RequestTiming.ON_DEMAND:\n            return \"ON_DEMAND\";\n        case LensAssetManifestItem_RequestTiming.REQUIRED:\n            return \"REQUIRED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport interface Preview {\n    imageUrl: string;\n    imageSequenceSize: number;\n    imageSequenceWebpUrlPattern: string;\n}\nexport interface LensCreator {\n    displayName: string;\n}\nexport interface Scannable {\n    snapcodeImageUrl: string;\n    snapcodeDeeplink: string;\n}\nfunction createBaseLens(): Lens {\n    return {\n        id: \"\",\n        name: \"\",\n        vendorData: {},\n        content: undefined,\n        isThirdParty: false,\n        cameraFacingPreference: 0,\n        featureMetadata: [],\n        lensCreator: undefined,\n        scannable: undefined,\n    };\n}\nexport const Lens = {\n    encode(message: Lens, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        Object.entries(message.vendorData).forEach(([key, value]) => {\n            Lens_VendorDataEntry.encode({ key: key as any, value }, writer.uint32(26).fork()).ldelim();\n        });\n        if (message.content !== undefined) {\n            Content.encode(message.content, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.isThirdParty === true) {\n            writer.uint32(40).bool(message.isThirdParty);\n        }\n        if (message.cameraFacingPreference !== 0) {\n            writer.uint32(48).int32(message.cameraFacingPreference);\n        }\n        for (const v of message.featureMetadata) {\n            Any.encode(v!, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.lensCreator !== undefined) {\n            LensCreator.encode(message.lensCreator, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.scannable !== undefined) {\n            Scannable.encode(message.scannable, writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Lens {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLens();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    const entry3 = Lens_VendorDataEntry.decode(reader, reader.uint32());\n                    if (entry3.value !== undefined) {\n                        message.vendorData[entry3.key] = entry3.value;\n                    }\n                    break;\n                case 4:\n                    message.content = Content.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.isThirdParty = reader.bool();\n                    break;\n                case 6:\n                    message.cameraFacingPreference = reader.int32() as any;\n                    break;\n                case 7:\n                    message.featureMetadata.push(Any.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.lensCreator = LensCreator.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.scannable = Scannable.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Lens {\n        return {\n            id: isSet(object.id) ? String(object.id) : \"\",\n            name: isSet(object.name) ? String(object.name) : \"\",\n            vendorData: isObject(object.vendorData)\n                ? Object.entries(object.vendorData).reduce<{\n                    [key: string]: string;\n                }>((acc, [key, value]) => {\n                    acc[key] = String(value);\n                    return acc;\n                }, {})\n                : {},\n            content: isSet(object.content) ? Content.fromJSON(object.content) : undefined,\n            isThirdParty: isSet(object.isThirdParty) ? Boolean(object.isThirdParty) : false,\n            cameraFacingPreference: isSet(object.cameraFacingPreference)\n                ? lens_CameraFacingFromJSON(object.cameraFacingPreference)\n                : 0,\n            featureMetadata: Array.isArray(object?.featureMetadata)\n                ? object.featureMetadata.map((e: any) => Any.fromJSON(e))\n                : [],\n            lensCreator: isSet(object.lensCreator) ? LensCreator.fromJSON(object.lensCreator) : undefined,\n            scannable: isSet(object.scannable) ? Scannable.fromJSON(object.scannable) : undefined,\n        };\n    },\n    toJSON(message: Lens): unknown {\n        const obj: any = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        obj.vendorData = {};\n        if (message.vendorData) {\n            Object.entries(message.vendorData).forEach(([k, v]) => {\n                obj.vendorData[k] = v;\n            });\n        }\n        message.content !== undefined && (obj.content = message.content ? Content.toJSON(message.content) : undefined);\n        message.isThirdParty !== undefined && (obj.isThirdParty = message.isThirdParty);\n        message.cameraFacingPreference !== undefined &&\n            (obj.cameraFacingPreference = lens_CameraFacingToJSON(message.cameraFacingPreference));\n        if (message.featureMetadata) {\n            obj.featureMetadata = message.featureMetadata.map((e) => (e ? Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.featureMetadata = [];\n        }\n        message.lensCreator !== undefined &&\n            (obj.lensCreator = message.lensCreator ? LensCreator.toJSON(message.lensCreator) : undefined);\n        message.scannable !== undefined &&\n            (obj.scannable = message.scannable ? Scannable.toJSON(message.scannable) : undefined);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Lens>, I>>(object: I): Lens {\n        const message = createBaseLens();\n        message.id = object.id ?? \"\";\n        message.name = object.name ?? \"\";\n        message.vendorData = Object.entries(object.vendorData ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.content =\n            object.content !== undefined && object.content !== null ? Content.fromPartial(object.content) : undefined;\n        message.isThirdParty = object.isThirdParty ?? false;\n        message.cameraFacingPreference = object.cameraFacingPreference ?? 0;\n        message.featureMetadata = object.featureMetadata?.map((e) => Any.fromPartial(e)) || [];\n        message.lensCreator =\n            object.lensCreator !== undefined && object.lensCreator !== null\n                ? LensCreator.fromPartial(object.lensCreator)\n                : undefined;\n        message.scannable =\n            object.scannable !== undefined && object.scannable !== null ? Scannable.fromPartial(object.scannable) : undefined;\n        return message;\n    },\n};\nfunction createBaseLens_VendorDataEntry(): Lens_VendorDataEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const Lens_VendorDataEntry = {\n    encode(message: Lens_VendorDataEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Lens_VendorDataEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLens_VendorDataEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Lens_VendorDataEntry {\n        return {\n            key: isSet(object.key) ? String(object.key) : \"\",\n            value: isSet(object.value) ? String(object.value) : \"\",\n        };\n    },\n    toJSON(message: Lens_VendorDataEntry): unknown {\n        const obj: any = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Lens_VendorDataEntry>, I>>(object: I): Lens_VendorDataEntry {\n        const message = createBaseLens_VendorDataEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseContent(): Content {\n    return {\n        lnsUrl: \"\",\n        lnsSha256: \"\",\n        iconUrl: \"\",\n        preview: undefined,\n        assetManifest: [],\n        defaultHintId: \"\",\n        hintTranslations: {},\n        lnsUrlBolt: \"\",\n        iconUrlBolt: \"\",\n    };\n}\nexport const Content = {\n    encode(message: Content, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.lnsUrl !== \"\") {\n            writer.uint32(10).string(message.lnsUrl);\n        }\n        if (message.lnsSha256 !== \"\") {\n            writer.uint32(18).string(message.lnsSha256);\n        }\n        if (message.iconUrl !== \"\") {\n            writer.uint32(26).string(message.iconUrl);\n        }\n        if (message.preview !== undefined) {\n            Preview.encode(message.preview, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.assetManifest) {\n            LensAssetManifestItem.encode(v!, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.defaultHintId !== \"\") {\n            writer.uint32(50).string(message.defaultHintId);\n        }\n        Object.entries(message.hintTranslations).forEach(([key, value]) => {\n            Content_HintTranslationsEntry.encode({ key: key as any, value }, writer.uint32(58).fork()).ldelim();\n        });\n        if (message.lnsUrlBolt !== \"\") {\n            writer.uint32(66).string(message.lnsUrlBolt);\n        }\n        if (message.iconUrlBolt !== \"\") {\n            writer.uint32(74).string(message.iconUrlBolt);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Content {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseContent();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.lnsUrl = reader.string();\n                    break;\n                case 2:\n                    message.lnsSha256 = reader.string();\n                    break;\n                case 3:\n                    message.iconUrl = reader.string();\n                    break;\n                case 4:\n                    message.preview = Preview.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.assetManifest.push(LensAssetManifestItem.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.defaultHintId = reader.string();\n                    break;\n                case 7:\n                    const entry7 = Content_HintTranslationsEntry.decode(reader, reader.uint32());\n                    if (entry7.value !== undefined) {\n                        message.hintTranslations[entry7.key] = entry7.value;\n                    }\n                    break;\n                case 8:\n                    message.lnsUrlBolt = reader.string();\n                    break;\n                case 9:\n                    message.iconUrlBolt = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Content {\n        return {\n            lnsUrl: isSet(object.lnsUrl) ? String(object.lnsUrl) : \"\",\n            lnsSha256: isSet(object.lnsSha256) ? String(object.lnsSha256) : \"\",\n            iconUrl: isSet(object.iconUrl) ? String(object.iconUrl) : \"\",\n            preview: isSet(object.preview) ? Preview.fromJSON(object.preview) : undefined,\n            assetManifest: Array.isArray(object?.assetManifest)\n                ? object.assetManifest.map((e: any) => LensAssetManifestItem.fromJSON(e))\n                : [],\n            defaultHintId: isSet(object.defaultHintId) ? String(object.defaultHintId) : \"\",\n            hintTranslations: isObject(object.hintTranslations)\n                ? Object.entries(object.hintTranslations).reduce<{\n                    [key: string]: string;\n                }>((acc, [key, value]) => {\n                    acc[key] = String(value);\n                    return acc;\n                }, {})\n                : {},\n            lnsUrlBolt: isSet(object.lnsUrlBolt) ? String(object.lnsUrlBolt) : \"\",\n            iconUrlBolt: isSet(object.iconUrlBolt) ? String(object.iconUrlBolt) : \"\",\n        };\n    },\n    toJSON(message: Content): unknown {\n        const obj: any = {};\n        message.lnsUrl !== undefined && (obj.lnsUrl = message.lnsUrl);\n        message.lnsSha256 !== undefined && (obj.lnsSha256 = message.lnsSha256);\n        message.iconUrl !== undefined && (obj.iconUrl = message.iconUrl);\n        message.preview !== undefined && (obj.preview = message.preview ? Preview.toJSON(message.preview) : undefined);\n        if (message.assetManifest) {\n            obj.assetManifest = message.assetManifest.map((e) => (e ? LensAssetManifestItem.toJSON(e) : undefined));\n        }\n        else {\n            obj.assetManifest = [];\n        }\n        message.defaultHintId !== undefined && (obj.defaultHintId = message.defaultHintId);\n        obj.hintTranslations = {};\n        if (message.hintTranslations) {\n            Object.entries(message.hintTranslations).forEach(([k, v]) => {\n                obj.hintTranslations[k] = v;\n            });\n        }\n        message.lnsUrlBolt !== undefined && (obj.lnsUrlBolt = message.lnsUrlBolt);\n        message.iconUrlBolt !== undefined && (obj.iconUrlBolt = message.iconUrlBolt);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Content>, I>>(object: I): Content {\n        const message = createBaseContent();\n        message.lnsUrl = object.lnsUrl ?? \"\";\n        message.lnsSha256 = object.lnsSha256 ?? \"\";\n        message.iconUrl = object.iconUrl ?? \"\";\n        message.preview =\n            object.preview !== undefined && object.preview !== null ? Preview.fromPartial(object.preview) : undefined;\n        message.assetManifest = object.assetManifest?.map((e) => LensAssetManifestItem.fromPartial(e)) || [];\n        message.defaultHintId = object.defaultHintId ?? \"\";\n        message.hintTranslations = Object.entries(object.hintTranslations ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.lnsUrlBolt = object.lnsUrlBolt ?? \"\";\n        message.iconUrlBolt = object.iconUrlBolt ?? \"\";\n        return message;\n    },\n};\nfunction createBaseContent_HintTranslationsEntry(): Content_HintTranslationsEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const Content_HintTranslationsEntry = {\n    encode(message: Content_HintTranslationsEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Content_HintTranslationsEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseContent_HintTranslationsEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Content_HintTranslationsEntry {\n        return {\n            key: isSet(object.key) ? String(object.key) : \"\",\n            value: isSet(object.value) ? String(object.value) : \"\",\n        };\n    },\n    toJSON(message: Content_HintTranslationsEntry): unknown {\n        const obj: any = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Content_HintTranslationsEntry>, I>>(object: I): Content_HintTranslationsEntry {\n        const message = createBaseContent_HintTranslationsEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseLensAssetManifestItem(): LensAssetManifestItem {\n    return { type: 0, id: \"\", requestTiming: 0, assetUrl: \"\", assetChecksum: \"\" };\n}\nexport const LensAssetManifestItem = {\n    encode(message: LensAssetManifestItem, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.id !== \"\") {\n            writer.uint32(18).string(message.id);\n        }\n        if (message.requestTiming !== 0) {\n            writer.uint32(24).int32(message.requestTiming);\n        }\n        if (message.assetUrl !== \"\") {\n            writer.uint32(34).string(message.assetUrl);\n        }\n        if (message.assetChecksum !== \"\") {\n            writer.uint32(42).string(message.assetChecksum);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): LensAssetManifestItem {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLensAssetManifestItem();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32() as any;\n                    break;\n                case 2:\n                    message.id = reader.string();\n                    break;\n                case 3:\n                    message.requestTiming = reader.int32() as any;\n                    break;\n                case 4:\n                    message.assetUrl = reader.string();\n                    break;\n                case 5:\n                    message.assetChecksum = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): LensAssetManifestItem {\n        return {\n            type: isSet(object.type) ? lensAssetManifestItem_TypeFromJSON(object.type) : 0,\n            id: isSet(object.id) ? String(object.id) : \"\",\n            requestTiming: isSet(object.requestTiming)\n                ? lensAssetManifestItem_RequestTimingFromJSON(object.requestTiming)\n                : 0,\n            assetUrl: isSet(object.assetUrl) ? String(object.assetUrl) : \"\",\n            assetChecksum: isSet(object.assetChecksum) ? String(object.assetChecksum) : \"\",\n        };\n    },\n    toJSON(message: LensAssetManifestItem): unknown {\n        const obj: any = {};\n        message.type !== undefined && (obj.type = lensAssetManifestItem_TypeToJSON(message.type));\n        message.id !== undefined && (obj.id = message.id);\n        message.requestTiming !== undefined &&\n            (obj.requestTiming = lensAssetManifestItem_RequestTimingToJSON(message.requestTiming));\n        message.assetUrl !== undefined && (obj.assetUrl = message.assetUrl);\n        message.assetChecksum !== undefined && (obj.assetChecksum = message.assetChecksum);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<LensAssetManifestItem>, I>>(object: I): LensAssetManifestItem {\n        const message = createBaseLensAssetManifestItem();\n        message.type = object.type ?? 0;\n        message.id = object.id ?? \"\";\n        message.requestTiming = object.requestTiming ?? 0;\n        message.assetUrl = object.assetUrl ?? \"\";\n        message.assetChecksum = object.assetChecksum ?? \"\";\n        return message;\n    },\n};\nfunction createBasePreview(): Preview {\n    return { imageUrl: \"\", imageSequenceSize: 0, imageSequenceWebpUrlPattern: \"\" };\n}\nexport const Preview = {\n    encode(message: Preview, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.imageUrl !== \"\") {\n            writer.uint32(10).string(message.imageUrl);\n        }\n        if (message.imageSequenceSize !== 0) {\n            writer.uint32(16).int32(message.imageSequenceSize);\n        }\n        if (message.imageSequenceWebpUrlPattern !== \"\") {\n            writer.uint32(26).string(message.imageSequenceWebpUrlPattern);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Preview {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePreview();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.imageUrl = reader.string();\n                    break;\n                case 2:\n                    message.imageSequenceSize = reader.int32();\n                    break;\n                case 3:\n                    message.imageSequenceWebpUrlPattern = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Preview {\n        return {\n            imageUrl: isSet(object.imageUrl) ? String(object.imageUrl) : \"\",\n            imageSequenceSize: isSet(object.imageSequenceSize) ? Number(object.imageSequenceSize) : 0,\n            imageSequenceWebpUrlPattern: isSet(object.imageSequenceWebpUrlPattern)\n                ? String(object.imageSequenceWebpUrlPattern)\n                : \"\",\n        };\n    },\n    toJSON(message: Preview): unknown {\n        const obj: any = {};\n        message.imageUrl !== undefined && (obj.imageUrl = message.imageUrl);\n        message.imageSequenceSize !== undefined && (obj.imageSequenceSize = Math.round(message.imageSequenceSize));\n        message.imageSequenceWebpUrlPattern !== undefined &&\n            (obj.imageSequenceWebpUrlPattern = message.imageSequenceWebpUrlPattern);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Preview>, I>>(object: I): Preview {\n        const message = createBasePreview();\n        message.imageUrl = object.imageUrl ?? \"\";\n        message.imageSequenceSize = object.imageSequenceSize ?? 0;\n        message.imageSequenceWebpUrlPattern = object.imageSequenceWebpUrlPattern ?? \"\";\n        return message;\n    },\n};\nfunction createBaseLensCreator(): LensCreator {\n    return { displayName: \"\" };\n}\nexport const LensCreator = {\n    encode(message: LensCreator, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.displayName !== \"\") {\n            writer.uint32(10).string(message.displayName);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): LensCreator {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLensCreator();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.displayName = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): LensCreator {\n        return {\n            displayName: isSet(object.displayName) ? String(object.displayName) : \"\",\n        };\n    },\n    toJSON(message: LensCreator): unknown {\n        const obj: any = {};\n        message.displayName !== undefined && (obj.displayName = message.displayName);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<LensCreator>, I>>(object: I): LensCreator {\n        const message = createBaseLensCreator();\n        message.displayName = object.displayName ?? \"\";\n        return message;\n    },\n};\nfunction createBaseScannable(): Scannable {\n    return { snapcodeImageUrl: \"\", snapcodeDeeplink: \"\" };\n}\nexport const Scannable = {\n    encode(message: Scannable, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.snapcodeImageUrl !== \"\") {\n            writer.uint32(10).string(message.snapcodeImageUrl);\n        }\n        if (message.snapcodeDeeplink !== \"\") {\n            writer.uint32(18).string(message.snapcodeDeeplink);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Scannable {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseScannable();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapcodeImageUrl = reader.string();\n                    break;\n                case 2:\n                    message.snapcodeDeeplink = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Scannable {\n        return {\n            snapcodeImageUrl: isSet(object.snapcodeImageUrl) ? String(object.snapcodeImageUrl) : \"\",\n            snapcodeDeeplink: isSet(object.snapcodeDeeplink) ? String(object.snapcodeDeeplink) : \"\",\n        };\n    },\n    toJSON(message: Scannable): unknown {\n        const obj: any = {};\n        message.snapcodeImageUrl !== undefined && (obj.snapcodeImageUrl = message.snapcodeImageUrl);\n        message.snapcodeDeeplink !== undefined && (obj.snapcodeDeeplink = message.snapcodeDeeplink);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Scannable>, I>>(object: I): Scannable {\n        const message = createBaseScannable();\n        message.snapcodeImageUrl = object.snapcodeImageUrl ?? \"\";\n        message.snapcodeDeeplink = object.snapcodeDeeplink ?? \"\";\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isObject(value: any): boolean {\n    return typeof value === \"object\" && value !== null;\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n","import { Logger } from \"./logger\";\n\n/**\n * Creates a class member decorator that logs errors thrown during the member invocation.\n * If the member returns a Promise, promise rejections are handled.\n * Any caught errors are re-thrown.\n * @param logger The logger to report errors to.\n * @return A decorator function.\n */\nexport function errorLoggingDecorator(logger: Logger) {\n    const handleError = (error: unknown) => logger.error(error);\n    return function (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) {\n        const methodName = descriptor.value ? \"value\" : \"get\";\n        const originalMethod = descriptor[methodName];\n        descriptor[methodName] = function (...args: any[]) {\n            try {\n                // \"this\" refers to original scope this function is called in\n                const result = originalMethod.apply(this, args);\n                if (result instanceof Promise) {\n                    // in case of a promise we don't return our promise chain\n                    // that logs an error because we want callers to handle the error as well\n                    result.catch(handleError);\n                }\n                return result;\n            } catch (error) {\n                handleError(error);\n                throw error;\n            }\n        };\n        return descriptor;\n    };\n}\n","/**\n * Assert a particular code path is unreachable, e.g. to perform a compile-time exhaustiveness check.\n *\n * Ex:\n * ```ts\n * interface A { type: 'a' }\n * interface B { type: 'b' }\n * type TaggedUnion = A | B\n *\n * function exhaustiveSwitch(value: TaggedUnion) {\n *   switch (value.type) {\n *     case 'a': // do something with A\n *     case 'b': // do something with B\n *     // this will fail to compile if we add another type to TaggedUnion and forget to add a corresponding case\n *     // to the switch statement.\n *     default: assertUnreachable(value)\n *   }\n * }\n * ```\n */\nexport function assertUnreachable(_: never): never {\n    throw new Error(\"Reached unreachable code at runtime.\");\n}\n\n/**\n * Assert that a condition is true. Otherwise, throws an error.\n * @param condition Condition to test.\n * @param error Optional error message or error instance to throw.\n */\nexport function assert(condition: boolean, error: string | Error = \"Assertion failed\"): asserts condition {\n    if (!condition) {\n        if (error instanceof Error) {\n            throw error;\n        } else {\n            throw new Error(error);\n        }\n    }\n}\n","import { assert } from \"../common/assertions\";\nimport {\n    predicateRecordValues,\n    isRecord,\n    isString,\n    isUndefined,\n    isEmptyOrSafeUrl,\n    isArrayOfType,\n    isTypedArray,\n    isNumber,\n} from \"../common/typeguards\";\nimport {\n    Content,\n    Lens_CameraFacing,\n    Lens as LensProto,\n    LensCreator,\n} from \"../generated-proto/pb_schema/camera_kit/v3/lens\";\nimport { GetGroupResponse } from \"../generated-proto/pb_schema/camera_kit/v3/service\";\nimport { Any } from \"../generated-proto/pb_schema/google/protobuf/any\";\n\nexport interface LensProtoWithGroupId extends LensProto {\n    groupId: string;\n}\n\n/**\n * @category Lenses\n */\nexport interface Lens {\n    /**\n     * Non-empty identifier of a unique lens available to be applied in current session.\n     *\n     * NOTE: This value may contain unsafe characters\n     * and therefore may require additional processing depending on usages.\n     */\n    id: string;\n\n    /**\n     * The unique identifier for the group that this lens is a part of,\n     * correlating to a collection of lenses grouped for organizational or functional purposes.\n     */\n    groupId: string;\n\n    /**\n     * Human readable name of this lens.\n     *\n     * NOTE: This value may contain unsafe characters\n     * and therefore may require additional processing depending on usages.\n     */\n    name: string;\n\n    /**\n     * Icon resource URI that represents this lens if available.\n     */\n    iconUrl: string | undefined;\n\n    /**\n     * Vendor specific metadata associated with this lens, empty by default.\n     *\n     * NOTE: Metadata values may contain unsafe characters\n     * and therefore may require additional processing depending on usages.\n     */\n    vendorData: { [key: string]: string };\n\n    /**\n     * Specifies a [Lens_CameraFacing] that this lens is designed for.\n     */\n    cameraFacingPreference: Lens_CameraFacing;\n\n    /**\n     * Preview representing this lens, if available.\n     */\n    preview: Preview | undefined;\n\n    /**\n     * Information about the lens creator.\n     */\n    lensCreator: LensCreator | undefined;\n\n    /**\n     * A [snapcode](https://scan.snapchat.com/snapcodes) that represents the lens if available.\n     *\n     * The snapcode points to the lens in the Snapchat app, when used on mobile, or a dedicated web page.\n     */\n    snapcode: Snapcode | undefined;\n\n    /**\n     * Metadata pertaining to a specific set of lens features\n     */\n    featureMetadata: Any[];\n}\n\n/**\n * Lens preview.\n */\n// That corresponds to Preview interface in packages/web-sdk/src/generated-proto/pb_schema/camera_kit/v3/lens.ts\nexport interface Preview {\n    /**\n     * Link to a lens preview image.\n     */\n    imageUrl: string;\n}\n\n/**\n * [Snapcode](https://scan.snapchat.com/snapcodes) representing a lens.\n */\n// That corresponds to Scannable interface in packages/web-sdk/src/generated-proto/pb_schema/camera_kit/v3/lens.ts\nexport interface Snapcode {\n    /**\n     * Snapcode image URL scannable with Snapchat app.\n     */\n    imageUrl: string;\n\n    /**\n     * Deeplink URL that directs to a lens web page.\n     */\n    deepLink: string;\n}\n\nexport function isLensArray(value: unknown): value is Lens[] {\n    return isArrayOfType(isLens, value);\n}\n\nexport function isLens(value: unknown): value is Lens {\n    return (\n        isRecord(value) &&\n        isString(value.id) &&\n        isString(value.name) &&\n        (isUndefined(value.iconUrl) || isString(value.iconUrl)) &&\n        isRecord(value.vendorData) &&\n        predicateRecordValues(isString)(value.vendorData) &&\n        isNumber(value.cameraFacingPreference) &&\n        (isUndefined(value.preview) || isPreview(value.preview)) &&\n        (isUndefined(value.lensCreator) || isLensCreator(value.lensCreator)) &&\n        (isUndefined(value.snapcode) || isSnapcode(value.snapcode)) &&\n        isAnyArray(value.featureMetadata)\n    );\n}\n\nexport function isLensProto(value: unknown): value is LensProto {\n    return (\n        isRecord(value) &&\n        isString(value.id) &&\n        isString(value.name) &&\n        isRecord(value.vendorData) &&\n        predicateRecordValues(isString)(value.vendorData) &&\n        (typeof value.content === \"undefined\" || isLensContent(value.content))\n    );\n}\n\nexport function isPreview(value: unknown): value is Preview {\n    return isRecord(value) && isString(value.imageUrl);\n}\n\nexport function isLensCreator(value: unknown): value is LensCreator {\n    return isRecord(value) && isString(value.displayName);\n}\n\nexport function isSnapcode(value: unknown): value is Snapcode {\n    return isRecord(value) && isString(value.imageUrl) && isString(value.deepLink);\n}\n\nexport function isLensContent(value: unknown): value is Omit<Content, \"lnsUrl\" | \"iconUrl\"> {\n    return (\n        isRecord(value) &&\n        isString(value.iconUrlBolt) &&\n        isString(value.lnsSha256) &&\n        isString(value.lnsUrlBolt) &&\n        isRecord(value.preview) &&\n        isString(value.preview.imageUrl)\n    );\n}\n\nexport function isGetGroupResponse(value: unknown): value is GetGroupResponse {\n    return isRecord(value) && isString(value.id) && Array.isArray(value.lenses) && value.lenses.every(isLensProto);\n}\n\nexport function isAny(value: unknown): value is Any {\n    return isRecord(value) && isString(value.typeUrl) && isTypedArray(value.value);\n}\n\nexport function isAnyArray(value: unknown): value is Any[] {\n    return isArrayOfType(isAny, value);\n}\n\n/**\n * Converts lens proto to a public lens object.\n * @param lens Lens proto\n * @returns Public lens object.\n *\n * @internal\n */\nexport function toPublicLens({\n    id,\n    groupId,\n    name,\n    content,\n    vendorData,\n    cameraFacingPreference,\n    lensCreator,\n    scannable,\n    featureMetadata,\n}: LensProtoWithGroupId): Lens {\n    assert(isEmptyOrSafeUrl(content?.iconUrlBolt), \"Unsafe icon URL\");\n    assert(isEmptyOrSafeUrl(content?.preview?.imageUrl), \"Unsafe preview URL\");\n    return {\n        id,\n        groupId,\n        name,\n        iconUrl: content?.iconUrlBolt,\n        preview: content?.preview ? { imageUrl: content.preview.imageUrl } : undefined,\n        vendorData,\n        cameraFacingPreference,\n        lensCreator,\n        snapcode: scannable\n            ? { imageUrl: scannable.snapcodeImageUrl, deepLink: scannable.snapcodeDeeplink }\n            : undefined,\n        featureMetadata,\n    };\n}\n","export * from \"./lensCoreFactory\";\n","export * from \"./loader\";\nexport * from \"./generated-types\";\nexport * from \"./lensCore\";\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { TypedEventTarget } from \"../events/TypedEventTarget\";\nimport { AssetValidationFailed } from \"../lens/assets/LensAssetsProvider\";\nimport { AssetDownload, LensDownload } from \"./reporters/reportLensAndAssetDownload\";\nimport { LensContentValidationFailed } from \"./reporters/reportLensValidationFailed\";\nimport { LensView } from \"./reporters/reportLensView\";\nimport { LensWait } from \"./reporters/reportLensWait\";\nimport { Session } from \"./reporters/reportUserSession\";\nimport { BenchmarkComplete } from \"./reporters/reportBenchmarks\";\nimport { LegalPrompt } from \"./reporters/reportLegalState\";\nimport { MakeTaggedBusinessEvent } from \"./businessEventsReporter\";\n\n/**\n * The Exception metric reports every time we handle an exception.\n */\nexport type Exception = MakeTaggedBusinessEvent<\"exception\">;\n\nexport type CameraKitBootstrapMetricEvents = TypedCustomEvent<BenchmarkComplete[\"name\"], BenchmarkComplete>;\n\nexport type CameraKitSessionMetricEvents =\n    | TypedCustomEvent<LegalPrompt[\"name\"], LegalPrompt>\n    | TypedCustomEvent<LensView[\"name\"], LensView>\n    | TypedCustomEvent<LensWait[\"name\"], LensWait>\n    | TypedCustomEvent<LensDownload[\"name\"], LensDownload>\n    | TypedCustomEvent<AssetDownload[\"name\"], AssetDownload>\n    | TypedCustomEvent<AssetValidationFailed[\"name\"], AssetValidationFailed>\n    | TypedCustomEvent<LensContentValidationFailed[\"name\"], LensContentValidationFailed>\n    | TypedCustomEvent<Session[\"name\"], Session>;\n\n/**\n * A union of all event types emitted by the {@link CameraKit.events} event emitter.\n *\n * @internal\n */\nexport type CameraKitMetricEvents =\n    | CameraKitSessionMetricEvents\n    | CameraKitBootstrapMetricEvents\n    | TypedCustomEvent<Exception[\"name\"], Exception>;\n\n/**\n * This event target may be used to listen for any of the metrics events reported by CameraKit.\n *\n * @internal\n */\nexport type MetricsEventTarget = TypedEventTarget<CameraKitMetricEvents>;\n\n/**\n * Any metrics that we wish to emit to applications should be dispatched on this event target.\n *\n * Our business events reporter also listens to this event target, and may report the emitted metrics to our backend.\n *\n * @internal\n */\nexport const metricsEventTargetFactory = Injectable(\n    \"metricsEventTarget\",\n    (): MetricsEventTarget => new TypedEventTarget()\n);\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport enum Namespace {\n    DEFAULT = 0,\n    LENS_CORE = 64,\n    CAMERA_KIT_CORE = 65,\n    LENS_CORE_CONFIG = 143,\n    UNRECOGNIZED = -1\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import { memoize } from \"../common/memoize\";\nimport { getConfigurationOverrides } from \"../configurationOverrides\";\nimport { getPlatformInfo } from \"./platformInfo\";\n\n/** @internal */\nexport const getCameraKitUserAgent = memoize(function getCameraKitUserAgent(): string {\n    const { browser, deviceModel, origin, osName, osVersion, sdkShortVersion, lensCore } = getPlatformInfo();\n\n    // Set this to `DEBUG` manually while testing / root-causing.\n    const { userAgentFlavor } = getConfigurationOverrides() ?? { userAgentFlavor: \"release\" };\n    const flavor: \"\" | \"DEBUG \" = userAgentFlavor === \"release\" ? \"\" : \"DEBUG \";\n\n    // This full string is defined here:\n    // eslint-disable-next-line max-len\n    // https://github.sc-corp.net/Snapchat/useragent/blob/9333afe7cc6ac00503ad46cb234bcf94006dff98/java/useragent/src/main/java/snapchat/client/UserAgent.java#L124\n    return (\n        `CameraKitWeb/${sdkShortVersion} ${flavor}(${deviceModel}; ${osName} ${osVersion}) ` +\n        `${browser.brand}/${browser.version} Core/${lensCore.version} ` +\n        // We overload appId, using the origin instead of the true appId parsed from the apiToken -- we do this because\n        // origin is human-readable, and this is used to populate the appId dimension in operational metrics.\n        `AppId/${origin}`\n    );\n});\n","import { ChainableHandler } from \"./HandlerChainBuilder\";\n\n/**\n * Modify a Fetch Request's headers.\n *\n * @param modifyHeaders\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createHeadersModifyingFetchHandler =\n    <Res>(\n        modifyHeaders: (headers: Headers) => Headers\n    ): ChainableHandler<RequestInfo, Res, RequestInfo, Res, RequestInit | undefined> =>\n    (next) =>\n    (input, init) => {\n        const headers =\n            init && init.headers\n                ? new Headers(init.headers)\n                : typeof input === \"string\"\n                ? new Headers()\n                : input.headers;\n\n        const modifiedHeaders = modifyHeaders(headers);\n\n        // When `init` contains headers, `fetch` uses these *instead* of any headers found in the `input` Request.\n        return next(input, { ...init, headers: modifiedHeaders });\n    };\n","import { getCameraKitUserAgent } from \"../platform/cameraKitUserAgent\";\nimport { CameraKitConfiguration, configurationToken } from \"../configuration\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"./defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"./HandlerChainBuilder\";\nimport { createHeadersModifyingFetchHandler } from \"./headersModifyingFetchHandler\";\n\n/**\n * A Fetch implementation which adds headers required to make authenticated calls to the CameraKit backend service.\n *\n * @internal\n */\nexport const cameraKitServiceFetchHandlerFactory = Injectable(\n    \"cameraKitServiceFetchHandler\",\n    [configurationToken, defaultFetchHandlerFactory.token] as const,\n    ({ apiToken }: CameraKitConfiguration, defaultFetchHandler: FetchHandler) => {\n        return new HandlerChainBuilder(defaultFetchHandler).map(\n            createHeadersModifyingFetchHandler((headers) => {\n                headers.append(\"x-snap-client-user-agent\", getCameraKitUserAgent());\n                headers.append(\"authorization\", `Bearer ${apiToken}`);\n                return headers;\n            })\n        ).handler;\n    }\n);\n","export * from \"./defaultFetchHandler\";\nexport * from \"./cameraKitServiceFetchHandlerFactory\";\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(3);\nfunction isBrowserHeaders(arg) {\n    return typeof arg === \"object\" && typeof arg.headersMap === \"object\" && typeof arg.forEach === \"function\";\n}\nvar BrowserHeaders = (function () {\n    function BrowserHeaders(init, options) {\n        if (init === void 0) { init = {}; }\n        if (options === void 0) { options = { splitValues: false }; }\n        var _this = this;\n        this.headersMap = {};\n        if (init) {\n            if (typeof Headers !== \"undefined\" && init instanceof Headers) {\n                var keys = util_1.getHeaderKeys(init);\n                keys.forEach(function (key) {\n                    var values = util_1.getHeaderValues(init, key);\n                    values.forEach(function (value) {\n                        if (options.splitValues) {\n                            _this.append(key, util_1.splitHeaderValue(value));\n                        }\n                        else {\n                            _this.append(key, value);\n                        }\n                    });\n                });\n            }\n            else if (isBrowserHeaders(init)) {\n                init.forEach(function (key, values) {\n                    _this.append(key, values);\n                });\n            }\n            else if (typeof Map !== \"undefined\" && init instanceof Map) {\n                var asMap = init;\n                asMap.forEach(function (value, key) {\n                    _this.append(key, value);\n                });\n            }\n            else if (typeof init === \"string\") {\n                this.appendFromString(init);\n            }\n            else if (typeof init === \"object\") {\n                Object.getOwnPropertyNames(init).forEach(function (key) {\n                    var asObject = init;\n                    var values = asObject[key];\n                    if (Array.isArray(values)) {\n                        values.forEach(function (value) {\n                            _this.append(key, value);\n                        });\n                    }\n                    else {\n                        _this.append(key, values);\n                    }\n                });\n            }\n        }\n    }\n    BrowserHeaders.prototype.appendFromString = function (str) {\n        var pairs = str.split(\"\\r\\n\");\n        for (var i = 0; i < pairs.length; i++) {\n            var p = pairs[i];\n            var index = p.indexOf(\":\");\n            if (index > 0) {\n                var key = p.substring(0, index).trim();\n                var value = p.substring(index + 1).trim();\n                this.append(key, value);\n            }\n        }\n    };\n    BrowserHeaders.prototype.delete = function (key, value) {\n        var normalizedKey = util_1.normalizeName(key);\n        if (value === undefined) {\n            delete this.headersMap[normalizedKey];\n        }\n        else {\n            var existing = this.headersMap[normalizedKey];\n            if (existing) {\n                var index = existing.indexOf(value);\n                if (index >= 0) {\n                    existing.splice(index, 1);\n                }\n                if (existing.length === 0) {\n                    delete this.headersMap[normalizedKey];\n                }\n            }\n        }\n    };\n    BrowserHeaders.prototype.append = function (key, value) {\n        var _this = this;\n        var normalizedKey = util_1.normalizeName(key);\n        if (!Array.isArray(this.headersMap[normalizedKey])) {\n            this.headersMap[normalizedKey] = [];\n        }\n        if (Array.isArray(value)) {\n            value.forEach(function (arrayValue) {\n                _this.headersMap[normalizedKey].push(util_1.normalizeValue(arrayValue));\n            });\n        }\n        else {\n            this.headersMap[normalizedKey].push(util_1.normalizeValue(value));\n        }\n    };\n    BrowserHeaders.prototype.set = function (key, value) {\n        var normalizedKey = util_1.normalizeName(key);\n        if (Array.isArray(value)) {\n            var normalized_1 = [];\n            value.forEach(function (arrayValue) {\n                normalized_1.push(util_1.normalizeValue(arrayValue));\n            });\n            this.headersMap[normalizedKey] = normalized_1;\n        }\n        else {\n            this.headersMap[normalizedKey] = [util_1.normalizeValue(value)];\n        }\n    };\n    BrowserHeaders.prototype.has = function (key, value) {\n        var keyArray = this.headersMap[util_1.normalizeName(key)];\n        var keyExists = Array.isArray(keyArray);\n        if (!keyExists) {\n            return false;\n        }\n        if (value !== undefined) {\n            var normalizedValue = util_1.normalizeValue(value);\n            return keyArray.indexOf(normalizedValue) >= 0;\n        }\n        else {\n            return true;\n        }\n    };\n    BrowserHeaders.prototype.get = function (key) {\n        var values = this.headersMap[util_1.normalizeName(key)];\n        if (values !== undefined) {\n            return values.concat();\n        }\n        return [];\n    };\n    BrowserHeaders.prototype.forEach = function (callback) {\n        var _this = this;\n        Object.getOwnPropertyNames(this.headersMap)\n            .forEach(function (key) {\n            callback(key, _this.headersMap[key]);\n        }, this);\n    };\n    BrowserHeaders.prototype.toHeaders = function () {\n        if (typeof Headers !== \"undefined\") {\n            var headers_1 = new Headers();\n            this.forEach(function (key, values) {\n                values.forEach(function (value) {\n                    headers_1.append(key, value);\n                });\n            });\n            return headers_1;\n        }\n        else {\n            throw new Error(\"Headers class is not defined\");\n        }\n    };\n    return BrowserHeaders;\n}());\nexports.BrowserHeaders = BrowserHeaders;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrowserHeaders_1 = __webpack_require__(0);\nexports.BrowserHeaders = BrowserHeaders_1.BrowserHeaders;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction iterateHeaders(headers, callback) {\n    var iterator = headers[Symbol.iterator]();\n    var entry = iterator.next();\n    while (!entry.done) {\n        callback(entry.value[0]);\n        entry = iterator.next();\n    }\n}\nexports.iterateHeaders = iterateHeaders;\nfunction iterateHeadersKeys(headers, callback) {\n    var iterator = headers.keys();\n    var entry = iterator.next();\n    while (!entry.done) {\n        callback(entry.value);\n        entry = iterator.next();\n    }\n}\nexports.iterateHeadersKeys = iterateHeadersKeys;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar iterateHeaders_1 = __webpack_require__(2);\nfunction normalizeName(name) {\n    if (typeof name !== \"string\") {\n        name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError(\"Invalid character in header field name\");\n    }\n    return name.toLowerCase();\n}\nexports.normalizeName = normalizeName;\nfunction normalizeValue(value) {\n    if (typeof value !== \"string\") {\n        value = String(value);\n    }\n    return value;\n}\nexports.normalizeValue = normalizeValue;\nfunction getHeaderValues(headersAsNative, key) {\n    var headers = toWindowHeaders(headersAsNative);\n    if (headers instanceof Headers && headers.getAll) {\n        return headers.getAll(key);\n    }\n    var getValue = headers.get(key);\n    if (getValue && typeof getValue === \"string\") {\n        return [getValue];\n    }\n    return getValue;\n}\nexports.getHeaderValues = getHeaderValues;\nfunction toWindowHeaders(headersAsNative) {\n    return headersAsNative;\n}\nfunction getHeaderKeys(headersAsNative) {\n    var headers = toWindowHeaders(headersAsNative);\n    var asMap = {};\n    var keys = [];\n    if (headers.keys) {\n        iterateHeaders_1.iterateHeadersKeys(headers, function (key) {\n            if (!asMap[key]) {\n                asMap[key] = true;\n                keys.push(key);\n            }\n        });\n    }\n    else if (headers.forEach) {\n        headers.forEach(function (_, key) {\n            if (!asMap[key]) {\n                asMap[key] = true;\n                keys.push(key);\n            }\n        });\n    }\n    else {\n        iterateHeaders_1.iterateHeaders(headers, function (entry) {\n            var key = entry[0];\n            if (!asMap[key]) {\n                asMap[key] = true;\n                keys.push(key);\n            }\n        });\n    }\n    return keys;\n}\nexports.getHeaderKeys = getHeaderKeys;\nfunction splitHeaderValue(str) {\n    var values = [];\n    var commaSpaceValues = str.split(\", \");\n    commaSpaceValues.forEach(function (commaSpaceValue) {\n        commaSpaceValue.split(\",\").forEach(function (commaValue) {\n            values.push(commaValue);\n        });\n    });\n    return values;\n}\nexports.splitHeaderValue = splitHeaderValue;\n\n\n/***/ })\n/******/ ]);\n});","/**\n * Creates an array of unique values, in order, from all given arrays using a specified iteratee.\n * If multiple elements have the same key generated by the iteratee, the last occurrence is kept.\n *\n * @param {((item: T) => unknown) | keyof T} iteratee - The iteratee invoked per element.\n * @param {...T[][]} arrays - The arrays to inspect and unite.\n * @returns {T[]} - Returns the new array of combined elements, preserving the order of last occurrences.\n * @example\n * // Using a property name as iteratee\n * const result = unionBy(\n *   'id',\n *   [{ id: 1, name: 'John' }, { id: 2, name: 'Jane' }],\n *   [{ id: 1, name: 'Sally' }, { id: 3, name: 'Doe' }]\n * );\n * console.log(result);\n * // Output: [{ id: 1, name: 'Sally' }, { id: 2, name: 'Jane' }, { id: 3, name: 'Doe' }]\n *\n * @example\n * // Using a function as iteratee\n * const result = unionBy(\n *   item => item.id,\n *   [{ id: 1, name: 'John' }, { id: 2, name: 'Jane' }],\n *   [{ id: 1, name: 'Sally' }, { id: 3, name: 'Doe' }]\n * );\n * console.log(result);\n * // Output: [{ id: 1, name: 'Sally' }, { id: 2, name: 'Jane' }, { id: 3, name: 'Doe' }]\n */\nexport function unionBy<T>(iteratee: ((item: T) => unknown) | keyof T, ...arrays: T[][]): T[] {\n    const throwIterateeError = () => {\n        throw new Error(\"Iteratee must be a function or a valid property key of the item\");\n    };\n\n    // One helpful feature of Map is maintainig the insertion order of elements. This is particularly nice for the\n    // unionBy function since it ensures that the combined array preserves the order of elements as they first appear\n    // in the input arrays.\n    const seen = new Map<unknown, T>();\n\n    for (const item of arrays.flat()) {\n        const key =\n            typeof iteratee === \"function\"\n                ? iteratee(item)\n                : typeof item === \"object\" && item !== null && iteratee in item\n                ? item[iteratee]\n                : throwIterateeError();\n\n        seen.set(key, item);\n    }\n\n    return Array.from(seen.values());\n}\n","!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var r=t();for(var n in r)(\"object\"==typeof exports?exports:e)[n]=r[n]}}(this,(function(){return e={418:function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.i=function(e){return e},r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=1)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(3),o=function(){function e(e,t){void 0===e&&(e={}),void 0===t&&(t={splitValues:!1});var r,o=this;this.headersMap={},e&&(\"undefined\"!=typeof Headers&&e instanceof Headers?n.getHeaderKeys(e).forEach((function(r){n.getHeaderValues(e,r).forEach((function(e){t.splitValues?o.append(r,n.splitHeaderValue(e)):o.append(r,e)}))})):\"object\"==typeof(r=e)&&\"object\"==typeof r.headersMap&&\"function\"==typeof r.forEach?e.forEach((function(e,t){o.append(e,t)})):\"undefined\"!=typeof Map&&e instanceof Map?e.forEach((function(e,t){o.append(t,e)})):\"string\"==typeof e?this.appendFromString(e):\"object\"==typeof e&&Object.getOwnPropertyNames(e).forEach((function(t){var r=e[t];Array.isArray(r)?r.forEach((function(e){o.append(t,e)})):o.append(t,r)})))}return e.prototype.appendFromString=function(e){for(var t=e.split(\"\\r\\n\"),r=0;r<t.length;r++){var n=t[r],o=n.indexOf(\":\");if(o>0){var s=n.substring(0,o).trim(),i=n.substring(o+1).trim();this.append(s,i)}}},e.prototype.delete=function(e,t){var r=n.normalizeName(e);if(void 0===t)delete this.headersMap[r];else{var o=this.headersMap[r];if(o){var s=o.indexOf(t);s>=0&&o.splice(s,1),0===o.length&&delete this.headersMap[r]}}},e.prototype.append=function(e,t){var r=this,o=n.normalizeName(e);Array.isArray(this.headersMap[o])||(this.headersMap[o]=[]),Array.isArray(t)?t.forEach((function(e){r.headersMap[o].push(n.normalizeValue(e))})):this.headersMap[o].push(n.normalizeValue(t))},e.prototype.set=function(e,t){var r=n.normalizeName(e);if(Array.isArray(t)){var o=[];t.forEach((function(e){o.push(n.normalizeValue(e))})),this.headersMap[r]=o}else this.headersMap[r]=[n.normalizeValue(t)]},e.prototype.has=function(e,t){var r=this.headersMap[n.normalizeName(e)];if(!Array.isArray(r))return!1;if(void 0!==t){var o=n.normalizeValue(t);return r.indexOf(o)>=0}return!0},e.prototype.get=function(e){var t=this.headersMap[n.normalizeName(e)];return void 0!==t?t.concat():[]},e.prototype.forEach=function(e){var t=this;Object.getOwnPropertyNames(this.headersMap).forEach((function(r){e(r,t.headersMap[r])}),this)},e.prototype.toHeaders=function(){if(\"undefined\"!=typeof Headers){var e=new Headers;return this.forEach((function(t,r){r.forEach((function(r){e.append(t,r)}))})),e}throw new Error(\"Headers class is not defined\")},e}();t.BrowserHeaders=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(0);t.BrowserHeaders=n.BrowserHeaders},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.iterateHeaders=function(e,t){for(var r=e[Symbol.iterator](),n=r.next();!n.done;)t(n.value[0]),n=r.next()},t.iterateHeadersKeys=function(e,t){for(var r=e.keys(),n=r.next();!n.done;)t(n.value),n=r.next()}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(2);t.normalizeName=function(e){if(\"string\"!=typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(e))throw new TypeError(\"Invalid character in header field name\");return e.toLowerCase()},t.normalizeValue=function(e){return\"string\"!=typeof e&&(e=String(e)),e},t.getHeaderValues=function(e,t){var r=e;if(r instanceof Headers&&r.getAll)return r.getAll(t);var n=r.get(t);return n&&\"string\"==typeof n?[n]:n},t.getHeaderKeys=function(e){var t=e,r={},o=[];return t.keys?n.iterateHeadersKeys(t,(function(e){r[e]||(r[e]=!0,o.push(e))})):t.forEach?t.forEach((function(e,t){r[t]||(r[t]=!0,o.push(t))})):n.iterateHeaders(t,(function(e){var t=e[0];r[t]||(r[t]=!0,o.push(t))})),o},t.splitHeaderValue=function(e){var t=[];return e.split(\", \").forEach((function(e){e.split(\",\").forEach((function(e){t.push(e)}))})),t}}]))},617:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ChunkParser=t.ChunkType=t.encodeASCII=t.decodeASCII=void 0;var n,o=r(65);function s(e){return 9===(t=e)||10===t||13===t||e>=32&&e<=126;var t}function i(e){for(var t=0;t!==e.length;++t)if(!s(e[t]))throw new Error(\"Metadata is not valid (printable) ASCII\");return String.fromCharCode.apply(String,Array.prototype.slice.call(e))}function a(e){return 128==(128&e.getUint8(0))}function u(e){return e.getUint32(1,!1)}function d(e,t,r){return e.byteLength-t>=r}function c(e,t,r){if(e.slice)return e.slice(t,r);var n=e.length;void 0!==r&&(n=r);for(var o=new Uint8Array(n-t),s=0,i=t;i<n;i++)o[s++]=e[i];return o}t.decodeASCII=i,t.encodeASCII=function(e){for(var t=new Uint8Array(e.length),r=0;r!==e.length;++r){var n=e.charCodeAt(r);if(!s(n))throw new Error(\"Metadata contains invalid ASCII\");t[r]=n}return t},function(e){e[e.MESSAGE=1]=\"MESSAGE\",e[e.TRAILERS=2]=\"TRAILERS\"}(n=t.ChunkType||(t.ChunkType={}));var p=function(){function e(){this.buffer=null,this.position=0}return e.prototype.parse=function(e,t){if(0===e.length&&t)return[];var r,s=[];if(null==this.buffer)this.buffer=e,this.position=0;else if(this.position===this.buffer.byteLength)this.buffer=e,this.position=0;else{var p=this.buffer.byteLength-this.position,h=new Uint8Array(p+e.byteLength),f=c(this.buffer,this.position);h.set(f,0);var l=new Uint8Array(e);h.set(l,p),this.buffer=h,this.position=0}for(;;){if(!d(this.buffer,this.position,5))return s;var g=c(this.buffer,this.position,this.position+5),b=new DataView(g.buffer,g.byteOffset,g.byteLength),y=u(b);if(!d(this.buffer,this.position,5+y))return s;var v=c(this.buffer,this.position+5,this.position+5+y);if(this.position+=5+y,a(b))return s.push({chunkType:n.TRAILERS,trailers:(r=v,new o.Metadata(i(r)))}),s;s.push({chunkType:n.MESSAGE,data:v})}},e}();t.ChunkParser=p},8:function(e,t){\"use strict\";var r;Object.defineProperty(t,\"__esModule\",{value:!0}),t.httpStatusToCode=t.Code=void 0,function(e){e[e.OK=0]=\"OK\",e[e.Canceled=1]=\"Canceled\",e[e.Unknown=2]=\"Unknown\",e[e.InvalidArgument=3]=\"InvalidArgument\",e[e.DeadlineExceeded=4]=\"DeadlineExceeded\",e[e.NotFound=5]=\"NotFound\",e[e.AlreadyExists=6]=\"AlreadyExists\",e[e.PermissionDenied=7]=\"PermissionDenied\",e[e.ResourceExhausted=8]=\"ResourceExhausted\",e[e.FailedPrecondition=9]=\"FailedPrecondition\",e[e.Aborted=10]=\"Aborted\",e[e.OutOfRange=11]=\"OutOfRange\",e[e.Unimplemented=12]=\"Unimplemented\",e[e.Internal=13]=\"Internal\",e[e.Unavailable=14]=\"Unavailable\",e[e.DataLoss=15]=\"DataLoss\",e[e.Unauthenticated=16]=\"Unauthenticated\"}(r=t.Code||(t.Code={})),t.httpStatusToCode=function(e){switch(e){case 0:return r.Internal;case 200:return r.OK;case 400:return r.InvalidArgument;case 401:return r.Unauthenticated;case 403:return r.PermissionDenied;case 404:return r.NotFound;case 409:return r.Aborted;case 412:return r.FailedPrecondition;case 429:return r.ResourceExhausted;case 499:return r.Canceled;case 500:return r.Unknown;case 501:return r.Unimplemented;case 503:return r.Unavailable;case 504:return r.DeadlineExceeded;default:return r.Unknown}}},934:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.client=void 0;var n=r(65),o=r(617),s=r(8),i=r(346),a=r(57),u=r(882);t.client=function(e,t){return new d(e,t)};var d=function(){function e(e,t){this.started=!1,this.sentFirstMessage=!1,this.completed=!1,this.closed=!1,this.finishedSending=!1,this.onHeadersCallbacks=[],this.onMessageCallbacks=[],this.onEndCallbacks=[],this.parser=new o.ChunkParser,this.methodDefinition=e,this.props=t,this.createTransport()}return e.prototype.createTransport=function(){var e=this.props.host+\"/\"+this.methodDefinition.service.serviceName+\"/\"+this.methodDefinition.methodName,t={methodDefinition:this.methodDefinition,debug:this.props.debug||!1,url:e,onHeaders:this.onTransportHeaders.bind(this),onChunk:this.onTransportChunk.bind(this),onEnd:this.onTransportEnd.bind(this)};this.props.transport?this.transport=this.props.transport(t):this.transport=a.makeDefaultTransport(t)},e.prototype.onTransportHeaders=function(e,t){if(this.props.debug&&i.debug(\"onHeaders\",e,t),this.closed)this.props.debug&&i.debug(\"grpc.onHeaders received after request was closed - ignoring\");else if(0===t);else{this.responseHeaders=e,this.props.debug&&i.debug(\"onHeaders.responseHeaders\",JSON.stringify(this.responseHeaders,null,2));var r=c(e);this.props.debug&&i.debug(\"onHeaders.gRPCStatus\",r);var n=r&&r>=0?r:s.httpStatusToCode(t);this.props.debug&&i.debug(\"onHeaders.code\",n);var o=e.get(\"grpc-message\")||[];if(this.props.debug&&i.debug(\"onHeaders.gRPCMessage\",o),this.rawOnHeaders(e),n!==s.Code.OK){var a=this.decodeGRPCStatus(o[0]);this.rawOnError(n,a,e)}}},e.prototype.onTransportChunk=function(e){var t=this;if(this.closed)this.props.debug&&i.debug(\"grpc.onChunk received after request was closed - ignoring\");else{var r=[];try{r=this.parser.parse(e)}catch(e){return this.props.debug&&i.debug(\"onChunk.parsing error\",e,e.message),void this.rawOnError(s.Code.Internal,\"parsing error: \"+e.message)}r.forEach((function(e){if(e.chunkType===o.ChunkType.MESSAGE){var r=t.methodDefinition.responseType.deserializeBinary(e.data);t.rawOnMessage(r)}else e.chunkType===o.ChunkType.TRAILERS&&(t.responseHeaders?(t.responseTrailers=new n.Metadata(e.trailers),t.props.debug&&i.debug(\"onChunk.trailers\",t.responseTrailers)):(t.responseHeaders=new n.Metadata(e.trailers),t.rawOnHeaders(t.responseHeaders)))}))}},e.prototype.onTransportEnd=function(){if(this.props.debug&&i.debug(\"grpc.onEnd\"),this.closed)this.props.debug&&i.debug(\"grpc.onEnd received after request was closed - ignoring\");else if(void 0!==this.responseTrailers){var e=c(this.responseTrailers);if(null!==e){var t=this.responseTrailers.get(\"grpc-message\"),r=this.decodeGRPCStatus(t[0]);this.rawOnEnd(e,r,this.responseTrailers)}else this.rawOnError(s.Code.Internal,\"Response closed without grpc-status (Trailers provided)\")}else{if(void 0===this.responseHeaders)return void this.rawOnError(s.Code.Unknown,\"Response closed without headers\");var n=c(this.responseHeaders),o=this.responseHeaders.get(\"grpc-message\");if(this.props.debug&&i.debug(\"grpc.headers only response \",n,o),null===n)return void this.rawOnEnd(s.Code.Unknown,\"Response closed without grpc-status (Headers only)\",this.responseHeaders);var a=this.decodeGRPCStatus(o[0]);this.rawOnEnd(n,a,this.responseHeaders)}},e.prototype.decodeGRPCStatus=function(e){if(!e)return\"\";try{return decodeURIComponent(e)}catch(t){return e}},e.prototype.rawOnEnd=function(e,t,r){var n=this;this.props.debug&&i.debug(\"rawOnEnd\",e,t,r),this.completed||(this.completed=!0,this.onEndCallbacks.forEach((function(o){if(!n.closed)try{o(e,t,r)}catch(e){setTimeout((function(){throw e}),0)}})))},e.prototype.rawOnHeaders=function(e){this.props.debug&&i.debug(\"rawOnHeaders\",e),this.completed||this.onHeadersCallbacks.forEach((function(t){try{t(e)}catch(e){setTimeout((function(){throw e}),0)}}))},e.prototype.rawOnError=function(e,t,r){var o=this;void 0===r&&(r=new n.Metadata),this.props.debug&&i.debug(\"rawOnError\",e,t),this.completed||(this.completed=!0,this.onEndCallbacks.forEach((function(n){if(!o.closed)try{n(e,t,r)}catch(e){setTimeout((function(){throw e}),0)}})))},e.prototype.rawOnMessage=function(e){var t=this;this.props.debug&&i.debug(\"rawOnMessage\",e.toObject()),this.completed||this.closed||this.onMessageCallbacks.forEach((function(r){if(!t.closed)try{r(e)}catch(e){setTimeout((function(){throw e}),0)}}))},e.prototype.onHeaders=function(e){this.onHeadersCallbacks.push(e)},e.prototype.onMessage=function(e){this.onMessageCallbacks.push(e)},e.prototype.onEnd=function(e){this.onEndCallbacks.push(e)},e.prototype.start=function(e){if(this.started)throw new Error(\"Client already started - cannot .start()\");this.started=!0;var t=new n.Metadata(e||{});t.set(\"content-type\",\"application/grpc-web+proto\"),t.set(\"x-grpc-web\",\"1\"),this.transport.start(t)},e.prototype.send=function(e){if(!this.started)throw new Error(\"Client not started - .start() must be called before .send()\");if(this.closed)throw new Error(\"Client already closed - cannot .send()\");if(this.finishedSending)throw new Error(\"Client already finished sending - cannot .send()\");if(!this.methodDefinition.requestStream&&this.sentFirstMessage)throw new Error(\"Message already sent for non-client-streaming method - cannot .send()\");this.sentFirstMessage=!0;var t=u.frameRequest(e);this.transport.sendMessage(t)},e.prototype.finishSend=function(){if(!this.started)throw new Error(\"Client not started - .finishSend() must be called before .close()\");if(this.closed)throw new Error(\"Client already closed - cannot .send()\");if(this.finishedSending)throw new Error(\"Client already finished sending - cannot .finishSend()\");this.finishedSending=!0,this.transport.finishSend()},e.prototype.close=function(){if(!this.started)throw new Error(\"Client not started - .start() must be called before .close()\");if(this.closed)throw new Error(\"Client already closed - cannot .close()\");this.closed=!0,this.props.debug&&i.debug(\"request.abort aborting request\"),this.transport.cancel()},e}();function c(e){var t=e.get(\"grpc-status\")||[];if(t.length>0)try{var r=t[0];return parseInt(r,10)}catch(e){return null}return null}},346:function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.debug=void 0,t.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];console.debug?console.debug.apply(null,e):console.log.apply(null,e)}},607:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.grpc=void 0;var n,o=r(418),s=r(57),i=r(229),a=r(540),u=r(210),d=r(859),c=r(8),p=r(938),h=r(35),f=r(934);(n=t.grpc||(t.grpc={})).setDefaultTransport=s.setDefaultTransportFactory,n.CrossBrowserHttpTransport=d.CrossBrowserHttpTransport,n.FetchReadableStreamTransport=i.FetchReadableStreamTransport,n.XhrTransport=u.XhrTransport,n.WebsocketTransport=a.WebsocketTransport,n.Code=c.Code,n.Metadata=o.BrowserHeaders,n.client=function(e,t){return f.client(e,t)},n.invoke=p.invoke,n.unary=h.unary},938:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.invoke=void 0;var n=r(934);t.invoke=function(e,t){if(e.requestStream)throw new Error(\".invoke cannot be used with client-streaming methods. Use .client instead.\");var r=n.client(e,{host:t.host,transport:t.transport,debug:t.debug});return t.onHeaders&&r.onHeaders(t.onHeaders),t.onMessage&&r.onMessage(t.onMessage),t.onEnd&&r.onEnd(t.onEnd),r.start(t.metadata),r.send(t.request),r.finishSend(),{close:function(){r.close()}}}},65:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Metadata=void 0;var n=r(418);Object.defineProperty(t,\"Metadata\",{enumerable:!0,get:function(){return n.BrowserHeaders}})},57:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.makeDefaultTransport=t.setDefaultTransportFactory=void 0;var n=r(859),o=function(e){return n.CrossBrowserHttpTransport({withCredentials:!1})(e)};t.setDefaultTransportFactory=function(e){o=e},t.makeDefaultTransport=function(e){return o(e)}},229:function(e,t,r){\"use strict\";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,\"__esModule\",{value:!0}),t.detectFetchSupport=t.FetchReadableStreamTransport=void 0;var o=r(65),s=r(346);t.FetchReadableStreamTransport=function(e){return function(t){return function(e,t){return e.debug&&s.debug(\"fetchRequest\",e),new i(e,t)}(t,e)}};var i=function(){function e(e,t){this.cancelled=!1,this.controller=self.AbortController&&new AbortController,this.options=e,this.init=t}return e.prototype.pump=function(e,t){var r=this;if(this.reader=e,this.cancelled)return this.options.debug&&s.debug(\"Fetch.pump.cancel at first pump\"),void this.reader.cancel().catch((function(e){r.options.debug&&s.debug(\"Fetch.pump.reader.cancel exception\",e)}));this.reader.read().then((function(e){if(e.done)return r.options.onEnd(),t;r.options.onChunk(e.value),r.pump(r.reader,t)})).catch((function(e){r.cancelled?r.options.debug&&s.debug(\"Fetch.catch - request cancelled\"):(r.cancelled=!0,r.options.debug&&s.debug(\"Fetch.catch\",e.message),r.options.onEnd(e))}))},e.prototype.send=function(e){var t=this;fetch(this.options.url,n(n({},this.init),{headers:this.metadata.toHeaders(),method:\"POST\",body:e,signal:this.controller&&this.controller.signal})).then((function(e){if(t.options.debug&&s.debug(\"Fetch.response\",e),t.options.onHeaders(new o.Metadata(e.headers),e.status),!e.body)return e;t.pump(e.body.getReader(),e)})).catch((function(e){t.cancelled?t.options.debug&&s.debug(\"Fetch.catch - request cancelled\"):(t.cancelled=!0,t.options.debug&&s.debug(\"Fetch.catch\",e.message),t.options.onEnd(e))}))},e.prototype.sendMessage=function(e){this.send(e)},e.prototype.finishSend=function(){},e.prototype.start=function(e){this.metadata=e},e.prototype.cancel=function(){var e=this;this.cancelled?this.options.debug&&s.debug(\"Fetch.cancel already cancelled\"):(this.cancelled=!0,this.controller?(this.options.debug&&s.debug(\"Fetch.cancel.controller.abort\"),this.controller.abort()):this.options.debug&&s.debug(\"Fetch.cancel.missing abort controller\"),this.reader?(this.options.debug&&s.debug(\"Fetch.cancel.reader.cancel\"),this.reader.cancel().catch((function(t){e.options.debug&&s.debug(\"Fetch.cancel.reader.cancel exception\",t)}))):this.options.debug&&s.debug(\"Fetch.cancel before reader\"))},e}();t.detectFetchSupport=function(){return\"undefined\"!=typeof Response&&Response.prototype.hasOwnProperty(\"body\")&&\"function\"==typeof Headers}},859:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CrossBrowserHttpTransport=void 0;var n=r(229),o=r(210);t.CrossBrowserHttpTransport=function(e){if(n.detectFetchSupport()){var t={credentials:e.withCredentials?\"include\":\"same-origin\"};return n.FetchReadableStreamTransport(t)}return o.XhrTransport({withCredentials:e.withCredentials})}},210:function(e,t,r){\"use strict\";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.stringToArrayBuffer=t.MozChunkedArrayBufferXHR=t.XHR=t.XhrTransport=void 0;var s=r(65),i=r(346),a=r(849);t.XhrTransport=function(e){return function(t){if(a.detectMozXHRSupport())return new d(t,e);if(a.detectXHROverrideMimeTypeSupport())return new u(t,e);throw new Error(\"This environment's XHR implementation cannot support binary transfer.\")}};var u=function(){function e(e,t){this.options=e,this.init=t}return e.prototype.onProgressEvent=function(){this.options.debug&&i.debug(\"XHR.onProgressEvent.length: \",this.xhr.response.length);var e=this.xhr.response.substr(this.index);this.index=this.xhr.response.length;var t=p(e);this.options.onChunk(t)},e.prototype.onLoadEvent=function(){this.options.debug&&i.debug(\"XHR.onLoadEvent\"),this.options.onEnd()},e.prototype.onStateChange=function(){this.options.debug&&i.debug(\"XHR.onStateChange\",this.xhr.readyState),this.xhr.readyState===XMLHttpRequest.HEADERS_RECEIVED&&this.options.onHeaders(new s.Metadata(this.xhr.getAllResponseHeaders()),this.xhr.status)},e.prototype.sendMessage=function(e){this.xhr.send(e)},e.prototype.finishSend=function(){},e.prototype.start=function(e){var t=this;this.metadata=e;var r=new XMLHttpRequest;this.xhr=r,r.open(\"POST\",this.options.url),this.configureXhr(),this.metadata.forEach((function(e,t){r.setRequestHeader(e,t.join(\", \"))})),r.withCredentials=Boolean(this.init.withCredentials),r.addEventListener(\"readystatechange\",this.onStateChange.bind(this)),r.addEventListener(\"progress\",this.onProgressEvent.bind(this)),r.addEventListener(\"loadend\",this.onLoadEvent.bind(this)),r.addEventListener(\"error\",(function(e){t.options.debug&&i.debug(\"XHR.error\",e),t.options.onEnd(e.error)}))},e.prototype.configureXhr=function(){this.xhr.responseType=\"text\",this.xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")},e.prototype.cancel=function(){this.options.debug&&i.debug(\"XHR.abort\"),this.xhr.abort()},e}();t.XHR=u;var d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.configureXhr=function(){this.options.debug&&i.debug(\"MozXHR.configureXhr: setting responseType to 'moz-chunked-arraybuffer'\"),this.xhr.responseType=\"moz-chunked-arraybuffer\"},t.prototype.onProgressEvent=function(){var e=this.xhr.response;this.options.debug&&i.debug(\"MozXHR.onProgressEvent: \",new Uint8Array(e)),this.options.onChunk(new Uint8Array(e))},t}(u);function c(e,t){var r=e.charCodeAt(t);if(r>=55296&&r<=56319){var n=e.charCodeAt(t+1);n>=56320&&n<=57343&&(r=65536+(r-55296<<10)+(n-56320))}return r}function p(e){for(var t=new Uint8Array(e.length),r=0,n=0;n<e.length;n++){var o=String.prototype.codePointAt?e.codePointAt(n):c(e,n);t[r++]=255&o}return t}t.MozChunkedArrayBufferXHR=d,t.stringToArrayBuffer=p},849:function(e,t){\"use strict\";var r;function n(){if(void 0!==r)return r;if(XMLHttpRequest){r=new XMLHttpRequest;try{r.open(\"GET\",\"https://localhost\")}catch(e){}}return r}function o(e){var t=n();if(!t)return!1;try{return t.responseType=e,t.responseType===e}catch(e){}return!1}Object.defineProperty(t,\"__esModule\",{value:!0}),t.detectXHROverrideMimeTypeSupport=t.detectMozXHRSupport=t.xhrSupportsResponseType=void 0,t.xhrSupportsResponseType=o,t.detectMozXHRSupport=function(){return\"undefined\"!=typeof XMLHttpRequest&&o(\"moz-chunked-arraybuffer\")},t.detectXHROverrideMimeTypeSupport=function(){return\"undefined\"!=typeof XMLHttpRequest&&XMLHttpRequest.prototype.hasOwnProperty(\"overrideMimeType\")}},540:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.WebsocketTransport=void 0;var n,o=r(346),s=r(617);!function(e){e[e.FINISH_SEND=1]=\"FINISH_SEND\"}(n||(n={}));var i=new Uint8Array([1]);t.WebsocketTransport=function(){return function(e){return function(e){e.debug&&o.debug(\"websocketRequest\",e);var t,r=function(e){if(\"https://\"===e.substr(0,8))return\"wss://\"+e.substr(8);if(\"http://\"===e.substr(0,7))return\"ws://\"+e.substr(7);throw new Error(\"Websocket transport constructed with non-https:// or http:// host.\")}(e.url),a=[];function u(e){if(e===n.FINISH_SEND)t.send(i);else{var r=e,o=new Int8Array(r.byteLength+1);o.set(new Uint8Array([0])),o.set(r,1),t.send(o)}}return{sendMessage:function(e){t&&t.readyState!==t.CONNECTING?u(e):a.push(e)},finishSend:function(){t&&t.readyState!==t.CONNECTING?u(n.FINISH_SEND):a.push(n.FINISH_SEND)},start:function(n){(t=new WebSocket(r,[\"grpc-websockets\"])).binaryType=\"arraybuffer\",t.onopen=function(){var r;e.debug&&o.debug(\"websocketRequest.onopen\"),t.send((r=\"\",n.forEach((function(e,t){r+=e+\": \"+t.join(\", \")+\"\\r\\n\"})),s.encodeASCII(r))),a.forEach((function(e){u(e)}))},t.onclose=function(t){e.debug&&o.debug(\"websocketRequest.onclose\",t),e.onEnd()},t.onerror=function(t){e.debug&&o.debug(\"websocketRequest.onerror\",t)},t.onmessage=function(t){e.onChunk(new Uint8Array(t.data))}},cancel:function(){e.debug&&o.debug(\"websocket.abort\"),t.close()}}}(e)}}},35:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.unary=void 0;var n=r(65),o=r(934);t.unary=function(e,t){if(e.responseStream)throw new Error(\".unary cannot be used with server-streaming methods. Use .invoke or .client instead.\");if(e.requestStream)throw new Error(\".unary cannot be used with client-streaming methods. Use .client instead.\");var r=null,s=null,i=o.client(e,{host:t.host,transport:t.transport,debug:t.debug});return i.onHeaders((function(e){r=e})),i.onMessage((function(e){s=e})),i.onEnd((function(e,o,i){t.onEnd({status:e,statusMessage:o,headers:r||new n.Metadata,message:s,trailers:i})})),i.start(t.metadata),i.send(t.request),i.finishSend(),{close:function(){i.close()}}}},882:function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.frameRequest=void 0,t.frameRequest=function(e){var t=e.serializeBinary(),r=new ArrayBuffer(t.byteLength+5);return new DataView(r,1,4).setUint32(0,t.length,!1),new Uint8Array(r,5).set(t),new Uint8Array(r)}}},t={},function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,r),o.exports}(607);var e,t}));","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nexport interface Timestamp {\n    seconds: number;\n    nanos: number;\n}\nfunction createBaseTimestamp(): Timestamp {\n    return { seconds: 0, nanos: 0 };\n}\nexport const Timestamp = {\n    encode(message: Timestamp, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Timestamp {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTimestamp();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64() as Long);\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): Timestamp {\n        return {\n            seconds: isSet(object.seconds) ? Number(object.seconds) : 0,\n            nanos: isSet(object.nanos) ? Number(object.nanos) : 0,\n        };\n    },\n    toJSON(message: Timestamp): unknown {\n        const obj: any = {};\n        message.seconds !== undefined && (obj.seconds = Math.round(message.seconds));\n        message.nanos !== undefined && (obj.nanos = Math.round(message.nanos));\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<Timestamp>, I>>(object: I): Timestamp {\n        const message = createBaseTimestamp();\n        message.seconds = object.seconds ?? 0;\n        message.nanos = object.nanos ?? 0;\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { BenchmarkName } from \"./benchmark_name\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport interface BenchmarkValue {\n    intValue: number | undefined;\n    longValue: number | undefined;\n    boolValue: boolean | undefined;\n    floatValue: number | undefined;\n}\nexport interface BenchmarkRequest {\n    benchmarkNames: BenchmarkName[];\n    expirationTimestamp: Date | undefined;\n}\nexport interface BenchmarkResult {\n    name: BenchmarkName;\n    value: BenchmarkValue | undefined;\n}\nfunction createBaseBenchmarkValue(): BenchmarkValue {\n    return { intValue: undefined, longValue: undefined, boolValue: undefined, floatValue: undefined };\n}\nexport const BenchmarkValue = {\n    encode(message: BenchmarkValue, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.intValue !== undefined) {\n            writer.uint32(8).int32(message.intValue);\n        }\n        if (message.longValue !== undefined) {\n            writer.uint32(16).int64(message.longValue);\n        }\n        if (message.boolValue !== undefined) {\n            writer.uint32(24).bool(message.boolValue);\n        }\n        if (message.floatValue !== undefined) {\n            writer.uint32(37).float(message.floatValue);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BenchmarkValue {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBenchmarkValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.intValue = reader.int32();\n                    break;\n                case 2:\n                    message.longValue = longToNumber(reader.int64() as Long);\n                    break;\n                case 3:\n                    message.boolValue = reader.bool();\n                    break;\n                case 4:\n                    message.floatValue = reader.float();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<BenchmarkValue>, I>>(object: I): BenchmarkValue {\n        const message = createBaseBenchmarkValue();\n        message.intValue = object.intValue ?? undefined;\n        message.longValue = object.longValue ?? undefined;\n        message.boolValue = object.boolValue ?? undefined;\n        message.floatValue = object.floatValue ?? undefined;\n        return message;\n    },\n};\nfunction createBaseBenchmarkRequest(): BenchmarkRequest {\n    return { benchmarkNames: [], expirationTimestamp: undefined };\n}\nexport const BenchmarkRequest = {\n    encode(message: BenchmarkRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        writer.uint32(10).fork();\n        for (const v of message.benchmarkNames) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.expirationTimestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.expirationTimestamp), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BenchmarkRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBenchmarkRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.benchmarkNames.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.benchmarkNames.push(reader.int32() as any);\n                    }\n                    break;\n                case 2:\n                    message.expirationTimestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<BenchmarkRequest>, I>>(object: I): BenchmarkRequest {\n        const message = createBaseBenchmarkRequest();\n        message.benchmarkNames = object.benchmarkNames?.map((e) => e) || [];\n        message.expirationTimestamp = object.expirationTimestamp ?? undefined;\n        return message;\n    },\n};\nfunction createBaseBenchmarkResult(): BenchmarkResult {\n    return { name: 0, value: undefined };\n}\nexport const BenchmarkResult = {\n    encode(message: BenchmarkResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.name !== 0) {\n            writer.uint32(8).int32(message.name);\n        }\n        if (message.value !== undefined) {\n            BenchmarkValue.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BenchmarkResult {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBenchmarkResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.int32() as any;\n                    break;\n                case 2:\n                    message.value = BenchmarkValue.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<BenchmarkResult>, I>>(object: I): BenchmarkResult {\n        const message = createBaseBenchmarkResult();\n        message.name = object.name ?? 0;\n        message.value =\n            object.value !== undefined && object.value !== null ? BenchmarkValue.fromPartial(object.value) : undefined;\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction toTimestamp(date: Date): Timestamp {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t: Timestamp): Date {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.common\";\nexport interface Ruid {\n    type: Ruid_Type;\n    stringValue: string;\n    loggingIdValue: string;\n}\nexport enum Ruid_Type {\n    UNSET = 0,\n    USER = 1,\n    DEVICE = 2,\n    WEB_CLIENT = 3,\n    AD_ACCOUNT = 4,\n    USERNAME = 5,\n    AD_MODERATION_AD = 6,\n    WEB_SNAPCHAT_USER = 7,\n    INTERNAL = 8,\n    AM_ORGANIZATION = 9,\n    AM_MEMBER = 10,\n    AM_SESSION = 11,\n    AM_PROFILE = 12,\n    AM_SNAPCHAT_USER = 13,\n    SNAPCHAT_ADVERTISING = 14,\n    AM_CLIENT = 15,\n    MISCHIEF = 16,\n    ARES_VISITOR = 17,\n    POD_NAME = 18,\n    UNRECOGNIZED = -1\n}\nfunction createBaseRuid(): Ruid {\n    return { type: 0, stringValue: \"\", loggingIdValue: \"\" };\n}\nexport const Ruid = {\n    encode(message: Ruid, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.stringValue !== \"\") {\n            writer.uint32(18).string(message.stringValue);\n        }\n        if (message.loggingIdValue !== \"\") {\n            writer.uint32(26).string(message.loggingIdValue);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Ruid {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRuid();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32() as any;\n                    break;\n                case 2:\n                    message.stringValue = reader.string();\n                    break;\n                case 3:\n                    message.loggingIdValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Ruid>, I>>(object: I): Ruid {\n        const message = createBaseRuid();\n        message.type = object.type ?? 0;\n        message.stringValue = object.stringValue ?? \"\";\n        message.loggingIdValue = object.loggingIdValue ?? \"\";\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nexport interface DoubleValue {\n    value: number;\n}\nexport interface FloatValue {\n    value: number;\n}\nexport interface Int64Value {\n    value: number;\n}\nexport interface UInt64Value {\n    value: number;\n}\nexport interface Int32Value {\n    value: number;\n}\nexport interface UInt32Value {\n    value: number;\n}\nexport interface BoolValue {\n    value: boolean;\n}\nexport interface StringValue {\n    value: string;\n}\nexport interface BytesValue {\n    value: Uint8Array;\n}\nfunction createBaseDoubleValue(): DoubleValue {\n    return { value: 0 };\n}\nexport const DoubleValue = {\n    encode(message: DoubleValue, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== 0) {\n            writer.uint32(9).double(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): DoubleValue {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDoubleValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.double();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<DoubleValue>, I>>(object: I): DoubleValue {\n        const message = createBaseDoubleValue();\n        message.value = object.value ?? 0;\n        return message;\n    },\n};\nfunction createBaseFloatValue(): FloatValue {\n    return { value: 0 };\n}\nexport const FloatValue = {\n    encode(message: FloatValue, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== 0) {\n            writer.uint32(13).float(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): FloatValue {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFloatValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.float();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<FloatValue>, I>>(object: I): FloatValue {\n        const message = createBaseFloatValue();\n        message.value = object.value ?? 0;\n        return message;\n    },\n};\nfunction createBaseInt64Value(): Int64Value {\n    return { value: 0 };\n}\nexport const Int64Value = {\n    encode(message: Int64Value, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== 0) {\n            writer.uint32(8).int64(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Int64Value {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseInt64Value();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = longToNumber(reader.int64() as Long);\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Int64Value>, I>>(object: I): Int64Value {\n        const message = createBaseInt64Value();\n        message.value = object.value ?? 0;\n        return message;\n    },\n};\nfunction createBaseUInt64Value(): UInt64Value {\n    return { value: 0 };\n}\nexport const UInt64Value = {\n    encode(message: UInt64Value, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== 0) {\n            writer.uint32(8).uint64(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UInt64Value {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUInt64Value();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = longToNumber(reader.uint64() as Long);\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UInt64Value>, I>>(object: I): UInt64Value {\n        const message = createBaseUInt64Value();\n        message.value = object.value ?? 0;\n        return message;\n    },\n};\nfunction createBaseInt32Value(): Int32Value {\n    return { value: 0 };\n}\nexport const Int32Value = {\n    encode(message: Int32Value, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== 0) {\n            writer.uint32(8).int32(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Int32Value {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseInt32Value();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Int32Value>, I>>(object: I): Int32Value {\n        const message = createBaseInt32Value();\n        message.value = object.value ?? 0;\n        return message;\n    },\n};\nfunction createBaseUInt32Value(): UInt32Value {\n    return { value: 0 };\n}\nexport const UInt32Value = {\n    encode(message: UInt32Value, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== 0) {\n            writer.uint32(8).uint32(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UInt32Value {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUInt32Value();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UInt32Value>, I>>(object: I): UInt32Value {\n        const message = createBaseUInt32Value();\n        message.value = object.value ?? 0;\n        return message;\n    },\n};\nfunction createBaseBoolValue(): BoolValue {\n    return { value: false };\n}\nexport const BoolValue = {\n    encode(message: BoolValue, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value === true) {\n            writer.uint32(8).bool(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BoolValue {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBoolValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<BoolValue>, I>>(object: I): BoolValue {\n        const message = createBaseBoolValue();\n        message.value = object.value ?? false;\n        return message;\n    },\n};\nfunction createBaseStringValue(): StringValue {\n    return { value: \"\" };\n}\nexport const StringValue = {\n    encode(message: StringValue, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value !== \"\") {\n            writer.uint32(10).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): StringValue {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStringValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<StringValue>, I>>(object: I): StringValue {\n        const message = createBaseStringValue();\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseBytesValue(): BytesValue {\n    return { value: new Uint8Array() };\n}\nexport const BytesValue = {\n    encode(message: BytesValue, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.value.length !== 0) {\n            writer.uint32(10).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BytesValue {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBytesValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<BytesValue>, I>>(object: I): BytesValue {\n        const message = createBaseBytesValue();\n        message.value = object.value ?? new Uint8Array();\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Namespace } from \"./namespace\";\nimport { BenchmarkResult } from \"./benchmark\";\nimport { Ruid } from \"../../common/ruid\";\nimport { BoolValue } from \"../../google/protobuf/wrappers\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport enum ConfigTargetingTriggerEventType {\n    UNKNOWN_EVENT_TYPE = 0,\n    COLD_START = 1,\n    WARM_START = 2,\n    FOREGROUND_TRIGGER = 3,\n    BACKGROUND_TRIGGER = 4,\n    UNRECOGNIZED = -1\n}\nexport enum ConfigTargetingAppState {\n    UNKNOWN_APP_STATE = 0,\n    FOREGROUND = 1,\n    BACKGROUND = 2,\n    UNRECOGNIZED = -1\n}\nexport enum ConfigTargetingInstrumentation {\n    DEFAULT_INSTRUMENTATION = 0,\n    USER_AUTHENTICATION = 1,\n    UNRECOGNIZED = -1\n}\nexport interface ConfigTargetingRequest {\n    configResultsEtag: string;\n    namespaces: Namespace[];\n    ghostId: string;\n    countryCode: string;\n    screenWidth: number;\n    screenHeight: number;\n    connectivity: Connectivity | undefined;\n    maxVideoWidthPx: number;\n    maxVideoHeightPx: number;\n    benchmarkResults: BenchmarkResult[];\n    deltaSync: boolean;\n    userAgent: string;\n    triggerEventType: ConfigTargetingTriggerEventType;\n    appState: ConfigTargetingAppState;\n    locale: string;\n    deviceId: string;\n    userId: string;\n    clientIp: string;\n    isUnAuthorized: boolean;\n    appLocale: string;\n    instrumentation: ConfigTargetingInstrumentation;\n    lastSuccessfulSync: number;\n    isLogout: boolean;\n    packageInstaller: string;\n    syncTriggerBlizzardSessionId: string;\n    syncExecutionBlizzardSessionId: string;\n    cofSyncTriggerDelayFromStartupMs: number;\n    cofSyncExecutionDelayFromStartupMs: number;\n    syncTriggerTime: number;\n    decoderEncoderAvailability: DecoderEncoderAvailablity | undefined;\n    snapkitAppId: string;\n    lenscoreVersion: number;\n    ruid: Ruid | undefined;\n    configNames: string[];\n    includeTestUserTreatments: boolean;\n    disableExposureLogging: boolean;\n    lensClusterOrig4: number;\n    clientId: string;\n}\nexport interface Connectivity {\n    networkType: Connectivity_NetworkType;\n    isMetered: boolean | undefined;\n    isRoaming: boolean | undefined;\n    carrier: string;\n}\nexport enum Connectivity_NetworkType {\n    UNKNOWN_NETWORK_TYPE = 0,\n    CELLULAR = 1,\n    WIFI = 2,\n    UNRECOGNIZED = -1\n}\nexport interface DecoderEncoderAvailablity {\n    isSnapVp9DecoderAvailable: boolean;\n    isSnapAv1DecoderAvailable: boolean;\n}\nfunction createBaseConfigTargetingRequest(): ConfigTargetingRequest {\n    return {\n        configResultsEtag: \"\",\n        namespaces: [],\n        ghostId: \"\",\n        countryCode: \"\",\n        screenWidth: 0,\n        screenHeight: 0,\n        connectivity: undefined,\n        maxVideoWidthPx: 0,\n        maxVideoHeightPx: 0,\n        benchmarkResults: [],\n        deltaSync: false,\n        userAgent: \"\",\n        triggerEventType: 0,\n        appState: 0,\n        locale: \"\",\n        deviceId: \"\",\n        userId: \"\",\n        clientIp: \"\",\n        isUnAuthorized: false,\n        appLocale: \"\",\n        instrumentation: 0,\n        lastSuccessfulSync: 0,\n        isLogout: false,\n        packageInstaller: \"\",\n        syncTriggerBlizzardSessionId: \"\",\n        syncExecutionBlizzardSessionId: \"\",\n        cofSyncTriggerDelayFromStartupMs: 0,\n        cofSyncExecutionDelayFromStartupMs: 0,\n        syncTriggerTime: 0,\n        decoderEncoderAvailability: undefined,\n        snapkitAppId: \"\",\n        lenscoreVersion: 0,\n        ruid: undefined,\n        configNames: [],\n        includeTestUserTreatments: false,\n        disableExposureLogging: false,\n        lensClusterOrig4: 0,\n        clientId: \"\",\n    };\n}\nexport const ConfigTargetingRequest = {\n    encode(message: ConfigTargetingRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configResultsEtag !== \"\") {\n            writer.uint32(10).string(message.configResultsEtag);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.namespaces) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.ghostId !== \"\") {\n            writer.uint32(26).string(message.ghostId);\n        }\n        if (message.countryCode !== \"\") {\n            writer.uint32(34).string(message.countryCode);\n        }\n        if (message.screenWidth !== 0) {\n            writer.uint32(40).int32(message.screenWidth);\n        }\n        if (message.screenHeight !== 0) {\n            writer.uint32(48).int32(message.screenHeight);\n        }\n        if (message.connectivity !== undefined) {\n            Connectivity.encode(message.connectivity, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.maxVideoWidthPx !== 0) {\n            writer.uint32(64).int32(message.maxVideoWidthPx);\n        }\n        if (message.maxVideoHeightPx !== 0) {\n            writer.uint32(72).int32(message.maxVideoHeightPx);\n        }\n        for (const v of message.benchmarkResults) {\n            BenchmarkResult.encode(v!, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.deltaSync === true) {\n            writer.uint32(88).bool(message.deltaSync);\n        }\n        if (message.userAgent !== \"\") {\n            writer.uint32(98).string(message.userAgent);\n        }\n        if (message.triggerEventType !== 0) {\n            writer.uint32(104).int32(message.triggerEventType);\n        }\n        if (message.appState !== 0) {\n            writer.uint32(112).int32(message.appState);\n        }\n        if (message.locale !== \"\") {\n            writer.uint32(122).string(message.locale);\n        }\n        if (message.deviceId !== \"\") {\n            writer.uint32(130).string(message.deviceId);\n        }\n        if (message.userId !== \"\") {\n            writer.uint32(138).string(message.userId);\n        }\n        if (message.clientIp !== \"\") {\n            writer.uint32(146).string(message.clientIp);\n        }\n        if (message.isUnAuthorized === true) {\n            writer.uint32(152).bool(message.isUnAuthorized);\n        }\n        if (message.appLocale !== \"\") {\n            writer.uint32(162).string(message.appLocale);\n        }\n        if (message.instrumentation !== 0) {\n            writer.uint32(168).int32(message.instrumentation);\n        }\n        if (message.lastSuccessfulSync !== 0) {\n            writer.uint32(176).int64(message.lastSuccessfulSync);\n        }\n        if (message.isLogout === true) {\n            writer.uint32(184).bool(message.isLogout);\n        }\n        if (message.packageInstaller !== \"\") {\n            writer.uint32(194).string(message.packageInstaller);\n        }\n        if (message.syncTriggerBlizzardSessionId !== \"\") {\n            writer.uint32(202).string(message.syncTriggerBlizzardSessionId);\n        }\n        if (message.syncExecutionBlizzardSessionId !== \"\") {\n            writer.uint32(210).string(message.syncExecutionBlizzardSessionId);\n        }\n        if (message.cofSyncTriggerDelayFromStartupMs !== 0) {\n            writer.uint32(216).int32(message.cofSyncTriggerDelayFromStartupMs);\n        }\n        if (message.cofSyncExecutionDelayFromStartupMs !== 0) {\n            writer.uint32(224).int32(message.cofSyncExecutionDelayFromStartupMs);\n        }\n        if (message.syncTriggerTime !== 0) {\n            writer.uint32(232).int64(message.syncTriggerTime);\n        }\n        if (message.decoderEncoderAvailability !== undefined) {\n            DecoderEncoderAvailablity.encode(message.decoderEncoderAvailability, writer.uint32(242).fork()).ldelim();\n        }\n        if (message.snapkitAppId !== \"\") {\n            writer.uint32(250).string(message.snapkitAppId);\n        }\n        if (message.lenscoreVersion !== 0) {\n            writer.uint32(256).int32(message.lenscoreVersion);\n        }\n        if (message.ruid !== undefined) {\n            Ruid.encode(message.ruid, writer.uint32(266).fork()).ldelim();\n        }\n        for (const v of message.configNames) {\n            writer.uint32(274).string(v!);\n        }\n        if (message.includeTestUserTreatments === true) {\n            writer.uint32(288).bool(message.includeTestUserTreatments);\n        }\n        if (message.disableExposureLogging === true) {\n            writer.uint32(296).bool(message.disableExposureLogging);\n        }\n        if (message.lensClusterOrig4 !== 0) {\n            writer.uint32(304).int32(message.lensClusterOrig4);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(314).string(message.clientId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigTargetingRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigTargetingRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResultsEtag = reader.string();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.namespaces.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.namespaces.push(reader.int32() as any);\n                    }\n                    break;\n                case 3:\n                    message.ghostId = reader.string();\n                    break;\n                case 4:\n                    message.countryCode = reader.string();\n                    break;\n                case 5:\n                    message.screenWidth = reader.int32();\n                    break;\n                case 6:\n                    message.screenHeight = reader.int32();\n                    break;\n                case 7:\n                    message.connectivity = Connectivity.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.maxVideoWidthPx = reader.int32();\n                    break;\n                case 9:\n                    message.maxVideoHeightPx = reader.int32();\n                    break;\n                case 10:\n                    message.benchmarkResults.push(BenchmarkResult.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    message.deltaSync = reader.bool();\n                    break;\n                case 12:\n                    message.userAgent = reader.string();\n                    break;\n                case 13:\n                    message.triggerEventType = reader.int32() as any;\n                    break;\n                case 14:\n                    message.appState = reader.int32() as any;\n                    break;\n                case 15:\n                    message.locale = reader.string();\n                    break;\n                case 16:\n                    message.deviceId = reader.string();\n                    break;\n                case 17:\n                    message.userId = reader.string();\n                    break;\n                case 18:\n                    message.clientIp = reader.string();\n                    break;\n                case 19:\n                    message.isUnAuthorized = reader.bool();\n                    break;\n                case 20:\n                    message.appLocale = reader.string();\n                    break;\n                case 21:\n                    message.instrumentation = reader.int32() as any;\n                    break;\n                case 22:\n                    message.lastSuccessfulSync = longToNumber(reader.int64() as Long);\n                    break;\n                case 23:\n                    message.isLogout = reader.bool();\n                    break;\n                case 24:\n                    message.packageInstaller = reader.string();\n                    break;\n                case 25:\n                    message.syncTriggerBlizzardSessionId = reader.string();\n                    break;\n                case 26:\n                    message.syncExecutionBlizzardSessionId = reader.string();\n                    break;\n                case 27:\n                    message.cofSyncTriggerDelayFromStartupMs = reader.int32();\n                    break;\n                case 28:\n                    message.cofSyncExecutionDelayFromStartupMs = reader.int32();\n                    break;\n                case 29:\n                    message.syncTriggerTime = longToNumber(reader.int64() as Long);\n                    break;\n                case 30:\n                    message.decoderEncoderAvailability = DecoderEncoderAvailablity.decode(reader, reader.uint32());\n                    break;\n                case 31:\n                    message.snapkitAppId = reader.string();\n                    break;\n                case 32:\n                    message.lenscoreVersion = reader.int32();\n                    break;\n                case 33:\n                    message.ruid = Ruid.decode(reader, reader.uint32());\n                    break;\n                case 34:\n                    message.configNames.push(reader.string());\n                    break;\n                case 36:\n                    message.includeTestUserTreatments = reader.bool();\n                    break;\n                case 37:\n                    message.disableExposureLogging = reader.bool();\n                    break;\n                case 38:\n                    message.lensClusterOrig4 = reader.int32();\n                    break;\n                case 39:\n                    message.clientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigTargetingRequest>, I>>(object: I): ConfigTargetingRequest {\n        const message = createBaseConfigTargetingRequest();\n        message.configResultsEtag = object.configResultsEtag ?? \"\";\n        message.namespaces = object.namespaces?.map((e) => e) || [];\n        message.ghostId = object.ghostId ?? \"\";\n        message.countryCode = object.countryCode ?? \"\";\n        message.screenWidth = object.screenWidth ?? 0;\n        message.screenHeight = object.screenHeight ?? 0;\n        message.connectivity =\n            object.connectivity !== undefined && object.connectivity !== null\n                ? Connectivity.fromPartial(object.connectivity)\n                : undefined;\n        message.maxVideoWidthPx = object.maxVideoWidthPx ?? 0;\n        message.maxVideoHeightPx = object.maxVideoHeightPx ?? 0;\n        message.benchmarkResults = object.benchmarkResults?.map((e) => BenchmarkResult.fromPartial(e)) || [];\n        message.deltaSync = object.deltaSync ?? false;\n        message.userAgent = object.userAgent ?? \"\";\n        message.triggerEventType = object.triggerEventType ?? 0;\n        message.appState = object.appState ?? 0;\n        message.locale = object.locale ?? \"\";\n        message.deviceId = object.deviceId ?? \"\";\n        message.userId = object.userId ?? \"\";\n        message.clientIp = object.clientIp ?? \"\";\n        message.isUnAuthorized = object.isUnAuthorized ?? false;\n        message.appLocale = object.appLocale ?? \"\";\n        message.instrumentation = object.instrumentation ?? 0;\n        message.lastSuccessfulSync = object.lastSuccessfulSync ?? 0;\n        message.isLogout = object.isLogout ?? false;\n        message.packageInstaller = object.packageInstaller ?? \"\";\n        message.syncTriggerBlizzardSessionId = object.syncTriggerBlizzardSessionId ?? \"\";\n        message.syncExecutionBlizzardSessionId = object.syncExecutionBlizzardSessionId ?? \"\";\n        message.cofSyncTriggerDelayFromStartupMs = object.cofSyncTriggerDelayFromStartupMs ?? 0;\n        message.cofSyncExecutionDelayFromStartupMs = object.cofSyncExecutionDelayFromStartupMs ?? 0;\n        message.syncTriggerTime = object.syncTriggerTime ?? 0;\n        message.decoderEncoderAvailability =\n            object.decoderEncoderAvailability !== undefined && object.decoderEncoderAvailability !== null\n                ? DecoderEncoderAvailablity.fromPartial(object.decoderEncoderAvailability)\n                : undefined;\n        message.snapkitAppId = object.snapkitAppId ?? \"\";\n        message.lenscoreVersion = object.lenscoreVersion ?? 0;\n        message.ruid = object.ruid !== undefined && object.ruid !== null ? Ruid.fromPartial(object.ruid) : undefined;\n        message.configNames = object.configNames?.map((e) => e) || [];\n        message.includeTestUserTreatments = object.includeTestUserTreatments ?? false;\n        message.disableExposureLogging = object.disableExposureLogging ?? false;\n        message.lensClusterOrig4 = object.lensClusterOrig4 ?? 0;\n        message.clientId = object.clientId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseConnectivity(): Connectivity {\n    return { networkType: 0, isMetered: undefined, isRoaming: undefined, carrier: \"\" };\n}\nexport const Connectivity = {\n    encode(message: Connectivity, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.networkType !== 0) {\n            writer.uint32(8).int32(message.networkType);\n        }\n        if (message.isMetered !== undefined) {\n            BoolValue.encode({ value: message.isMetered! }, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.isRoaming !== undefined) {\n            BoolValue.encode({ value: message.isRoaming! }, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.carrier !== \"\") {\n            writer.uint32(34).string(message.carrier);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Connectivity {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConnectivity();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.networkType = reader.int32() as any;\n                    break;\n                case 2:\n                    message.isMetered = BoolValue.decode(reader, reader.uint32()).value;\n                    break;\n                case 3:\n                    message.isRoaming = BoolValue.decode(reader, reader.uint32()).value;\n                    break;\n                case 4:\n                    message.carrier = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Connectivity>, I>>(object: I): Connectivity {\n        const message = createBaseConnectivity();\n        message.networkType = object.networkType ?? 0;\n        message.isMetered = object.isMetered ?? undefined;\n        message.isRoaming = object.isRoaming ?? undefined;\n        message.carrier = object.carrier ?? \"\";\n        return message;\n    },\n};\nfunction createBaseDecoderEncoderAvailablity(): DecoderEncoderAvailablity {\n    return { isSnapVp9DecoderAvailable: false, isSnapAv1DecoderAvailable: false };\n}\nexport const DecoderEncoderAvailablity = {\n    encode(message: DecoderEncoderAvailablity, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.isSnapVp9DecoderAvailable === true) {\n            writer.uint32(8).bool(message.isSnapVp9DecoderAvailable);\n        }\n        if (message.isSnapAv1DecoderAvailable === true) {\n            writer.uint32(16).bool(message.isSnapAv1DecoderAvailable);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): DecoderEncoderAvailablity {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDecoderEncoderAvailablity();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.isSnapVp9DecoderAvailable = reader.bool();\n                    break;\n                case 2:\n                    message.isSnapAv1DecoderAvailable = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<DecoderEncoderAvailablity>, I>>(object: I): DecoderEncoderAvailablity {\n        const message = createBaseDecoderEncoderAvailablity();\n        message.isSnapVp9DecoderAvailable = object.isSnapVp9DecoderAvailable ?? false;\n        message.isSnapAv1DecoderAvailable = object.isSnapAv1DecoderAvailable ?? false;\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Any } from \"../google/protobuf/any\";\nexport const protobufPackage = \"snapchat.common\";\nexport interface MapRecord {\n    key: string;\n    value: string;\n}\nexport interface MapRecords {\n    records: MapRecord[];\n}\nexport interface StringArray {\n    value: string[];\n}\nexport interface Value {\n    intValue: number | undefined;\n    longValue: number | undefined;\n    floatValue: number | undefined;\n    doubleValue: number | undefined;\n    boolValue: boolean | undefined;\n    stringValue: string | undefined;\n    anyValue: Any | undefined;\n    mapValue: MapRecords | undefined;\n    intPairValue: number | undefined;\n    stringArrayValue: StringArray | undefined;\n}\nfunction createBaseMapRecord(): MapRecord {\n    return { key: \"\", value: \"\" };\n}\nexport const MapRecord = {\n    encode(message: MapRecord, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): MapRecord {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMapRecord();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<MapRecord>, I>>(object: I): MapRecord {\n        const message = createBaseMapRecord();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMapRecords(): MapRecords {\n    return { records: [] };\n}\nexport const MapRecords = {\n    encode(message: MapRecords, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.records) {\n            MapRecord.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): MapRecords {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMapRecords();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.records.push(MapRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<MapRecords>, I>>(object: I): MapRecords {\n        const message = createBaseMapRecords();\n        message.records = object.records?.map((e) => MapRecord.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseStringArray(): StringArray {\n    return { value: [] };\n}\nexport const StringArray = {\n    encode(message: StringArray, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.value) {\n            writer.uint32(10).string(v!);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): StringArray {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStringArray();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<StringArray>, I>>(object: I): StringArray {\n        const message = createBaseStringArray();\n        message.value = object.value?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseValue(): Value {\n    return {\n        intValue: undefined,\n        longValue: undefined,\n        floatValue: undefined,\n        doubleValue: undefined,\n        boolValue: undefined,\n        stringValue: undefined,\n        anyValue: undefined,\n        mapValue: undefined,\n        intPairValue: undefined,\n        stringArrayValue: undefined,\n    };\n}\nexport const Value = {\n    encode(message: Value, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.intValue !== undefined) {\n            writer.uint32(8).int32(message.intValue);\n        }\n        if (message.longValue !== undefined) {\n            writer.uint32(16).int64(message.longValue);\n        }\n        if (message.floatValue !== undefined) {\n            writer.uint32(29).float(message.floatValue);\n        }\n        if (message.doubleValue !== undefined) {\n            writer.uint32(73).double(message.doubleValue);\n        }\n        if (message.boolValue !== undefined) {\n            writer.uint32(32).bool(message.boolValue);\n        }\n        if (message.stringValue !== undefined) {\n            writer.uint32(42).string(message.stringValue);\n        }\n        if (message.anyValue !== undefined) {\n            Any.encode(message.anyValue, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.mapValue !== undefined) {\n            MapRecords.encode(message.mapValue, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.intPairValue !== undefined) {\n            writer.uint32(65).fixed64(message.intPairValue);\n        }\n        if (message.stringArrayValue !== undefined) {\n            StringArray.encode(message.stringArrayValue, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Value {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.intValue = reader.int32();\n                    break;\n                case 2:\n                    message.longValue = longToNumber(reader.int64() as Long);\n                    break;\n                case 3:\n                    message.floatValue = reader.float();\n                    break;\n                case 9:\n                    message.doubleValue = reader.double();\n                    break;\n                case 4:\n                    message.boolValue = reader.bool();\n                    break;\n                case 5:\n                    message.stringValue = reader.string();\n                    break;\n                case 6:\n                    message.anyValue = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.mapValue = MapRecords.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.intPairValue = longToNumber(reader.fixed64() as Long);\n                    break;\n                case 10:\n                    message.stringArrayValue = StringArray.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Value>, I>>(object: I): Value {\n        const message = createBaseValue();\n        message.intValue = object.intValue ?? undefined;\n        message.longValue = object.longValue ?? undefined;\n        message.floatValue = object.floatValue ?? undefined;\n        message.doubleValue = object.doubleValue ?? undefined;\n        message.boolValue = object.boolValue ?? undefined;\n        message.stringValue = object.stringValue ?? undefined;\n        message.anyValue =\n            object.anyValue !== undefined && object.anyValue !== null ? Any.fromPartial(object.anyValue) : undefined;\n        message.mapValue =\n            object.mapValue !== undefined && object.mapValue !== null ? MapRecords.fromPartial(object.mapValue) : undefined;\n        message.intPairValue = object.intPairValue ?? undefined;\n        message.stringArrayValue =\n            object.stringArrayValue !== undefined && object.stringArrayValue !== null\n                ? StringArray.fromPartial(object.stringArrayValue)\n                : undefined;\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Namespace } from \"./namespace\";\nimport { Ruid_Type } from \"../../common/ruid\";\nimport { Value } from \"../../common/value\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport interface ConfigResult {\n    configId: string;\n    value: Value | undefined;\n    targetingExpression: ClientTargetingExpression | undefined;\n    ttlSeconds: number;\n    configRuleUuidBytes: Uint8Array;\n    priority: number;\n    namespace: Namespace;\n    studyName: string;\n    experimentId: number;\n    delete: boolean;\n    servePlatforms: ConfigResult_ServePlatform[];\n    sequenceId: number;\n    ruidType: Ruid_Type;\n    segmentOrdinal: number;\n    generatedFromAbAllowlists: boolean;\n    internalFields: ConfigResult_InternalFields | undefined;\n}\nexport enum ConfigResult_ServePlatform {\n    UNKNOWN_CONTEXT_PLATFORM = 0,\n    IOS_PLATFORM = 1,\n    ANDROID_PLATFORM = 2,\n    SERVER_PLATFORM = 3,\n    UNRECOGNIZED = -1\n}\nexport interface ConfigResult_InternalFields {\n    configBitmapIndex: number;\n    configResultBitmapIndex: number;\n    hasServerPropertiesOnly: boolean;\n    globalPriority: number;\n    sequenceIds: ConfigResult_InternalFields_SequenceIdCandidate[];\n    studySegmentOrdinal: number;\n    experimentGuid: number;\n    isAbStudyStatusCompleted: boolean;\n}\nexport interface ConfigResult_InternalFields_SequenceIdCandidate {\n    targetingExpression: ClientTargetingExpression | undefined;\n    sequenceId: number;\n}\nexport interface ConfigResultBundle {\n    etag: string;\n    configResults: ConfigResult[];\n}\nexport interface SequenceIdCandidate {\n    targetingExpression: ClientTargetingExpression | undefined;\n    sequenceId: number;\n}\nexport interface ClientTargetingExpression {\n    operator: ClientTargetingExpression_Operator;\n    children: ClientTargetingExpression[];\n    property: ClientTargetingExpression_Property;\n    predicateOperator: ClientTargetingExpression_PredicateOperator;\n    value: Value | undefined;\n    propertyMetadata: ClientTargetingExpression_PropertyMetadata | undefined;\n}\nexport enum ClientTargetingExpression_Operator {\n    UNKNOWN_OPERATOR = 0,\n    AND = 1,\n    OR = 2,\n    UNRECOGNIZED = -1\n}\nexport enum ClientTargetingExpression_PredicateOperator {\n    UNKNOWN_PREDICATE_OPERATOR = 0,\n    EQUAL = 1,\n    NOT_EQUAL = 2,\n    GREATER_THAN_OR_EQUAL_TO = 3,\n    LESS_THAN_OR_EQUAL_TO = 4,\n    UNRECOGNIZED = -1\n}\nexport enum ClientTargetingExpression_Property {\n    UNKNOWN_PROPERTY = 0,\n    BATTERY_LEVEL = 1,\n    IS_OFFLINE = 2,\n    IS_CHARGING = 3,\n    BANDWIDTH = 4,\n    DISK_SIZE = 5,\n    DISK_AVAILABLE = 6,\n    MEDIA_TYPE_DEPRECATED = 7,\n    IS_PUBLIC_STORY = 8,\n    IS_OFFICIAL_STORY = 9,\n    CAMERA_DIRECTION = 10,\n    CAMERA_CONTEXT = 11,\n    CAMERA_API = 12,\n    CAMERA_FLASH_STATE = 13,\n    SNAP_SOURCE = 14,\n    LEGACY_MUSHROOM_CONTENT_TYPE = 15,\n    UPLOAD_BANDWIDTH = 16,\n    CAMERA2_LEVEL = 17,\n    CAMERA_NIGHT_MODE_STATE = 18,\n    USER_LANGUAGE = 19,\n    VIDEO_DURATION = 20,\n    REALTIME_MOBILE_NETWORK_GENERATION = 21,\n    REALTIME_NETWORK_TYPE = 22,\n    REALTIME_NETWORK_IS_METERED = 23,\n    REALTIME_NETWORK_IS_ROAMING = 24,\n    CAMERA_IS_FIRST_CAPTURE = 25,\n    PICTURE_MODE = 26,\n    BOLT_USE_CASE = 27,\n    BOLT_CDN_EXPERIMENTATION_ID = 28,\n    MINS_SINCE_LAST_LENS_ACTIVATION = 29,\n    MINS_SINCE_LAST_SNAPPABLE_LENS_ACTIVATION = 30,\n    DAYS_SINCE_LAST_LOGIN_OR_OPEN = 31,\n    SPECTACLES_VERSION = 32,\n    STICKY_MAX_CONNECTION_TYPE = 33,\n    WITH_ANIMATED_OVERLAY = 34,\n    ESTIMATED_DURATION_FOR_EVENT_MS = 35,\n    URL = 36,\n    MEDIA_SOURCE = 37,\n    ASSET_TYPE = 38,\n    BOLT_IS_CONTENT_POPULAR = 39,\n    CAPTURE_MODE = 40,\n    VP9_SOFTWARE_DECODING_SUPPORTED = 41,\n    AV1_SOFTWARE_DECODING_SUPPORTED = 42,\n    WITH_MUSIC = 43,\n    FEATURE_PROVIDED_SIZE = 44,\n    MEDIA_TYPE = 45,\n    SCANNED_CATEGORY_IDS = 46,\n    CONTENT_VIEW_SOURCE = 47,\n    RECIPIENTS_SUPPORT_HEVC = 48,\n    COGNAC_APP_ID = 49,\n    EMAIL_VERIFIED = 50,\n    PHONE_VERIFIED = 51,\n    NOTIFICATION_PERM_GRANTED = 52,\n    CONTACT_PERM_GRANTED = 53,\n    MUTUAL_FRIENDS_COUNT = 54,\n    GROUPS_COUNT = 55,\n    HAS_NON_TEAM_SNAPCHAT_CONVERSATIONS = 56,\n    PLAYBACK_ITEM_TYPE = 57,\n    SUP_BOOLEAN_PROPERTY = 58,\n    SUP_INTEGER_PROPERTY = 59,\n    SUP_LONG_PROPERTY = 60,\n    SUP_STRING_PROPERTY = 61,\n    SUP_DOUBLE_PROPERTY = 62,\n    SUP_MILLIS_PROPERTY_TO_NOW = 63,\n    HAS_USED_SPECTACLES = 64,\n    SUP_SECS_PROPERTY_TO_NOW = 65,\n    BOLT_CLIENT_APP_STATE = 66,\n    EMAIL_SET = 67,\n    BITMOJI_SET = 68,\n    QUICK_TAP_CAMERA_SUPPORTED_ENABLED = 69,\n    HAS_ADD_FRIENDS_REQUEST = 70,\n    APP_LAUNCH_FROM_PUSH = 71,\n    APP_LAUNCH_TYPE = 72,\n    BILLBOARD_CAMPAIGN_LOCAL_IMPRESSION_COUNT = 73,\n    BILLBOARD_CAMPAIGN_LOCAL_LAST_IMPRESSION_TIME_SECS_TO_NOW = 74,\n    BILLBOARD_CAMPAIGN_LOCAL_CONTINUOUS_DISMISS_COUNT = 75,\n    FST_NUM_IN_APP_WARNINGS = 76,\n    FST_SHOULD_CHANGE_PASSWORD = 77,\n    FST_IS_BACKGROUND_CHECK = 78,\n    AUDIO_RECORD_PERM_GRANTED = 79,\n    MUTUAL_FRIENDS_WITH_BIRTHDAY_COUNT = 80,\n    BILLBOARD_CAMPAIGN_LOCAL_DISMISS_COUNT = 81,\n    USE_VERTICAL_NAVIGATION = 82,\n    FREEABLE_DISK_AVAILABLE = 83,\n    MEMORIES_COUNT = 84,\n    DEVICE_MODEL = 85,\n    COUNTRY = 86,\n    OS = 87,\n    OS_VERSION = 88,\n    APP_VERSION = 89,\n    BUILD_FLAVOR = 90,\n    USER_ID = 91,\n    LOCALE = 92,\n    DEVICE_CLUSTER = 93,\n    DEVICE_BRAND = 94,\n    IS_EMPLOYEE = 95,\n    USERNAME = 96,\n    IS_TEST_USER = 97,\n    USER_PROFILE = 98,\n    SCREEN_WIDTH = 99,\n    SCREEN_HEIGHT = 100,\n    HEVC_SUPPORT = 101,\n    NETWORK_TYPE = 102,\n    MAX_VIDEO_WIDTH = 103,\n    MAX_VIDEO_HEIGHT = 104,\n    IS_NETWORK_METERED = 105,\n    IS_ROAMING = 106,\n    APP_ENGAGEMENT_LEVEL = 107,\n    COMMUNICATION_ENGAGEMENT_LEVEL = 108,\n    FRIEND_STORY_ENGAGEMENT_LEVEL = 109,\n    PUBLIC_USER_STORY_ENGAGEMENT_LEVEL = 110,\n    PUBLISHER_STORY_ENGAGEMENT_LEVEL = 111,\n    LENS_ENGAGEMENT_LEVEL = 112,\n    NON_FRIEND_STORY_ENGAGEMENT_LEVEL = 113,\n    FOLLOWER_SIZE_LEVEL = 114,\n    DAYS_SINCE_CREATION = 115,\n    USER_PERSONA = 116,\n    USER_CREATION_TIME = 117,\n    MOBILE_NETWORK_TYPE = 118,\n    AGGREGATED_USER_BANDWIDTH = 119,\n    LENS_CLUSTER_BIASED = 120,\n    LENS_CLUSTER_LOG = 121,\n    LENS_CLUSTER_ORIG = 122,\n    LENS_CLUSTER_ORIG_4 = 123,\n    LENS_CLUSTER_BIASED_LOG = 124,\n    APP_LOCALE = 125,\n    DEVICE_COMMON_NAME = 126,\n    USER_FRIEND_COUNT = 127,\n    L90_COUNTRY = 128,\n    STUB = 129,\n    IS_TRUE = 130,\n    STORY_POST_RATIO = 131,\n    GENDER = 132,\n    INFERRED_AGE_BUCKET = 133,\n    STORIES = 134,\n    SENDS = 135,\n    SNAP_CREATE_L7 = 136,\n    STORY_POST_L7 = 137,\n    COMMUNICATION_L7 = 138,\n    DF_L7 = 139,\n    APP_L7 = 140,\n    DAYS_SINCE_CREATION_BUCKET = 141,\n    BIDIRECTIONAL_FRIEND_STATUS = 142,\n    STORY_POST_PREDICTION = 143,\n    APP_OPENS = 144,\n    LENS_SWIPES = 145,\n    LENS_SNAPS = 146,\n    LENS_OPS = 147,\n    W1_APP_OPENS = 148,\n    W1_LENS_SWIPES = 149,\n    W1_LENS_SNAPS = 150,\n    W1_LENS_OPS = 151,\n    W2_APP_OPENS = 152,\n    W2_LENS_SWIPES = 153,\n    W2_LENS_SNAPS = 154,\n    W2_LENS_OPS = 155,\n    W34_APP_OPENS = 156,\n    W34_LENS_SWIPES = 157,\n    W34_LENS_SNAPS = 158,\n    W34_LENS_OPS = 159,\n    LENS_SWIPES_PREDICTION = 160,\n    REGISTRATION_COUNTRY = 161,\n    IP_ASN = 162,\n    IP_REGION = 163,\n    IP_CITY = 164,\n    HAS_USER_ID = 165,\n    HAS_BITMOJI = 166,\n    NUM_APP_OPENS_LAST_8_DAYS = 167,\n    NUM_FEATURE_STORY_VIEW_DAYS_L7 = 168,\n    NUM_FEATURE_STORY_SYNC_DAYS_L7 = 169,\n    HEXAGON_NN_SUPPORTED_VERSION = 170,\n    NETWORK_QUALITY = 171,\n    DEVICE_MEMORY_MB = 172,\n    DEVICE_GL_VERSION = 173,\n    SNAP_PRO_STATUS = 174,\n    DEVICE_VP9_DECODING_SUPPORT = 175,\n    AVG_FRIEND_STORY_VIEW_COUNT_L7 = 176,\n    GAME_JOIN_TIME = 177,\n    GAME_LAST_ACTIVE_TIME = 178,\n    DAYS_SINCE_FIRST_GAME_ACTIVITY = 179,\n    DAYS_SINCE_LAST_GAME_ACTIVITY = 180,\n    PF_PAGE_SESSIONS_WITH_LONG_IMP = 181,\n    WIRELESS_CARRIER = 182,\n    MINIS_JOIN_TIME = 183,\n    MINIS_LAST_ACTIVE_TIME = 184,\n    DAYS_SINCE_FIRST_MINIS_ACTIVITY = 185,\n    DAYS_SINCE_LAST_MINIS_ACTIVITY = 186,\n    DEVICE_AV1_DECODING_SUPPORT = 187,\n    APP_PACKAGE_INSTALLER = 188,\n    STORY_VIEWS_5TH_TAB_ENGAGEMENT_LEVEL = 189,\n    REPORTED_AGE = 190,\n    ANDROID_MOBILE_SERVICES_PROVIDER = 191,\n    IS_ACQUIRED_USER = 192,\n    YDPI = 193,\n    BIDIRECTIONAL_FRIEND_STATUS_VELLUM = 194,\n    ORIGIN = 195,\n    LENSCORE_VERSION = 196,\n    SNAPKIT_APP_ID = 197,\n    GPU = 198,\n    CHIPSET_NAME = 199,\n    CHIPSET_VERSION = 200,\n    HAS_ZERO_IDFA = 201,\n    LIMIT_AD_TRACKING = 202,\n    ATT_AUTH_STATUS = 203,\n    CAMERA2_FRONT_SS_GAIN_OVER_TPA = 204,\n    ATTACHMENT_TOOL_V2 = 205,\n    USER_PERSONA_V3 = 206,\n    SNAPS_SEND_WITH_HEVC = 207,\n    SNAPS_SEND_WITHOUT_HEVC = 208,\n    CAMERA2_NATIVE_CRASH_OVER_CAMERA1 = 209,\n    CAMERA2_G2S_LATENCY_OVER_CAMERA1 = 210,\n    IS_INTERNAL = 211,\n    IS_WEB = 212,\n    APP_OPEN_TO_MAP = 213,\n    APP_OPEN_TO_FRIENDSFEED = 214,\n    APP_OPEN_TO_LENSES = 215,\n    APP_OPEN_TO_MEMORIES = 216,\n    APP_OPEN_TO_COMMUNITY = 217,\n    APP_OPEN_TO_SPOTLIGHT = 218,\n    IS_IMPACTED_BY_PINC_893 = 219,\n    DAYS_BEFORE_BIRTHDAY = 220,\n    HAS_BIPA = 221,\n    SPOTLIGHT_STORY_ENGAGEMENT_STATUS = 222,\n    INCLUSION_PANEL_MEMBER = 223,\n    HEVC_HW_DECODER = 224,\n    HEVC_SW_DECODER = 225,\n    HASH_MURMUR3_128_MOD_100 = 226,\n    HAS_ACTIVE_SNAPCHAT_PLUS = 227,\n    SNAP_KIT_OAUTH_ID = 228,\n    ORGANIZATION_TYPE = 229,\n    CHUNK_UPLOAD_SUPPORT_REQUIRED = 230,\n    CLOUDFRONT_POP = 231,\n    BILLBOARD_CAMPAIGN_LOCAL_FIRST_IMPRESSION_TIME_SECS_TO_NOW = 232,\n    BILLBOARD_CAMPAIGN_LOCAL_CLICK_COUNT = 233,\n    BILLBOARD_CAMPAIGN_LOCAL_INTERACTION_COUNT = 234,\n    BILLBOARD_CAMPAIGN_LOCAL_LAST_INTERACTION_TIME_SECS_TO_NOW = 235,\n    FST_LOCK_SCREEN_WIDGET_BILLBOARD_LAUNCHED_FROM_PUSH = 236,\n    WEB_SCREEN_WIDTH = 237,\n    WEB_SCREEN_HEIGHT = 238,\n    SUP_IOS_LOCK_SCREEN_WIDGET_ENABLED = 239,\n    SNAP_PRIVACY = 240,\n    ADS_INTERFACES_IS_NEW_ORGANIZATION = 241,\n    SERVER_ONLY = 242,\n    GHE_ORGANIZATION = 243,\n    GHE_REPOSITORY = 244,\n    GHE_USER_EMAIL = 245,\n    BUILD_DEFINITION_ID = 246,\n    BUILD_DEFINITION_NAME = 247,\n    LCA_PRINCIPAL = 248,\n    MEDIA_PERFORMANCE_CLASS = 249,\n    COMMUNITY_COUNT = 250,\n    RECIPIENTS_SUPPORT_FMP4 = 251,\n    SCREEN_ASPECT_RATIO = 252,\n    USER_GROUP = 253,\n    USER_HAS_DENIED_CAMERA_PERM = 254,\n    CAMEOS_ENGAGEMENT_LEVEL = 255,\n    HAS_CAMEOS = 256,\n    IS_ACTIVE_LENS_VIDEO_CHAT_USER = 257,\n    NUM_SPOTLIGHT_POSTS_L7 = 258,\n    NUM_MAP_POSTS_L7 = 259,\n    HAS_CREATED_PUBLIC_PROFILE = 260,\n    HAS_PUBLIC_PROFILE_ACCESS_VIA_ROLE = 261,\n    DAYS_SINCE_LAST_CAMERA_PERM_DENY = 262,\n    DAYS_SINCE_AD_ORG_JOIN = 263,\n    DAYS_SINCE_FIRST_AD_CREATE = 264,\n    ORGANIZATION_COUNTRY = 265,\n    DAYS_SINCE_FIRST_DWEB_VISIT = 266,\n    DAYS_SINCE_LAST_DWEB_VISIT = 267,\n    WEEKS_SINCE_USING_DWEB = 268,\n    HAS_LENS = 269,\n    BILLBOARD_SERVER_IMPRESSION_COUNT = 270,\n    BILLBOARD_SERVER_CLICK_COUNT = 271,\n    BILLBOARD_SERVER_DISMISS_COUNT = 272,\n    BILLBOARD_SERVER_INTERACTION_COUNT = 273,\n    BILLBOARD_SERVER_FIRST_IMPRESSION_TIME_SECS_TO_NOW = 274,\n    BILLBOARD_SERVER_LAST_IMPRESSION_TIME_SECS_TO_NOW = 275,\n    BILLBOARD_SERVER_FIRST_CLICK_TIME_SECS_TO_NOW = 276,\n    BILLBOARD_SERVER_LAST_CLICK_TIME_SECS_TO_NOW = 277,\n    BILLBOARD_SERVER_FIRST_DISMISS_TIME_SECS_TO_NOW = 278,\n    BILLBOARD_SERVER_LAST_DISMISS_TIME_SECS_TO_NOW = 279,\n    BILLBOARD_SERVER_FIRST_INTERACTION_TIME_SECS_TO_NOW = 280,\n    BILLBOARD_SERVER_LAST_INTERACTION_TIME_SECS_TO_NOW = 281,\n    BILLBOARD_SERVER_CONTINUOUS_DISMISS_COUNT = 282,\n    BILLBOARD_CAMPAIGN_LOCAL_FIRST_CLICK_TIME_SECS_TO_NOW = 283,\n    BILLBOARD_CAMPAIGN_LOCAL_LAST_CLICK_TIME_SECS_TO_NOW = 284,\n    BILLBOARD_CAMPAIGN_LOCAL_FIRST_DISMISS_TIME_SECS_TO_NOW = 285,\n    BILLBOARD_CAMPAIGN_LOCAL_LAST_DISMISS_TIME_SECS_TO_NOW = 286,\n    BILLBOARD_CAMPAIGN_LOCAL_FIRST_INTERACTION_TIME_SECS_TO_NOW = 287,\n    DAYS_SINCE_FIRST_AD_SPEND = 288,\n    DAYS_SINCE_LAST_AD_SPEND = 289,\n    SPOTLIGHT_2_PLUS_STORY_SESSION_7D_STATUS_DETAILED = 290,\n    SPOTLIGHT_5_PLUS_STORY_SESSION_7D_STATUS_DETAILED = 291,\n    SPOTLIGHT_STORY_VIEW_7D_STATUS_DETAILED = 292,\n    LAST_USER_ACCEPTED_TOS = 293,\n    UPDATED_DEVICE_CLUSTER = 294,\n    CREATOR_TIER = 295,\n    AV1_SW_DECODER = 296,\n    AV1_HW_DECODER = 297,\n    HAS_EXPLICIT_PUBLIC_PROFILE = 298,\n    LARGER_TEXT_DISPLAY_OPTION_ENABLED = 299,\n    IS_PUBLIC_POSTING_PREFERRED_USER = 300,\n    RUID = 301,\n    MUTABLE_USERNAME = 302,\n    BUDGET_GROUP_ID = 303,\n    AB_POPULATION_RANGE_HASH_FUNC = 304,\n    AB_TREATMENT_RANGE_HASH_FUNC = 305,\n    REGISTRATION_IP_REGION = 306,\n    RUID_TYPE = 307,\n    PLUS_INTERNAL_ONLY = 308,\n    COF_ROLLOUT_RANGE_HASH_FUNC = 309,\n    HAS_AI_SELFIE = 341,\n    HAS_DREAMS = 342,\n    DAYS_SINCE_LAST_ACTIVITY = 343,\n    CONTACT_PERM_OS_GRANTED = 344,\n    CONTACT_PERM_USER_GRANTED = 345,\n    LENS_CLUSTER_GPU_V2 = 346,\n    CAN_ACCESS_ADS_TAB = 347,\n    GOOGLE_CDN_POP = 348,\n    NUM_STRONG_RELATIONSHIPS_V3 = 349,\n    NUM_CLOSE_PLUS_RELATIONSHIPS_V3 = 350,\n    NUM_ACQUAINTANCE_PLUS_RELATIONSHIPS_V3 = 351,\n    DREAMS_ENGAGEMENT_STATUS = 352,\n    IS_LOW_LIGHT = 353,\n    GALLERY_HAS_2023_YEAR_END_STORY = 354,\n    CHUNK_UPLOAD_PREFERENCE = 355,\n    UNRECOGNIZED = -1\n}\nexport interface ClientTargetingExpression_PropertyMetadata {\n    itemId: number;\n    signalToHash: ClientTargetingExpression_PropertyMetadata_SignalToHash;\n    abNamespaceForHashing: string;\n    abSeedForHashing: string;\n    ruidType: Ruid_Type | undefined;\n    cofRolloutSeedForHashing: string;\n}\nexport enum ClientTargetingExpression_PropertyMetadata_SignalToHash {\n    UNKNOWN_SIGNAL_TO_HASH = 0,\n    HASH_SEED_AND_USER_ID = 1,\n    HASH_USER_ID_AND_NAMESPACE = 2,\n    UNRECOGNIZED = -1\n}\nfunction createBaseConfigResult(): ConfigResult {\n    return {\n        configId: \"\",\n        value: undefined,\n        targetingExpression: undefined,\n        ttlSeconds: 0,\n        configRuleUuidBytes: new Uint8Array(),\n        priority: 0,\n        namespace: 0,\n        studyName: \"\",\n        experimentId: 0,\n        delete: false,\n        servePlatforms: [],\n        sequenceId: 0,\n        ruidType: 0,\n        segmentOrdinal: 0,\n        generatedFromAbAllowlists: false,\n        internalFields: undefined,\n    };\n}\nexport const ConfigResult = {\n    encode(message: ConfigResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configId !== \"\") {\n            writer.uint32(10).string(message.configId);\n        }\n        if (message.value !== undefined) {\n            Value.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.targetingExpression !== undefined) {\n            ClientTargetingExpression.encode(message.targetingExpression, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.ttlSeconds !== 0) {\n            writer.uint32(32).int64(message.ttlSeconds);\n        }\n        if (message.configRuleUuidBytes.length !== 0) {\n            writer.uint32(42).bytes(message.configRuleUuidBytes);\n        }\n        if (message.priority !== 0) {\n            writer.uint32(48).int32(message.priority);\n        }\n        if (message.namespace !== 0) {\n            writer.uint32(56).int32(message.namespace);\n        }\n        if (message.studyName !== \"\") {\n            writer.uint32(66).string(message.studyName);\n        }\n        if (message.experimentId !== 0) {\n            writer.uint32(72).int32(message.experimentId);\n        }\n        if (message.delete === true) {\n            writer.uint32(80).bool(message.delete);\n        }\n        writer.uint32(90).fork();\n        for (const v of message.servePlatforms) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.sequenceId !== 0) {\n            writer.uint32(96).int32(message.sequenceId);\n        }\n        if (message.ruidType !== 0) {\n            writer.uint32(104).int32(message.ruidType);\n        }\n        if (message.segmentOrdinal !== 0) {\n            writer.uint32(112).int32(message.segmentOrdinal);\n        }\n        if (message.generatedFromAbAllowlists === true) {\n            writer.uint32(120).bool(message.generatedFromAbAllowlists);\n        }\n        if (message.internalFields !== undefined) {\n            ConfigResult_InternalFields.encode(message.internalFields, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResult {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configId = reader.string();\n                    break;\n                case 2:\n                    message.value = Value.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.targetingExpression = ClientTargetingExpression.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.ttlSeconds = longToNumber(reader.int64() as Long);\n                    break;\n                case 5:\n                    message.configRuleUuidBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.priority = reader.int32();\n                    break;\n                case 7:\n                    message.namespace = reader.int32() as any;\n                    break;\n                case 8:\n                    message.studyName = reader.string();\n                    break;\n                case 9:\n                    message.experimentId = reader.int32();\n                    break;\n                case 10:\n                    message.delete = reader.bool();\n                    break;\n                case 11:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.servePlatforms.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.servePlatforms.push(reader.int32() as any);\n                    }\n                    break;\n                case 12:\n                    message.sequenceId = reader.int32();\n                    break;\n                case 13:\n                    message.ruidType = reader.int32() as any;\n                    break;\n                case 14:\n                    message.segmentOrdinal = reader.int32();\n                    break;\n                case 15:\n                    message.generatedFromAbAllowlists = reader.bool();\n                    break;\n                case 16:\n                    message.internalFields = ConfigResult_InternalFields.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigResult>, I>>(object: I): ConfigResult {\n        const message = createBaseConfigResult();\n        message.configId = object.configId ?? \"\";\n        message.value = object.value !== undefined && object.value !== null ? Value.fromPartial(object.value) : undefined;\n        message.targetingExpression =\n            object.targetingExpression !== undefined && object.targetingExpression !== null\n                ? ClientTargetingExpression.fromPartial(object.targetingExpression)\n                : undefined;\n        message.ttlSeconds = object.ttlSeconds ?? 0;\n        message.configRuleUuidBytes = object.configRuleUuidBytes ?? new Uint8Array();\n        message.priority = object.priority ?? 0;\n        message.namespace = object.namespace ?? 0;\n        message.studyName = object.studyName ?? \"\";\n        message.experimentId = object.experimentId ?? 0;\n        message.delete = object.delete ?? false;\n        message.servePlatforms = object.servePlatforms?.map((e) => e) || [];\n        message.sequenceId = object.sequenceId ?? 0;\n        message.ruidType = object.ruidType ?? 0;\n        message.segmentOrdinal = object.segmentOrdinal ?? 0;\n        message.generatedFromAbAllowlists = object.generatedFromAbAllowlists ?? false;\n        message.internalFields =\n            object.internalFields !== undefined && object.internalFields !== null\n                ? ConfigResult_InternalFields.fromPartial(object.internalFields)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseConfigResult_InternalFields(): ConfigResult_InternalFields {\n    return {\n        configBitmapIndex: 0,\n        configResultBitmapIndex: 0,\n        hasServerPropertiesOnly: false,\n        globalPriority: 0,\n        sequenceIds: [],\n        studySegmentOrdinal: 0,\n        experimentGuid: 0,\n        isAbStudyStatusCompleted: false,\n    };\n}\nexport const ConfigResult_InternalFields = {\n    encode(message: ConfigResult_InternalFields, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configBitmapIndex !== 0) {\n            writer.uint32(8).int32(message.configBitmapIndex);\n        }\n        if (message.configResultBitmapIndex !== 0) {\n            writer.uint32(16).int32(message.configResultBitmapIndex);\n        }\n        if (message.hasServerPropertiesOnly === true) {\n            writer.uint32(24).bool(message.hasServerPropertiesOnly);\n        }\n        if (message.globalPriority !== 0) {\n            writer.uint32(32).int32(message.globalPriority);\n        }\n        for (const v of message.sequenceIds) {\n            ConfigResult_InternalFields_SequenceIdCandidate.encode(v!, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.studySegmentOrdinal !== 0) {\n            writer.uint32(48).int32(message.studySegmentOrdinal);\n        }\n        if (message.experimentGuid !== 0) {\n            writer.uint32(56).uint64(message.experimentGuid);\n        }\n        if (message.isAbStudyStatusCompleted === true) {\n            writer.uint32(64).bool(message.isAbStudyStatusCompleted);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResult_InternalFields {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigResult_InternalFields();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configBitmapIndex = reader.int32();\n                    break;\n                case 2:\n                    message.configResultBitmapIndex = reader.int32();\n                    break;\n                case 3:\n                    message.hasServerPropertiesOnly = reader.bool();\n                    break;\n                case 4:\n                    message.globalPriority = reader.int32();\n                    break;\n                case 5:\n                    message.sequenceIds.push(ConfigResult_InternalFields_SequenceIdCandidate.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.studySegmentOrdinal = reader.int32();\n                    break;\n                case 7:\n                    message.experimentGuid = longToNumber(reader.uint64() as Long);\n                    break;\n                case 8:\n                    message.isAbStudyStatusCompleted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigResult_InternalFields>, I>>(object: I): ConfigResult_InternalFields {\n        const message = createBaseConfigResult_InternalFields();\n        message.configBitmapIndex = object.configBitmapIndex ?? 0;\n        message.configResultBitmapIndex = object.configResultBitmapIndex ?? 0;\n        message.hasServerPropertiesOnly = object.hasServerPropertiesOnly ?? false;\n        message.globalPriority = object.globalPriority ?? 0;\n        message.sequenceIds =\n            object.sequenceIds?.map((e) => ConfigResult_InternalFields_SequenceIdCandidate.fromPartial(e)) || [];\n        message.studySegmentOrdinal = object.studySegmentOrdinal ?? 0;\n        message.experimentGuid = object.experimentGuid ?? 0;\n        message.isAbStudyStatusCompleted = object.isAbStudyStatusCompleted ?? false;\n        return message;\n    },\n};\nfunction createBaseConfigResult_InternalFields_SequenceIdCandidate(): ConfigResult_InternalFields_SequenceIdCandidate {\n    return { targetingExpression: undefined, sequenceId: 0 };\n}\nexport const ConfigResult_InternalFields_SequenceIdCandidate = {\n    encode(message: ConfigResult_InternalFields_SequenceIdCandidate, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.targetingExpression !== undefined) {\n            ClientTargetingExpression.encode(message.targetingExpression, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.sequenceId !== 0) {\n            writer.uint32(16).int32(message.sequenceId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResult_InternalFields_SequenceIdCandidate {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigResult_InternalFields_SequenceIdCandidate();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.targetingExpression = ClientTargetingExpression.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.sequenceId = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigResult_InternalFields_SequenceIdCandidate>, I>>(object: I): ConfigResult_InternalFields_SequenceIdCandidate {\n        const message = createBaseConfigResult_InternalFields_SequenceIdCandidate();\n        message.targetingExpression =\n            object.targetingExpression !== undefined && object.targetingExpression !== null\n                ? ClientTargetingExpression.fromPartial(object.targetingExpression)\n                : undefined;\n        message.sequenceId = object.sequenceId ?? 0;\n        return message;\n    },\n};\nfunction createBaseConfigResultBundle(): ConfigResultBundle {\n    return { etag: \"\", configResults: [] };\n}\nexport const ConfigResultBundle = {\n    encode(message: ConfigResultBundle, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.etag !== \"\") {\n            writer.uint32(10).string(message.etag);\n        }\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResultBundle {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigResultBundle();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.etag = reader.string();\n                    break;\n                case 2:\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigResultBundle>, I>>(object: I): ConfigResultBundle {\n        const message = createBaseConfigResultBundle();\n        message.etag = object.etag ?? \"\";\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseSequenceIdCandidate(): SequenceIdCandidate {\n    return { targetingExpression: undefined, sequenceId: 0 };\n}\nexport const SequenceIdCandidate = {\n    encode(message: SequenceIdCandidate, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.targetingExpression !== undefined) {\n            ClientTargetingExpression.encode(message.targetingExpression, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.sequenceId !== 0) {\n            writer.uint32(16).int32(message.sequenceId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SequenceIdCandidate {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSequenceIdCandidate();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.targetingExpression = ClientTargetingExpression.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.sequenceId = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<SequenceIdCandidate>, I>>(object: I): SequenceIdCandidate {\n        const message = createBaseSequenceIdCandidate();\n        message.targetingExpression =\n            object.targetingExpression !== undefined && object.targetingExpression !== null\n                ? ClientTargetingExpression.fromPartial(object.targetingExpression)\n                : undefined;\n        message.sequenceId = object.sequenceId ?? 0;\n        return message;\n    },\n};\nfunction createBaseClientTargetingExpression(): ClientTargetingExpression {\n    return {\n        operator: 0,\n        children: [],\n        property: 0,\n        predicateOperator: 0,\n        value: undefined,\n        propertyMetadata: undefined,\n    };\n}\nexport const ClientTargetingExpression = {\n    encode(message: ClientTargetingExpression, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.operator !== 0) {\n            writer.uint32(8).int32(message.operator);\n        }\n        for (const v of message.children) {\n            ClientTargetingExpression.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.property !== 0) {\n            writer.uint32(24).int32(message.property);\n        }\n        if (message.predicateOperator !== 0) {\n            writer.uint32(32).int32(message.predicateOperator);\n        }\n        if (message.value !== undefined) {\n            Value.encode(message.value, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.propertyMetadata !== undefined) {\n            ClientTargetingExpression_PropertyMetadata.encode(message.propertyMetadata, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ClientTargetingExpression {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseClientTargetingExpression();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operator = reader.int32() as any;\n                    break;\n                case 2:\n                    message.children.push(ClientTargetingExpression.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.property = reader.int32() as any;\n                    break;\n                case 4:\n                    message.predicateOperator = reader.int32() as any;\n                    break;\n                case 5:\n                    message.value = Value.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.propertyMetadata = ClientTargetingExpression_PropertyMetadata.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ClientTargetingExpression>, I>>(object: I): ClientTargetingExpression {\n        const message = createBaseClientTargetingExpression();\n        message.operator = object.operator ?? 0;\n        message.children = object.children?.map((e) => ClientTargetingExpression.fromPartial(e)) || [];\n        message.property = object.property ?? 0;\n        message.predicateOperator = object.predicateOperator ?? 0;\n        message.value = object.value !== undefined && object.value !== null ? Value.fromPartial(object.value) : undefined;\n        message.propertyMetadata =\n            object.propertyMetadata !== undefined && object.propertyMetadata !== null\n                ? ClientTargetingExpression_PropertyMetadata.fromPartial(object.propertyMetadata)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseClientTargetingExpression_PropertyMetadata(): ClientTargetingExpression_PropertyMetadata {\n    return {\n        itemId: 0,\n        signalToHash: 0,\n        abNamespaceForHashing: \"\",\n        abSeedForHashing: \"\",\n        ruidType: undefined,\n        cofRolloutSeedForHashing: \"\",\n    };\n}\nexport const ClientTargetingExpression_PropertyMetadata = {\n    encode(message: ClientTargetingExpression_PropertyMetadata, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.itemId !== 0) {\n            writer.uint32(8).int32(message.itemId);\n        }\n        if (message.signalToHash !== 0) {\n            writer.uint32(16).int32(message.signalToHash);\n        }\n        if (message.abNamespaceForHashing !== \"\") {\n            writer.uint32(26).string(message.abNamespaceForHashing);\n        }\n        if (message.abSeedForHashing !== \"\") {\n            writer.uint32(34).string(message.abSeedForHashing);\n        }\n        if (message.ruidType !== undefined) {\n            writer.uint32(40).int32(message.ruidType);\n        }\n        if (message.cofRolloutSeedForHashing !== \"\") {\n            writer.uint32(50).string(message.cofRolloutSeedForHashing);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ClientTargetingExpression_PropertyMetadata {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseClientTargetingExpression_PropertyMetadata();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.itemId = reader.int32();\n                    break;\n                case 2:\n                    message.signalToHash = reader.int32() as any;\n                    break;\n                case 3:\n                    message.abNamespaceForHashing = reader.string();\n                    break;\n                case 4:\n                    message.abSeedForHashing = reader.string();\n                    break;\n                case 5:\n                    message.ruidType = reader.int32() as any;\n                    break;\n                case 6:\n                    message.cofRolloutSeedForHashing = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ClientTargetingExpression_PropertyMetadata>, I>>(object: I): ClientTargetingExpression_PropertyMetadata {\n        const message = createBaseClientTargetingExpression_PropertyMetadata();\n        message.itemId = object.itemId ?? 0;\n        message.signalToHash = object.signalToHash ?? 0;\n        message.abNamespaceForHashing = object.abNamespaceForHashing ?? \"\";\n        message.abSeedForHashing = object.abSeedForHashing ?? \"\";\n        message.ruidType = object.ruidType ?? undefined;\n        message.cofRolloutSeedForHashing = object.cofRolloutSeedForHashing ?? \"\";\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { ConfigResult } from \"./config_result\";\nimport { BenchmarkRequest } from \"./benchmark\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport interface ConfigTargetingResponseDebugData {\n    abResultChecksumInput: string;\n}\nexport interface ConfigTargetingResponse {\n    configResults: ConfigResult[];\n    configResultsEtag: string;\n    benchmarkRequest: BenchmarkRequest | undefined;\n    fullResults: boolean;\n    abResultChecksum: number;\n    iso3166Alpha2CountryCodeFromRequestIp: string;\n    debugData: ConfigTargetingResponseDebugData | undefined;\n}\nfunction createBaseConfigTargetingResponseDebugData(): ConfigTargetingResponseDebugData {\n    return { abResultChecksumInput: \"\" };\n}\nexport const ConfigTargetingResponseDebugData = {\n    encode(message: ConfigTargetingResponseDebugData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.abResultChecksumInput !== \"\") {\n            writer.uint32(10).string(message.abResultChecksumInput);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigTargetingResponseDebugData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigTargetingResponseDebugData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.abResultChecksumInput = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigTargetingResponseDebugData>, I>>(object: I): ConfigTargetingResponseDebugData {\n        const message = createBaseConfigTargetingResponseDebugData();\n        message.abResultChecksumInput = object.abResultChecksumInput ?? \"\";\n        return message;\n    },\n};\nfunction createBaseConfigTargetingResponse(): ConfigTargetingResponse {\n    return {\n        configResults: [],\n        configResultsEtag: \"\",\n        benchmarkRequest: undefined,\n        fullResults: false,\n        abResultChecksum: 0,\n        iso3166Alpha2CountryCodeFromRequestIp: \"\",\n        debugData: undefined,\n    };\n}\nexport const ConfigTargetingResponse = {\n    encode(message: ConfigTargetingResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.configResultsEtag !== \"\") {\n            writer.uint32(18).string(message.configResultsEtag);\n        }\n        if (message.benchmarkRequest !== undefined) {\n            BenchmarkRequest.encode(message.benchmarkRequest, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.fullResults === true) {\n            writer.uint32(32).bool(message.fullResults);\n        }\n        if (message.abResultChecksum !== 0) {\n            writer.uint32(40).int32(message.abResultChecksum);\n        }\n        if (message.iso3166Alpha2CountryCodeFromRequestIp !== \"\") {\n            writer.uint32(50).string(message.iso3166Alpha2CountryCodeFromRequestIp);\n        }\n        if (message.debugData !== undefined) {\n            ConfigTargetingResponseDebugData.encode(message.debugData, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigTargetingResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigTargetingResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.configResultsEtag = reader.string();\n                    break;\n                case 3:\n                    message.benchmarkRequest = BenchmarkRequest.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.fullResults = reader.bool();\n                    break;\n                case 5:\n                    message.abResultChecksum = reader.int32();\n                    break;\n                case 6:\n                    message.iso3166Alpha2CountryCodeFromRequestIp = reader.string();\n                    break;\n                case 7:\n                    message.debugData = ConfigTargetingResponseDebugData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigTargetingResponse>, I>>(object: I): ConfigTargetingResponse {\n        const message = createBaseConfigTargetingResponse();\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        message.configResultsEtag = object.configResultsEtag ?? \"\";\n        message.benchmarkRequest =\n            object.benchmarkRequest !== undefined && object.benchmarkRequest !== null\n                ? BenchmarkRequest.fromPartial(object.benchmarkRequest)\n                : undefined;\n        message.fullResults = object.fullResults ?? false;\n        message.abResultChecksum = object.abResultChecksum ?? 0;\n        message.iso3166Alpha2CountryCodeFromRequestIp = object.iso3166Alpha2CountryCodeFromRequestIp ?? \"\";\n        message.debugData =\n            object.debugData !== undefined && object.debugData !== null\n                ? ConfigTargetingResponseDebugData.fromPartial(object.debugData)\n                : undefined;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport enum AbStep {\n    USER_WHITELISTED = 0,\n    USER_GROUP_WHITELISTED = 1,\n    FILTER_CONDITIONS = 2,\n    SLICE_RANGE = 3,\n    TRAFFIC_ALLOCATED = 4,\n    UNRECOGNIZED = -1\n}\nexport enum CofStep {\n    VALIDATE_REQUEST = 0,\n    REQUEST_ATLAS = 1,\n    BUILD_TARGETING_INFO = 2,\n    QUERY_INDEX = 3,\n    REQUEST_AB = 4,\n    UNRECOGNIZED = -1\n}\nexport interface AbStepInfo {\n    abStep: AbStep;\n    info: string;\n}\nexport interface CofStepInfo {\n    cofStep: CofStep;\n    info: string;\n}\nexport interface DebugTrace {\n    lastCofStep: CofStepInfo | undefined;\n    lastAbStep: AbStepInfo | undefined;\n    budgetGroupId: number;\n}\nfunction createBaseAbStepInfo(): AbStepInfo {\n    return { abStep: 0, info: \"\" };\n}\nexport const AbStepInfo = {\n    encode(message: AbStepInfo, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.abStep !== 0) {\n            writer.uint32(8).int32(message.abStep);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(18).string(message.info);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): AbStepInfo {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAbStepInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.abStep = reader.int32() as any;\n                    break;\n                case 2:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<AbStepInfo>, I>>(object: I): AbStepInfo {\n        const message = createBaseAbStepInfo();\n        message.abStep = object.abStep ?? 0;\n        message.info = object.info ?? \"\";\n        return message;\n    },\n};\nfunction createBaseCofStepInfo(): CofStepInfo {\n    return { cofStep: 0, info: \"\" };\n}\nexport const CofStepInfo = {\n    encode(message: CofStepInfo, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.cofStep !== 0) {\n            writer.uint32(8).int32(message.cofStep);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(18).string(message.info);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): CofStepInfo {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCofStepInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cofStep = reader.int32() as any;\n                    break;\n                case 2:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<CofStepInfo>, I>>(object: I): CofStepInfo {\n        const message = createBaseCofStepInfo();\n        message.cofStep = object.cofStep ?? 0;\n        message.info = object.info ?? \"\";\n        return message;\n    },\n};\nfunction createBaseDebugTrace(): DebugTrace {\n    return { lastCofStep: undefined, lastAbStep: undefined, budgetGroupId: 0 };\n}\nexport const DebugTrace = {\n    encode(message: DebugTrace, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.lastCofStep !== undefined) {\n            CofStepInfo.encode(message.lastCofStep, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastAbStep !== undefined) {\n            AbStepInfo.encode(message.lastAbStep, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.budgetGroupId !== 0) {\n            writer.uint32(24).uint32(message.budgetGroupId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): DebugTrace {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDebugTrace();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.lastCofStep = CofStepInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastAbStep = AbStepInfo.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.budgetGroupId = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<DebugTrace>, I>>(object: I): DebugTrace {\n        const message = createBaseDebugTrace();\n        message.lastCofStep =\n            object.lastCofStep !== undefined && object.lastCofStep !== null\n                ? CofStepInfo.fromPartial(object.lastCofStep)\n                : undefined;\n        message.lastAbStep =\n            object.lastAbStep !== undefined && object.lastAbStep !== null\n                ? AbStepInfo.fromPartial(object.lastAbStep)\n                : undefined;\n        message.budgetGroupId = object.budgetGroupId ?? 0;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Namespace } from \"./namespace\";\nimport { ConfigTargetingRequest } from \"./config_request\";\nimport { ConfigTargetingResponse } from \"./config_response\";\nimport { BrowserHeaders } from \"browser-headers\";\nimport { ConfigResult } from \"./config_result\";\nimport { DebugTrace } from \"./debug_info\";\nimport { Ruid } from \"../../common/ruid\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport interface GetAbConfigValuesRequest {\n    configNames: string[];\n    namespaces: Namespace[];\n    cofConfigNames: string[];\n    includeAllConfigs: boolean;\n    disableExposureLogging: boolean;\n    enableDebug: boolean;\n}\nexport interface GetAbConfigValuesResponse {\n    configResults: ConfigResult[];\n    debugTrace: DebugTrace | undefined;\n}\nexport interface ConfigSetGenerationRequest {\n    targetingParameters: ConfigTargetingRequest | undefined;\n    overrides: ConfigResult[];\n}\nexport interface ConfigSetGenerationResponse {\n    targetingResponse: ConfigTargetingResponse | undefined;\n}\nexport interface PinConfigRequest {\n    configSetToken: string;\n    userId: string;\n    ttlSeconds: number;\n}\nexport interface PinConfigResponse {\n    debug: string;\n}\nexport interface UnpinConfigRequest {\n    configSetToken: string;\n    userId: string;\n}\nexport interface UnpinConfigResponse {\n    debug: string;\n}\nexport interface ConfigWithNamespace {\n    configName: string;\n    namespace: Namespace;\n}\nexport interface GetConfigValuesByTokenRequest {\n    token: string;\n    configNames: ConfigWithNamespace[];\n    namespaces: Namespace[];\n    disableExposureLogging: boolean;\n    getAllConfigs: boolean;\n}\nexport interface GetConfigValuesByTokenResponse {\n    configResults: ConfigResult[];\n}\nexport interface GetCachedConfigResultSequenceIdsRequest {\n}\nexport interface GetCachedConfigResultSequenceIdsResponse {\n    serializedBitmap: Uint8Array;\n}\nexport interface GetConfigResultsBySequenceIdsRequest {\n    sequenceIds: number[];\n}\nexport interface ConfigResultWithSequenceId {\n    sequenceId: number;\n    configResult: ConfigResult | undefined;\n}\nexport interface GetConfigResultsBySequenceIdsResponse {\n    configResultWithSequenceIds: ConfigResultWithSequenceId[];\n}\nexport interface GetBitmapByTokenRequest {\n    token: string;\n}\nexport interface GetBitmapByTokenResponse {\n    idBitmap: Uint8Array;\n}\nexport interface GetUnevaluatedConfigResultsWithAbTargetingRequest {\n    namespaces: Namespace[];\n    edgeConfigClientVersion: string;\n}\nexport interface GetUnevaluatedConfigResultsWithAbTargetingResponse {\n    configResults: ConfigResult[];\n}\nexport interface AddRuidsForDebuggingRequest {\n    ruids: Ruid[];\n    configNames: string[];\n    maxSnapshots: number;\n}\nexport interface AddRuidsForDebuggingResponse {\n}\nfunction createBaseGetAbConfigValuesRequest(): GetAbConfigValuesRequest {\n    return {\n        configNames: [],\n        namespaces: [],\n        cofConfigNames: [],\n        includeAllConfigs: false,\n        disableExposureLogging: false,\n        enableDebug: false,\n    };\n}\nexport const GetAbConfigValuesRequest = {\n    encode(message: GetAbConfigValuesRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configNames) {\n            writer.uint32(10).string(v!);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.namespaces) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        for (const v of message.cofConfigNames) {\n            writer.uint32(26).string(v!);\n        }\n        if (message.includeAllConfigs === true) {\n            writer.uint32(32).bool(message.includeAllConfigs);\n        }\n        if (message.disableExposureLogging === true) {\n            writer.uint32(40).bool(message.disableExposureLogging);\n        }\n        if (message.enableDebug === true) {\n            writer.uint32(104).bool(message.enableDebug);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetAbConfigValuesRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetAbConfigValuesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configNames.push(reader.string());\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.namespaces.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.namespaces.push(reader.int32() as any);\n                    }\n                    break;\n                case 3:\n                    message.cofConfigNames.push(reader.string());\n                    break;\n                case 4:\n                    message.includeAllConfigs = reader.bool();\n                    break;\n                case 5:\n                    message.disableExposureLogging = reader.bool();\n                    break;\n                case 13:\n                    message.enableDebug = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetAbConfigValuesRequest>, I>>(object: I): GetAbConfigValuesRequest {\n        const message = createBaseGetAbConfigValuesRequest();\n        message.configNames = object.configNames?.map((e) => e) || [];\n        message.namespaces = object.namespaces?.map((e) => e) || [];\n        message.cofConfigNames = object.cofConfigNames?.map((e) => e) || [];\n        message.includeAllConfigs = object.includeAllConfigs ?? false;\n        message.disableExposureLogging = object.disableExposureLogging ?? false;\n        message.enableDebug = object.enableDebug ?? false;\n        return message;\n    },\n};\nfunction createBaseGetAbConfigValuesResponse(): GetAbConfigValuesResponse {\n    return { configResults: [], debugTrace: undefined };\n}\nexport const GetAbConfigValuesResponse = {\n    encode(message: GetAbConfigValuesResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.debugTrace !== undefined) {\n            DebugTrace.encode(message.debugTrace, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetAbConfigValuesResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetAbConfigValuesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.debugTrace = DebugTrace.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetAbConfigValuesResponse>, I>>(object: I): GetAbConfigValuesResponse {\n        const message = createBaseGetAbConfigValuesResponse();\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        message.debugTrace =\n            object.debugTrace !== undefined && object.debugTrace !== null\n                ? DebugTrace.fromPartial(object.debugTrace)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseConfigSetGenerationRequest(): ConfigSetGenerationRequest {\n    return { targetingParameters: undefined, overrides: [] };\n}\nexport const ConfigSetGenerationRequest = {\n    encode(message: ConfigSetGenerationRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.targetingParameters !== undefined) {\n            ConfigTargetingRequest.encode(message.targetingParameters, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.overrides) {\n            ConfigResult.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigSetGenerationRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigSetGenerationRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.targetingParameters = ConfigTargetingRequest.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.overrides.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigSetGenerationRequest>, I>>(object: I): ConfigSetGenerationRequest {\n        const message = createBaseConfigSetGenerationRequest();\n        message.targetingParameters =\n            object.targetingParameters !== undefined && object.targetingParameters !== null\n                ? ConfigTargetingRequest.fromPartial(object.targetingParameters)\n                : undefined;\n        message.overrides = object.overrides?.map((e) => ConfigResult.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseConfigSetGenerationResponse(): ConfigSetGenerationResponse {\n    return { targetingResponse: undefined };\n}\nexport const ConfigSetGenerationResponse = {\n    encode(message: ConfigSetGenerationResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.targetingResponse !== undefined) {\n            ConfigTargetingResponse.encode(message.targetingResponse, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigSetGenerationResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigSetGenerationResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.targetingResponse = ConfigTargetingResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigSetGenerationResponse>, I>>(object: I): ConfigSetGenerationResponse {\n        const message = createBaseConfigSetGenerationResponse();\n        message.targetingResponse =\n            object.targetingResponse !== undefined && object.targetingResponse !== null\n                ? ConfigTargetingResponse.fromPartial(object.targetingResponse)\n                : undefined;\n        return message;\n    },\n};\nfunction createBasePinConfigRequest(): PinConfigRequest {\n    return { configSetToken: \"\", userId: \"\", ttlSeconds: 0 };\n}\nexport const PinConfigRequest = {\n    encode(message: PinConfigRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configSetToken !== \"\") {\n            writer.uint32(10).string(message.configSetToken);\n        }\n        if (message.userId !== \"\") {\n            writer.uint32(18).string(message.userId);\n        }\n        if (message.ttlSeconds !== 0) {\n            writer.uint32(24).int32(message.ttlSeconds);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PinConfigRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePinConfigRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configSetToken = reader.string();\n                    break;\n                case 2:\n                    message.userId = reader.string();\n                    break;\n                case 3:\n                    message.ttlSeconds = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PinConfigRequest>, I>>(object: I): PinConfigRequest {\n        const message = createBasePinConfigRequest();\n        message.configSetToken = object.configSetToken ?? \"\";\n        message.userId = object.userId ?? \"\";\n        message.ttlSeconds = object.ttlSeconds ?? 0;\n        return message;\n    },\n};\nfunction createBasePinConfigResponse(): PinConfigResponse {\n    return { debug: \"\" };\n}\nexport const PinConfigResponse = {\n    encode(message: PinConfigResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.debug !== \"\") {\n            writer.uint32(10).string(message.debug);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PinConfigResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePinConfigResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.debug = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PinConfigResponse>, I>>(object: I): PinConfigResponse {\n        const message = createBasePinConfigResponse();\n        message.debug = object.debug ?? \"\";\n        return message;\n    },\n};\nfunction createBaseUnpinConfigRequest(): UnpinConfigRequest {\n    return { configSetToken: \"\", userId: \"\" };\n}\nexport const UnpinConfigRequest = {\n    encode(message: UnpinConfigRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configSetToken !== \"\") {\n            writer.uint32(10).string(message.configSetToken);\n        }\n        if (message.userId !== \"\") {\n            writer.uint32(18).string(message.userId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UnpinConfigRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUnpinConfigRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configSetToken = reader.string();\n                    break;\n                case 2:\n                    message.userId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UnpinConfigRequest>, I>>(object: I): UnpinConfigRequest {\n        const message = createBaseUnpinConfigRequest();\n        message.configSetToken = object.configSetToken ?? \"\";\n        message.userId = object.userId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseUnpinConfigResponse(): UnpinConfigResponse {\n    return { debug: \"\" };\n}\nexport const UnpinConfigResponse = {\n    encode(message: UnpinConfigResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.debug !== \"\") {\n            writer.uint32(10).string(message.debug);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UnpinConfigResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUnpinConfigResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.debug = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UnpinConfigResponse>, I>>(object: I): UnpinConfigResponse {\n        const message = createBaseUnpinConfigResponse();\n        message.debug = object.debug ?? \"\";\n        return message;\n    },\n};\nfunction createBaseConfigWithNamespace(): ConfigWithNamespace {\n    return { configName: \"\", namespace: 0 };\n}\nexport const ConfigWithNamespace = {\n    encode(message: ConfigWithNamespace, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.configName !== \"\") {\n            writer.uint32(10).string(message.configName);\n        }\n        if (message.namespace !== 0) {\n            writer.uint32(16).int32(message.namespace);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigWithNamespace {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigWithNamespace();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configName = reader.string();\n                    break;\n                case 2:\n                    message.namespace = reader.int32() as any;\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigWithNamespace>, I>>(object: I): ConfigWithNamespace {\n        const message = createBaseConfigWithNamespace();\n        message.configName = object.configName ?? \"\";\n        message.namespace = object.namespace ?? 0;\n        return message;\n    },\n};\nfunction createBaseGetConfigValuesByTokenRequest(): GetConfigValuesByTokenRequest {\n    return { token: \"\", configNames: [], namespaces: [], disableExposureLogging: false, getAllConfigs: false };\n}\nexport const GetConfigValuesByTokenRequest = {\n    encode(message: GetConfigValuesByTokenRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.token !== \"\") {\n            writer.uint32(10).string(message.token);\n        }\n        for (const v of message.configNames) {\n            ConfigWithNamespace.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        writer.uint32(26).fork();\n        for (const v of message.namespaces) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.disableExposureLogging === true) {\n            writer.uint32(32).bool(message.disableExposureLogging);\n        }\n        if (message.getAllConfigs === true) {\n            writer.uint32(40).bool(message.getAllConfigs);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigValuesByTokenRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetConfigValuesByTokenRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.token = reader.string();\n                    break;\n                case 2:\n                    message.configNames.push(ConfigWithNamespace.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.namespaces.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.namespaces.push(reader.int32() as any);\n                    }\n                    break;\n                case 4:\n                    message.disableExposureLogging = reader.bool();\n                    break;\n                case 5:\n                    message.getAllConfigs = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetConfigValuesByTokenRequest>, I>>(object: I): GetConfigValuesByTokenRequest {\n        const message = createBaseGetConfigValuesByTokenRequest();\n        message.token = object.token ?? \"\";\n        message.configNames = object.configNames?.map((e) => ConfigWithNamespace.fromPartial(e)) || [];\n        message.namespaces = object.namespaces?.map((e) => e) || [];\n        message.disableExposureLogging = object.disableExposureLogging ?? false;\n        message.getAllConfigs = object.getAllConfigs ?? false;\n        return message;\n    },\n};\nfunction createBaseGetConfigValuesByTokenResponse(): GetConfigValuesByTokenResponse {\n    return { configResults: [] };\n}\nexport const GetConfigValuesByTokenResponse = {\n    encode(message: GetConfigValuesByTokenResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigValuesByTokenResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetConfigValuesByTokenResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetConfigValuesByTokenResponse>, I>>(object: I): GetConfigValuesByTokenResponse {\n        const message = createBaseGetConfigValuesByTokenResponse();\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseGetCachedConfigResultSequenceIdsRequest(): GetCachedConfigResultSequenceIdsRequest {\n    return {};\n}\nexport const GetCachedConfigResultSequenceIdsRequest = {\n    encode(_: GetCachedConfigResultSequenceIdsRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetCachedConfigResultSequenceIdsRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetCachedConfigResultSequenceIdsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetCachedConfigResultSequenceIdsRequest>, I>>(_: I): GetCachedConfigResultSequenceIdsRequest {\n        const message = createBaseGetCachedConfigResultSequenceIdsRequest();\n        return message;\n    },\n};\nfunction createBaseGetCachedConfigResultSequenceIdsResponse(): GetCachedConfigResultSequenceIdsResponse {\n    return { serializedBitmap: new Uint8Array() };\n}\nexport const GetCachedConfigResultSequenceIdsResponse = {\n    encode(message: GetCachedConfigResultSequenceIdsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.serializedBitmap.length !== 0) {\n            writer.uint32(10).bytes(message.serializedBitmap);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetCachedConfigResultSequenceIdsResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetCachedConfigResultSequenceIdsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.serializedBitmap = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetCachedConfigResultSequenceIdsResponse>, I>>(object: I): GetCachedConfigResultSequenceIdsResponse {\n        const message = createBaseGetCachedConfigResultSequenceIdsResponse();\n        message.serializedBitmap = object.serializedBitmap ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseGetConfigResultsBySequenceIdsRequest(): GetConfigResultsBySequenceIdsRequest {\n    return { sequenceIds: [] };\n}\nexport const GetConfigResultsBySequenceIdsRequest = {\n    encode(message: GetConfigResultsBySequenceIdsRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        writer.uint32(10).fork();\n        for (const v of message.sequenceIds) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigResultsBySequenceIdsRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetConfigResultsBySequenceIdsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.sequenceIds.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.sequenceIds.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetConfigResultsBySequenceIdsRequest>, I>>(object: I): GetConfigResultsBySequenceIdsRequest {\n        const message = createBaseGetConfigResultsBySequenceIdsRequest();\n        message.sequenceIds = object.sequenceIds?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseConfigResultWithSequenceId(): ConfigResultWithSequenceId {\n    return { sequenceId: 0, configResult: undefined };\n}\nexport const ConfigResultWithSequenceId = {\n    encode(message: ConfigResultWithSequenceId, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.sequenceId !== 0) {\n            writer.uint32(8).int32(message.sequenceId);\n        }\n        if (message.configResult !== undefined) {\n            ConfigResult.encode(message.configResult, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResultWithSequenceId {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigResultWithSequenceId();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequenceId = reader.int32();\n                    break;\n                case 2:\n                    message.configResult = ConfigResult.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigResultWithSequenceId>, I>>(object: I): ConfigResultWithSequenceId {\n        const message = createBaseConfigResultWithSequenceId();\n        message.sequenceId = object.sequenceId ?? 0;\n        message.configResult =\n            object.configResult !== undefined && object.configResult !== null\n                ? ConfigResult.fromPartial(object.configResult)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseGetConfigResultsBySequenceIdsResponse(): GetConfigResultsBySequenceIdsResponse {\n    return { configResultWithSequenceIds: [] };\n}\nexport const GetConfigResultsBySequenceIdsResponse = {\n    encode(message: GetConfigResultsBySequenceIdsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResultWithSequenceIds) {\n            ConfigResultWithSequenceId.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigResultsBySequenceIdsResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetConfigResultsBySequenceIdsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResultWithSequenceIds.push(ConfigResultWithSequenceId.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetConfigResultsBySequenceIdsResponse>, I>>(object: I): GetConfigResultsBySequenceIdsResponse {\n        const message = createBaseGetConfigResultsBySequenceIdsResponse();\n        message.configResultWithSequenceIds =\n            object.configResultWithSequenceIds?.map((e) => ConfigResultWithSequenceId.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseGetBitmapByTokenRequest(): GetBitmapByTokenRequest {\n    return { token: \"\" };\n}\nexport const GetBitmapByTokenRequest = {\n    encode(message: GetBitmapByTokenRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.token !== \"\") {\n            writer.uint32(10).string(message.token);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetBitmapByTokenRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetBitmapByTokenRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.token = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetBitmapByTokenRequest>, I>>(object: I): GetBitmapByTokenRequest {\n        const message = createBaseGetBitmapByTokenRequest();\n        message.token = object.token ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetBitmapByTokenResponse(): GetBitmapByTokenResponse {\n    return { idBitmap: new Uint8Array() };\n}\nexport const GetBitmapByTokenResponse = {\n    encode(message: GetBitmapByTokenResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.idBitmap.length !== 0) {\n            writer.uint32(10).bytes(message.idBitmap);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetBitmapByTokenResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetBitmapByTokenResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.idBitmap = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetBitmapByTokenResponse>, I>>(object: I): GetBitmapByTokenResponse {\n        const message = createBaseGetBitmapByTokenResponse();\n        message.idBitmap = object.idBitmap ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseGetUnevaluatedConfigResultsWithAbTargetingRequest(): GetUnevaluatedConfigResultsWithAbTargetingRequest {\n    return { namespaces: [], edgeConfigClientVersion: \"\" };\n}\nexport const GetUnevaluatedConfigResultsWithAbTargetingRequest = {\n    encode(message: GetUnevaluatedConfigResultsWithAbTargetingRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        writer.uint32(10).fork();\n        for (const v of message.namespaces) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.edgeConfigClientVersion !== \"\") {\n            writer.uint32(18).string(message.edgeConfigClientVersion);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetUnevaluatedConfigResultsWithAbTargetingRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.namespaces.push(reader.int32() as any);\n                        }\n                    }\n                    else {\n                        message.namespaces.push(reader.int32() as any);\n                    }\n                    break;\n                case 2:\n                    message.edgeConfigClientVersion = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingRequest>, I>>(object: I): GetUnevaluatedConfigResultsWithAbTargetingRequest {\n        const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingRequest();\n        message.namespaces = object.namespaces?.map((e) => e) || [];\n        message.edgeConfigClientVersion = object.edgeConfigClientVersion ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetUnevaluatedConfigResultsWithAbTargetingResponse(): GetUnevaluatedConfigResultsWithAbTargetingResponse {\n    return { configResults: [] };\n}\nexport const GetUnevaluatedConfigResultsWithAbTargetingResponse = {\n    encode(message: GetUnevaluatedConfigResultsWithAbTargetingResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetUnevaluatedConfigResultsWithAbTargetingResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingResponse>, I>>(object: I): GetUnevaluatedConfigResultsWithAbTargetingResponse {\n        const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingResponse();\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseAddRuidsForDebuggingRequest(): AddRuidsForDebuggingRequest {\n    return { ruids: [], configNames: [], maxSnapshots: 0 };\n}\nexport const AddRuidsForDebuggingRequest = {\n    encode(message: AddRuidsForDebuggingRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.ruids) {\n            Ruid.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.configNames) {\n            writer.uint32(18).string(v!);\n        }\n        if (message.maxSnapshots !== 0) {\n            writer.uint32(24).int32(message.maxSnapshots);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): AddRuidsForDebuggingRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAddRuidsForDebuggingRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ruids.push(Ruid.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.configNames.push(reader.string());\n                    break;\n                case 3:\n                    message.maxSnapshots = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<AddRuidsForDebuggingRequest>, I>>(object: I): AddRuidsForDebuggingRequest {\n        const message = createBaseAddRuidsForDebuggingRequest();\n        message.ruids = object.ruids?.map((e) => Ruid.fromPartial(e)) || [];\n        message.configNames = object.configNames?.map((e) => e) || [];\n        message.maxSnapshots = object.maxSnapshots ?? 0;\n        return message;\n    },\n};\nfunction createBaseAddRuidsForDebuggingResponse(): AddRuidsForDebuggingResponse {\n    return {};\n}\nexport const AddRuidsForDebuggingResponse = {\n    encode(_: AddRuidsForDebuggingResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): AddRuidsForDebuggingResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAddRuidsForDebuggingResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<AddRuidsForDebuggingResponse>, I>>(_: I): AddRuidsForDebuggingResponse {\n        const message = createBaseAddRuidsForDebuggingResponse();\n        return message;\n    },\n};\nexport interface CircumstancesService {\n    targetingQuery(request: DeepPartial<ConfigTargetingRequest>, metadata?: grpc.Metadata): Promise<ConfigTargetingResponse>;\n    getAbConfigValues(request: DeepPartial<GetAbConfigValuesRequest>, metadata?: grpc.Metadata): Promise<GetAbConfigValuesResponse>;\n    getConfigValuesByToken(request: DeepPartial<GetConfigValuesByTokenRequest>, metadata?: grpc.Metadata): Promise<GetConfigValuesByTokenResponse>;\n    getConfigResultsBySequenceIds(request: DeepPartial<GetConfigResultsBySequenceIdsRequest>, metadata?: grpc.Metadata): Promise<GetConfigResultsBySequenceIdsResponse>;\n    getCachedConfigResultSequenceIds(request: DeepPartial<GetCachedConfigResultSequenceIdsRequest>, metadata?: grpc.Metadata): Promise<GetCachedConfigResultSequenceIdsResponse>;\n    getBitmapByToken(request: DeepPartial<GetBitmapByTokenRequest>, metadata?: grpc.Metadata): Promise<GetBitmapByTokenResponse>;\n    generateConfigSet(request: DeepPartial<ConfigSetGenerationRequest>, metadata?: grpc.Metadata): Promise<ConfigSetGenerationResponse>;\n    pinConfigSet(request: DeepPartial<PinConfigRequest>, metadata?: grpc.Metadata): Promise<PinConfigResponse>;\n    unpinConfigSet(request: DeepPartial<UnpinConfigRequest>, metadata?: grpc.Metadata): Promise<UnpinConfigResponse>;\n    getUnevaluatedConfigResultsWithAbTargeting(request: DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingRequest>, metadata?: grpc.Metadata): Promise<GetUnevaluatedConfigResultsWithAbTargetingResponse>;\n    addRuidsForDebugging(request: DeepPartial<AddRuidsForDebuggingRequest>, metadata?: grpc.Metadata): Promise<AddRuidsForDebuggingResponse>;\n}\nexport class CircumstancesServiceClientImpl implements CircumstancesService {\n    private readonly rpc: Rpc;\n    constructor(rpc: Rpc) {\n        this.rpc = rpc;\n        this.targetingQuery = this.targetingQuery.bind(this);\n        this.getAbConfigValues = this.getAbConfigValues.bind(this);\n        this.getConfigValuesByToken = this.getConfigValuesByToken.bind(this);\n        this.getConfigResultsBySequenceIds = this.getConfigResultsBySequenceIds.bind(this);\n        this.getCachedConfigResultSequenceIds = this.getCachedConfigResultSequenceIds.bind(this);\n        this.getBitmapByToken = this.getBitmapByToken.bind(this);\n        this.generateConfigSet = this.generateConfigSet.bind(this);\n        this.pinConfigSet = this.pinConfigSet.bind(this);\n        this.unpinConfigSet = this.unpinConfigSet.bind(this);\n        this.getUnevaluatedConfigResultsWithAbTargeting = this.getUnevaluatedConfigResultsWithAbTargeting.bind(this);\n        this.addRuidsForDebugging = this.addRuidsForDebugging.bind(this);\n    }\n    targetingQuery(request: DeepPartial<ConfigTargetingRequest>, metadata?: grpc.Metadata): Promise<ConfigTargetingResponse> {\n        return this.rpc.unary(CircumstancesServicetargetingQueryDesc, ConfigTargetingRequest.fromPartial(request), metadata);\n    }\n    getAbConfigValues(request: DeepPartial<GetAbConfigValuesRequest>, metadata?: grpc.Metadata): Promise<GetAbConfigValuesResponse> {\n        return this.rpc.unary(CircumstancesServicegetAbConfigValuesDesc, GetAbConfigValuesRequest.fromPartial(request), metadata);\n    }\n    getConfigValuesByToken(request: DeepPartial<GetConfigValuesByTokenRequest>, metadata?: grpc.Metadata): Promise<GetConfigValuesByTokenResponse> {\n        return this.rpc.unary(CircumstancesServicegetConfigValuesByTokenDesc, GetConfigValuesByTokenRequest.fromPartial(request), metadata);\n    }\n    getConfigResultsBySequenceIds(request: DeepPartial<GetConfigResultsBySequenceIdsRequest>, metadata?: grpc.Metadata): Promise<GetConfigResultsBySequenceIdsResponse> {\n        return this.rpc.unary(CircumstancesServicegetConfigResultsBySequenceIdsDesc, GetConfigResultsBySequenceIdsRequest.fromPartial(request), metadata);\n    }\n    getCachedConfigResultSequenceIds(request: DeepPartial<GetCachedConfigResultSequenceIdsRequest>, metadata?: grpc.Metadata): Promise<GetCachedConfigResultSequenceIdsResponse> {\n        return this.rpc.unary(CircumstancesServicegetCachedConfigResultSequenceIdsDesc, GetCachedConfigResultSequenceIdsRequest.fromPartial(request), metadata);\n    }\n    getBitmapByToken(request: DeepPartial<GetBitmapByTokenRequest>, metadata?: grpc.Metadata): Promise<GetBitmapByTokenResponse> {\n        return this.rpc.unary(CircumstancesServicegetBitmapByTokenDesc, GetBitmapByTokenRequest.fromPartial(request), metadata);\n    }\n    generateConfigSet(request: DeepPartial<ConfigSetGenerationRequest>, metadata?: grpc.Metadata): Promise<ConfigSetGenerationResponse> {\n        return this.rpc.unary(CircumstancesServicegenerateConfigSetDesc, ConfigSetGenerationRequest.fromPartial(request), metadata);\n    }\n    pinConfigSet(request: DeepPartial<PinConfigRequest>, metadata?: grpc.Metadata): Promise<PinConfigResponse> {\n        return this.rpc.unary(CircumstancesServicepinConfigSetDesc, PinConfigRequest.fromPartial(request), metadata);\n    }\n    unpinConfigSet(request: DeepPartial<UnpinConfigRequest>, metadata?: grpc.Metadata): Promise<UnpinConfigResponse> {\n        return this.rpc.unary(CircumstancesServiceunpinConfigSetDesc, UnpinConfigRequest.fromPartial(request), metadata);\n    }\n    getUnevaluatedConfigResultsWithAbTargeting(request: DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingRequest>, metadata?: grpc.Metadata): Promise<GetUnevaluatedConfigResultsWithAbTargetingResponse> {\n        return this.rpc.unary(CircumstancesServicegetUnevaluatedConfigResultsWithAbTargetingDesc, GetUnevaluatedConfigResultsWithAbTargetingRequest.fromPartial(request), metadata);\n    }\n    addRuidsForDebugging(request: DeepPartial<AddRuidsForDebuggingRequest>, metadata?: grpc.Metadata): Promise<AddRuidsForDebuggingResponse> {\n        return this.rpc.unary(CircumstancesServiceaddRuidsForDebuggingDesc, AddRuidsForDebuggingRequest.fromPartial(request), metadata);\n    }\n}\nexport const CircumstancesServiceDesc = {\n    serviceName: \"snapchat.cdp.cof.CircumstancesService\",\n};\nexport const CircumstancesServicetargetingQueryDesc: UnaryMethodDefinitionish = {\n    methodName: \"targetingQuery\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return ConfigTargetingRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...ConfigTargetingResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetAbConfigValuesDesc: UnaryMethodDefinitionish = {\n    methodName: \"getAbConfigValues\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetAbConfigValuesRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetAbConfigValuesResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetConfigValuesByTokenDesc: UnaryMethodDefinitionish = {\n    methodName: \"getConfigValuesByToken\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetConfigValuesByTokenRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetConfigValuesByTokenResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetConfigResultsBySequenceIdsDesc: UnaryMethodDefinitionish = {\n    methodName: \"getConfigResultsBySequenceIds\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetConfigResultsBySequenceIdsRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetConfigResultsBySequenceIdsResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetCachedConfigResultSequenceIdsDesc: UnaryMethodDefinitionish = {\n    methodName: \"getCachedConfigResultSequenceIds\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetCachedConfigResultSequenceIdsRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetCachedConfigResultSequenceIdsResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetBitmapByTokenDesc: UnaryMethodDefinitionish = {\n    methodName: \"getBitmapByToken\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetBitmapByTokenRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetBitmapByTokenResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegenerateConfigSetDesc: UnaryMethodDefinitionish = {\n    methodName: \"generateConfigSet\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return ConfigSetGenerationRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...ConfigSetGenerationResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicepinConfigSetDesc: UnaryMethodDefinitionish = {\n    methodName: \"pinConfigSet\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return PinConfigRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...PinConfigResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServiceunpinConfigSetDesc: UnaryMethodDefinitionish = {\n    methodName: \"unpinConfigSet\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return UnpinConfigRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...UnpinConfigResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServicegetUnevaluatedConfigResultsWithAbTargetingDesc: UnaryMethodDefinitionish = {\n    methodName: \"getUnevaluatedConfigResultsWithAbTargeting\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return GetUnevaluatedConfigResultsWithAbTargetingRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...GetUnevaluatedConfigResultsWithAbTargetingResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\nexport const CircumstancesServiceaddRuidsForDebuggingDesc: UnaryMethodDefinitionish = {\n    methodName: \"addRuidsForDebugging\",\n    service: CircumstancesServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return AddRuidsForDebuggingRequest.encode(this).finish();\n        },\n    } as any,\n    responseType: {\n        deserializeBinary(data: Uint8Array) {\n            return {\n                ...AddRuidsForDebuggingResponse.decode(data),\n                toObject() {\n                    return this;\n                },\n            };\n        },\n    } as any,\n};\ninterface UnaryMethodDefinitionishR extends grpc.UnaryMethodDefinition<any, any> {\n    requestStream: any;\n    responseStream: any;\n}\ntype UnaryMethodDefinitionish = UnaryMethodDefinitionishR;\ninterface Rpc {\n    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, request: any, metadata: grpc.Metadata | undefined): Promise<any>;\n}\nexport class GrpcWebImpl {\n    private host: string;\n    private options: {\n        transport?: grpc.TransportFactory;\n        debug?: boolean;\n        metadata?: grpc.Metadata;\n    };\n    constructor(host: string, options: {\n        transport?: grpc.TransportFactory;\n        debug?: boolean;\n        metadata?: grpc.Metadata;\n    }) {\n        this.host = host;\n        this.options = options;\n    }\n    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, _request: any, metadata: grpc.Metadata | undefined): Promise<any> {\n        const request = { ..._request, ...methodDesc.requestType };\n        const maybeCombinedMetadata = metadata && this.options.metadata\n            ? new BrowserHeaders({ ...this.options?.metadata.headersMap, ...metadata?.headersMap })\n            : metadata || this.options.metadata;\n        return new Promise((resolve, reject) => {\n            grpc.unary(methodDesc, {\n                request,\n                host: this.host,\n                metadata: maybeCombinedMetadata,\n                transport: this.options.transport,\n                debug: this.options.debug,\n                onEnd: function (response) {\n                    if (response.status === grpc.Code.OK) {\n                        resolve(response.message);\n                    }\n                    else {\n                        const err = new Error(response.statusMessage) as any;\n                        err.code = response.status;\n                        err.metadata = response.trailers;\n                        reject(err);\n                    }\n                },\n            });\n        });\n    }\n}\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import { ensureError } from \"../common/errorHelpers\";\nimport { cacheKeyNotFoundError } from \"../namedErrors\";\nimport { getLogger } from \"../logger/logger\";\nimport { Persistence, ValidKey } from \"../persistence/Persistence\";\nimport { OperationalMetricsReporter } from \"../metrics/operational/operationalMetricsReporter\";\nimport { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\n\nconst logger = getLogger(\"responseCachingHandler\");\nconst notFound = (key: ValidKey) => cacheKeyNotFoundError(`Response for key ${key} not found in cache.`);\nconst strategyFailed = (key: ValidKey, cause?: unknown) =>\n    new Error(`Network request and cache lookup for key ${key} both failed.`, { cause });\n\nexport type CachingStrategy<T> = (\n    key: ValidKey,\n    cache: Persistence<T>,\n    network: (metadata?: RequestMetadata) => Promise<T>\n) => Promise<T>;\n\n/**\n * Create a CachingStrategy that first makes a request to the network, falling back to cache if the network request\n * fails. If the network request fails and a prior response has not been cached, an error is returned to the caller.\n */\nexport const staleIfErrorStrategy =\n    <T>(): CachingStrategy<T> =>\n    async (key, cache, network) => {\n        try {\n            const response = await network();\n            cache.store(key, response).catch((error) => {\n                logger.warn(`staleIfErrorStrategy failed to store key ${key}.`, error);\n            });\n            return response;\n        } catch (networkError) {\n            try {\n                const cachedResponse = await cache.retrieve(key);\n                if (!cachedResponse) throw notFound(key);\n                logger.debug(\n                    `staleIfErrorStrategy successfully fell back to cache for key ${key} after network error.`,\n                    networkError\n                );\n                return cachedResponse;\n            } catch (cacheError) {\n                const error = ensureError(cacheError);\n                error.cause = networkError;\n                throw strategyFailed(key, error);\n            }\n        }\n    };\n\n/**\n * If provided these options allow staleWhileRevalidateStrategy to report cache_miss metrics.\n */\nexport interface StaleWhileRevalidateOptions {\n    requestType: string;\n    reporter: OperationalMetricsReporter;\n}\n/**\n * Create a CachingStrategy that first does a cache lookup – if the response is found in cache, it is returned and the\n * entry is updated with a request to the network in the background. If no cached response is found, the network request\n * is made, the result cached and returned to the caller.\n */\nexport const staleWhileRevalidateStrategy =\n    <T>(options?: StaleWhileRevalidateOptions): CachingStrategy<T> =>\n    async (key, cache, network) => {\n        try {\n            const cachedResponse = await cache.retrieve(key);\n            if (!cachedResponse) throw notFound(key);\n\n            // By specifying isSideEffect: true, the handler chain allows the network handler to run to completion,\n            // even though we return an immediate response from the cache. In the typical use-case, once a response has\n            // resolved, any ongoing handlers are aborted because the handler chain knows their result will not be\n            // used -- but here, the network handler is run as a side-effect to update the cache after the cached\n            // response has been resolved.\n            network({ isSideEffect: true })\n                .then((response) => cache.store(key, response))\n                .catch((error) => {\n                    logger.warn(`staleWhileRevalidateStrategy failed to retrieve and store key ${key}.`, error);\n                });\n            return cachedResponse;\n        } catch (cacheError) {\n            options?.reporter.count(\"cache_miss\", 1, new Map([[\"request_type\", options.requestType]]));\n            try {\n                const response = await network();\n                cache.store(key, response).catch((error) => {\n                    logger.warn(`staleWhileRevalidateStrategy failed to store key ${key}.`, error);\n                });\n                logger.debug(\n                    `staleWhileRevalidateStrategy successfully fell back to network for key ${key} after cache error.`,\n                    cacheError\n                );\n                return response;\n            } catch (networkError) {\n                const error = ensureError(networkError);\n                error.cause = cacheError;\n                throw strategyFailed(key, error);\n            }\n        }\n    };\n\n/**\n * Create a Handler capable of caching responses using various caching strategies.\n *\n * More than one caching strategy can be provided, and they will be composed into a single strategy. For example, an\n * expiringStrategy could be composed with a staleIfErrorStrategy so that responses\n *\n * @param cache A Persistence instance capable of storing responses.\n * @param resolveKey This function is called once for each request, and must return a valid persistence key\n * corresponding uniquely to that request.\n * @param strategy A CachingStrategy used to determine when to retrieve from cache vs. request from the network.\n * @returns\n */\nexport const createResponseCachingHandler = <Req, Res, Meta extends RequestMetadata>(\n    cache: Persistence<Res>,\n    resolveKey: (request: Req, metadata?: Meta) => ValidKey,\n    strategy: CachingStrategy<Res>\n): ChainableHandler<Req, Res, Req, Res, Meta> => {\n    return (next) => async (request, metadata) => {\n        const network = (additionalMetadata: RequestMetadata = {}) => {\n            const m = { ...metadata, ...additionalMetadata } as Meta;\n            return next(request, m);\n        };\n\n        let key: ValidKey;\n        try {\n            key = resolveKey(request, metadata);\n        } catch (error) {\n            logger.warn(\"Cache lookup failed because the cache key could not be resolved.\", error);\n            return network();\n        }\n        return strategy(key, cache, network);\n    };\n};\n","/**\n * Different persistence mechanisms (e.g. localStorage, IndexedDB) may support different key types. This type should be\n * a valid key across all concrete Persistence implementations.\n */\nexport type ValidKey = string | number;\n\nexport const isValidKey = (key: unknown): key is ValidKey => typeof key === \"string\" || typeof key === \"number\";\n\n/**\n * The abstract Persistence class defines an async interface for interacting with persistent client-side storage. This\n * is modeled as a simple key/value store.\n *\n * Subclasses may be implemented to support a variety of persistence mechanisms – e.g. localStorage, IndexedDB, etc.\n */\nexport abstract class Persistence<T> {\n    abstract size: number;\n\n    abstract retrieve(key: ValidKey): Promise<T | undefined>;\n\n    abstract retrieveAll(): Promise<Array<[ValidKey, T]>>;\n\n    abstract remove(key: ValidKey): Promise<void>;\n\n    abstract removeAll(): Promise<T[]>;\n\n    /**\n     * Persistence implementations must be capable of generating unique keys, or accepting a unique key from the\n     * caller.\n     */\n    abstract store(value: T): Promise<ValidKey>;\n    abstract store(key: ValidKey, value: T): Promise<ValidKey>;\n}\n","import { isValidKey, Persistence, ValidKey } from \"./Persistence\";\n\ntype IDBRequestPromise<T = any> = Promise<T> & { request: IDBRequest<T> };\n\ninterface EnhancedIDBTransaction {\n    tx: IDBTransaction;\n    store: IDBObjectStore;\n    done: Promise<void>;\n}\n\ninterface EnhancedIDBCursor<T> {\n    cursor: (IDBCursor & { readonly value: T }) | null;\n    continue: () => Promise<EnhancedIDBCursor<T>>;\n}\n\n/**\n * The IndexedDB API makes use of event callbacks that can be cumbersome to use. This method wraps an IDBRequest in a\n * Promise, making it easier to use.\n */\nfunction wrapRequest(request: IDBOpenDBRequest): Promise<IDBDatabase> & { request: IDBOpenDBRequest };\nfunction wrapRequest<T>(request: IDBRequest<T>): IDBRequestPromise<T>;\nfunction wrapRequest(request: IDBRequest): IDBRequestPromise {\n    const p = new Promise((resolve, reject) => {\n        request.onsuccess = () => resolve(request.result);\n        request.onerror = () => reject(request.error);\n    });\n    (p as IDBRequestPromise).request = request;\n    return p as IDBRequestPromise;\n}\n\n/**\n * IndexedDB cursor requests are unique, in that their `onsuccess` handler may be called multiple times. To support\n * this, and allow for an easier-to-use Promise-based API, we wrap the cursor request to support usage like:\n * ```ts\n * let request = await wrapCursorRequest(store.openCursor())\n * while (request.cursor) {\n *   console.log(request.cursor.key, request.cursor.value)\n *   request = await request.continue()\n * }\n * ```\n */\nfunction wrapCursorRequest<T>(request: IDBRequest<IDBCursorWithValue | null>): Promise<EnhancedIDBCursor<T>> {\n    return new Promise((resolve, reject) => {\n        request.onsuccess = () => {\n            const cursor = request.result;\n            if (!cursor) resolve({ cursor: null, continue: () => Promise.reject() });\n            else\n                resolve({\n                    cursor,\n                    continue: () => {\n                        cursor.continue();\n                        return wrapCursorRequest<T>(request);\n                    },\n                });\n        };\n        request.onerror = () => reject(request.error);\n    });\n}\n\n/**\n * Specify a database name for this {@link IndexedDBPersistence} instance to use.\n * This will be prefixed by `Snap.CameraKit`.\n *\n * A databaseVersion and objectStore may also be specified. Keep in mind the following limitations:\n * - IndexedDBPersistence currently does nothing to migrate data between versions.\n * - If two different IndexedDBPersistence instances use the same databaseName, they must also use the same objectStore.\n * Otherwise a race condition will occur which prevents the creation of all but one objectStore per database.\n */\nexport interface IndexedDBPersistenceOptions {\n    databaseName: string;\n    databaseVersion?: number;\n    objectStore?: string;\n}\n\n/**\n * A simple key/value persistence using an IndexedDB storage backend.\n *\n * See [Using IndexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB) for an\n * introduction to how IndexedDB works, its APIs, and how to use it.\n *\n * Note: Currently there is no support for database upgrades. Each instance of this class uses a single IDBObjectStore\n * object set at instantiation time, and there are no hooks for performing migrations between versions. This may be\n * added in the future if such functionality is needed.\n */\nexport class IndexedDBPersistence<T> implements Persistence<T> {\n    size: number;\n\n    private db: Promise<IDBDatabase>;\n    private readonly databaseName: string;\n    private readonly databaseVersion?: number;\n    private readonly objectStore: string;\n\n    /**\n     * Construct an {@link IndexedDBPersistence} instance corresponding to a given IndexedDB database version.\n     *\n     * Throws `ConstraintError` if the version number is invalid (e.g. NaN, or less than 1).\n     */\n    constructor(options: IndexedDBPersistenceOptions) {\n        // We'll namespace our DB names to A) avoid collisions with host applications and B) be transparent about who\n        // is using persistence.\n        this.databaseName = `Snap.CameraKit.${options.databaseName}`;\n        this.databaseVersion = options.databaseVersion;\n        this.objectStore = options.objectStore ?? options.databaseName;\n\n        // `open()` will throw if the version is invalid -- this is desirable vs. rejecting the `db` promise, since then\n        // the error is only reported when callers try to perform some operation. Instead, we want the instantiating\n        // code to see the error.\n        this.db = this.openDatabase(indexedDB.open(this.databaseName, this.databaseVersion));\n        this.size = 0;\n    }\n\n    retrieve(key: ValidKey): Promise<T | undefined> {\n        return this.simpleTransaction(\"readonly\", (store) => store.get(key));\n    }\n\n    async retrieveAll(): Promise<Array<[ValidKey, T]>> {\n        const results: Array<[ValidKey, T]> = [];\n        const { store, done } = await this.transaction(\"readonly\");\n        let request = await wrapCursorRequest<T>(store.openCursor());\n\n        while (request.cursor) {\n            results.push([request.cursor.primaryKey as ValidKey, request.cursor.value]);\n            request = await request.continue();\n        }\n\n        await done;\n        return results;\n    }\n\n    async remove(key: ValidKey): Promise<void> {\n        await this.simpleTransaction(\"readwrite\", (store) => store.delete(key));\n        this.size--;\n    }\n\n    async removeAll(): Promise<T[]> {\n        const results: T[] = [];\n        const { store, done } = await this.transaction(\"readwrite\");\n        let request = await wrapCursorRequest<T>(store.openCursor());\n        const deleteRequests: Promise<any>[] = [];\n        while (request.cursor) {\n            results.push(request.cursor.value);\n            // If any of the deletes fail (e.g. if the user deletes the object store during the transaction), it will\n            // fail the whole transaction. Since the primary expected cause of this failure mode is that the entire\n            // object store no longer exists, it's unlikely this will result in unbounded DB growth. That said, callers\n            // may want to attempt to retry the removal, or raise an alarm if the persistence size grows unexpectedly.\n            deleteRequests.push(wrapRequest(store.delete(request.cursor.key)));\n            request = await request.continue();\n        }\n        await Promise.all(deleteRequests.concat(done));\n        this.size = 0;\n        return results;\n    }\n\n    async store(value: T): Promise<ValidKey>;\n    async store(key: ValidKey, value: T): Promise<ValidKey>;\n    async store(keyOrValue: T | ValidKey, maybeValue?: T): Promise<ValidKey> {\n        const [key, value] = maybeValue === undefined ? [undefined, keyOrValue] : [keyOrValue, maybeValue];\n\n        // The key must be ValidKey | undefined.\n        if (!isValidKey(key) && typeof key !== \"undefined\")\n            throw new TypeError(`IndexedDBPersistence failed to ` + `store a value. Invalid key type: ${typeof key}`);\n\n        const storedKey = await this.simpleTransaction(\"readwrite\", (store) => store.put(value, key));\n        this.size++;\n\n        // Type safety: we already assert any given key is valid, and if the key is undefined IndexedDB will generate\n        // a numeric key (https://w3c.github.io/IndexedDB/#key-generator).\n        return storedKey as ValidKey;\n    }\n\n    private async openDatabase(request: IDBOpenDBRequest): Promise<IDBDatabase> {\n        // The `open()` call will throw if databaseVersion is invalid (e.g. < 1).\n        const dbPromise = wrapRequest(request);\n        dbPromise.request.onupgradeneeded = () => {\n            try {\n                // The following DOMExceptions may be thrown by `createObjectStore()` – they should all be logically\n                // impossible. We handle the one recoverable exception which could occur below.\n                //\n                // TransactionInactiveError: the database does not exist.\n                // InvalidStateError: `createObjectStore` was called outside a `versionchange` transaction.\n                // InvalidAccessError: `autoIncrement` is true and `keyPath` contains an empty string.\n                dbPromise.request.result.createObjectStore(this.objectStore, { autoIncrement: true });\n            } catch (error) {\n                // ConstraintError is thrown if the object store already exists. Could happen if multiple tabs to the\n                // same domain are opened and race to create the object store. In this case we can safely ignore the\n                // error and continue.\n                if (error instanceof DOMException && error.name === \"ConstraintError\") return;\n                throw error;\n            }\n        };\n        const db = await dbPromise;\n        db.onclose = () => {\n            // The 'close` event fires when the DB is unexpectedly closed (e.g. user clears application data). We'll\n            // attempt to re-open it (which may fail, in which case no further attempts will be made, and all future\n            // transactions will fail).\n            this.db = this.openDatabase(indexedDB.open(this.databaseName, this.databaseVersion));\n        };\n        return db;\n    }\n\n    private async simpleTransaction<R>(\n        mode: IDBTransactionMode,\n        operation: (tx: IDBObjectStore) => IDBRequest<R>\n    ): Promise<R> {\n        const { store, done } = await this.transaction(mode);\n        const [result] = await Promise.all([wrapRequest(operation(store)), done]);\n        return result;\n    }\n\n    private async transaction(mode: IDBTransactionMode): Promise<EnhancedIDBTransaction> {\n        const db = await this.db;\n        // The following DOMExceptions may be thrown – they should all be logically impossible, or could be\n        // triggered by the user deleting or modifying the database (e.g. via DevTools) at the right time. We won't\n        // attempt to recover from them now, but may decide to do so in the future (if we see them in the wild).\n        //\n        // InvalidStateError: `close()` has previously been called on the IDBDatabase\n        // NotFoundError: the object store does not exist.\n        // TypeError: the `mode` parameter is invalid.\n        // InvalidAccessError: the function was called with an empty list of object stores.\n        const tx = db.transaction(this.objectStore, mode);\n\n        // Similarly, the following DOMExceptions may be thrown by `objectStore()`:\n        //\n        // InvalidStateError: the transaction has already completed.\n        // NotFoundError: the object store is not in the transaction's scope.\n        const store = tx.objectStore(this.objectStore);\n        const done = new Promise<void>((resolve, reject) => {\n            tx.oncomplete = () => resolve();\n            tx.onerror = () => reject(tx.error);\n            tx.onabort = () => reject(new DOMException(\"The transaction was aborted\", \"AbortError\"));\n        });\n        return { tx, store, done };\n    }\n}\n","import { PageVisibility } from \"../common/pageVisibility\";\nimport { ChainableHandler, Handler, RequestMetadata } from \"./HandlerChainBuilder\";\n\ninterface MappableRequest<T> {\n    map: () => T | Promise<T>;\n    next: (request: T) => Promise<void>;\n    reject: (reason: unknown) => void;\n}\n\n/**\n * Map from one request type to another, potentially asynchronously.\n *\n * **NOTE:** If `maxMapConcurrency` is set to some finite number, and more requests are handled than are allowed to\n * be concurrently mapped, the waiting requests will be placed into a unbounded buffer. If, for example, requests are\n * handled with high frequency, `maxMapConcurrency` is low, and the `map` function returns a long-running Promise, this\n * buffer could use a large amount of memory. Keep this in mind when using this handler.\n *\n * @param map Transform each request, may be sync or async.\n * @param pageVisibility Determines whether to flush buffered requests when the page becomes hidden.\n * `false` value indicates that page visibility handling is avoided, while\n * a {@link PageVisibility} instance is used to subscribe to page visibility change events.\n * @param maxMapConcurrency If the `map` function is async, it will be invoked at most this number of times\n * concurrently. Setting this to 1 could be useful if it's important for `map` to be called in serial.\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createMappingHandler = <Req, MappedReq, Res, Meta extends RequestMetadata>(\n    map: (request: Req) => MappedReq | Promise<MappedReq>,\n    pageVisibility: PageVisibility | false,\n    maxMapConcurrency: number = Number.POSITIVE_INFINITY\n): ChainableHandler<Req, Res, MappedReq, Res, Meta> => {\n    const buffer: MappableRequest<MappedReq>[] = [];\n    let mapConcurrency = 0;\n\n    const processRequest = async (request: MappableRequest<MappedReq>) => {\n        try {\n            mapConcurrency++;\n            const mapped = request.map();\n            // We want to make sure that if the mapping operation is not async, we don't introduce asynchronicity here\n            // (which unfortunately happens even if you `await` a non-Promise value). This is important so that e.g.\n            // handlers which run when the page is terminated can send requests synchronously, since the browser may\n            // not pick up any async handlers registered to run on the following event loop.\n            if (mapped instanceof Promise) request.next(await mapped);\n            else if (mapped) request.next(mapped);\n        } catch (error) {\n            request.reject(error);\n        } finally {\n            mapConcurrency--;\n        }\n        while (buffer.length > 0 && mapConcurrency < maxMapConcurrency) {\n            // Safety: we just checked for `buffer.length > 0`, so the shifted value will never be undefined.\n            processRequest(buffer.shift()!);\n        }\n    };\n\n    // This may indicate that the page is being unloaded, in which case we may want to flush any buffered requests\n    // regardless of our max concurrency – otherwise those requests will be lost when the page terminates.\n    if (pageVisibility) {\n        pageVisibility.onPageHidden(() => {\n            while (buffer.length > 0) processRequest(buffer.shift()!);\n        });\n    }\n\n    return (next: Handler<MappedReq, Res, Meta>) => (request: Req, metadata?: Meta) => {\n        return new Promise<Res>((resolve, reject) => {\n            const mappableRequest: MappableRequest<MappedReq> = {\n                map: () => map(request),\n                next: (mappedRequest) => next(mappedRequest, metadata).then(resolve).catch(reject),\n                reject,\n            };\n            if (mapConcurrency < maxMapConcurrency) processRequest(mappableRequest);\n            else buffer.push(mappableRequest);\n        });\n    };\n};\n","import { PageVisibility } from \"../common/pageVisibility\";\nimport { ChainableHandler, Handler, RequestMetadata } from \"./HandlerChainBuilder\";\nimport { createMappingHandler } from \"./mappingHandler\";\n\nexport interface BatchingHandlerOptions<Req, BatchReq> {\n    batchReduce: (batch: BatchReq | undefined, req: Req) => BatchReq | Promise<BatchReq>;\n    isBatchComplete: (batch: BatchReq) => boolean;\n    maxBatchAge?: number;\n    /**\n     * Determines whether to flush buffered requests when the page becomes hidden.\n     * `false` value indicates that page visibility handling is avoided, while\n     * a {@link PageVisibility} instance is used to subscribe to page visibility change events.\n     */\n    pageVisibility: PageVisibility | false;\n}\n\n/**\n * Accumulate requests into batches, which are then sent to the next handler in the chain. Batches are sent when either:\n * - the given `isBatchComplete` function returns true, closing the current batch and sending it down the chain.\n * - an optional `maxBatchAge` time has elapsed since the first request in the batch was received.\n * - the page terminates.\n *\n * When handling a request, the Promise returned will resolve when that request has been successfully added to the\n * current batch – **NOT** when that batch has been successfully processed by the rest of the handler chain.\n *\n * The `next` handler in the chain will receive the batch and should handle any errors arising from further processing\n * on the batch (e.g. sending it to a server).\n *\n * **Note:** This handler does not support aborting handled requests via AbortSignal.\n *\n * @param options\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createBatchingHandler = <Req, BatchReq, BatchRes, Meta extends RequestMetadata>({\n    batchReduce,\n    isBatchComplete,\n    maxBatchAge,\n    pageVisibility,\n}: BatchingHandlerOptions<Req, BatchReq>): ChainableHandler<Req, void, BatchReq, BatchRes, Meta> => {\n    // TODO: this should just be `number`, but we're picking up NodeJS types (@types/node) when building, so setTimeout\n    // gets a different return type than what it should have in the browser. We should build without NodeJS types, but\n    // that will require some fixes across the codebase.\n    let batchTimeout: ReturnType<typeof setTimeout>;\n    let currentBatch: BatchReq | undefined = undefined;\n    let clearOnHidden = () => {};\n\n    const reducingHandler = createMappingHandler<Req, BatchReq, void, Meta>(\n        async (request) => {\n            currentBatch = await batchReduce(currentBatch, request);\n            return currentBatch;\n        },\n        pageVisibility,\n        1\n    );\n\n    const batchAndSend = (next: Handler<BatchReq, BatchRes, Meta>, request?: Req, metadata?: Meta) => {\n        const batch = request ? batchReduce(currentBatch, request) : currentBatch;\n        if (!batch) return;\n\n        // `next` should handle its own errors – that is, the batchingHandler is meant to be placed in a handler chain\n        // prior to any error logging, retrying, etc. handlers.\n        const complete =\n            batch instanceof Promise\n                ? batch.then((b) => next(b, metadata)).catch(() => {})\n                : next(batch, metadata).catch(() => {});\n\n        currentBatch = undefined;\n        clearTimeout(batchTimeout);\n        clearOnHidden();\n\n        return complete;\n    };\n\n    return (next) => async (request, metadata) => {\n        // Requests may be made while the page is transitioning to hidden – for example, the page is being unloaded and\n        // we're reporting final metrics. In this case, we need to skip batching and synchronously call `next` so that\n        // the request is not lost.\n        if (pageVisibility && pageVisibility.isDuringVisibilityTransition(\"hidden\")) {\n            await batchAndSend(next, request, metadata);\n            return;\n        }\n\n        // If this is the first request in a batch, we need to set up some callbacks to flush the batch when certain\n        // events occur:\n        //\n        // - maxBatchAge time passes.\n        // - page visibility transitions to hidden (which could indicate the page is being unloaded).\n        //\n        if (currentBatch === undefined) {\n            const sendBatch = () => batchAndSend(next, undefined, metadata);\n            if (maxBatchAge !== undefined) batchTimeout = setTimeout(sendBatch, maxBatchAge);\n            if (pageVisibility) clearOnHidden = pageVisibility.onPageHidden(sendBatch);\n        }\n\n        const handle = reducingHandler(async () => {\n            if (!currentBatch) return;\n            if (!isBatchComplete(currentBatch)) return;\n            await batchAndSend(next, undefined, metadata);\n        });\n\n        return handle(request, metadata);\n    };\n};\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport interface RankingData {\n    sessionId: string;\n    locale: string;\n    osType: RankingData_OSType;\n    connectivityType: RankingData_ConnectivityType;\n}\nexport enum RankingData_OSType {\n    OS_TYPE_UNSET = 0,\n    OS_TYPE_ANDROID = 1,\n    OS_TYPE_IOS = 2,\n    OS_TYPE_IPAD_OS = 3,\n    OS_TYPE_MAC_OS = 4,\n    OS_TYPE_WINDOWS = 5,\n    OS_TYPE_LINUX = 6,\n    UNRECOGNIZED = -1\n}\nexport function rankingData_OSTypeFromJSON(object: any): RankingData_OSType {\n    switch (object) {\n        case 0:\n        case \"OS_TYPE_UNSET\":\n            return RankingData_OSType.OS_TYPE_UNSET;\n        case 1:\n        case \"OS_TYPE_ANDROID\":\n            return RankingData_OSType.OS_TYPE_ANDROID;\n        case 2:\n        case \"OS_TYPE_IOS\":\n            return RankingData_OSType.OS_TYPE_IOS;\n        case 3:\n        case \"OS_TYPE_IPAD_OS\":\n            return RankingData_OSType.OS_TYPE_IPAD_OS;\n        case 4:\n        case \"OS_TYPE_MAC_OS\":\n            return RankingData_OSType.OS_TYPE_MAC_OS;\n        case 5:\n        case \"OS_TYPE_WINDOWS\":\n            return RankingData_OSType.OS_TYPE_WINDOWS;\n        case 6:\n        case \"OS_TYPE_LINUX\":\n            return RankingData_OSType.OS_TYPE_LINUX;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return RankingData_OSType.UNRECOGNIZED;\n    }\n}\nexport function rankingData_OSTypeToJSON(object: RankingData_OSType): string {\n    switch (object) {\n        case RankingData_OSType.OS_TYPE_UNSET:\n            return \"OS_TYPE_UNSET\";\n        case RankingData_OSType.OS_TYPE_ANDROID:\n            return \"OS_TYPE_ANDROID\";\n        case RankingData_OSType.OS_TYPE_IOS:\n            return \"OS_TYPE_IOS\";\n        case RankingData_OSType.OS_TYPE_IPAD_OS:\n            return \"OS_TYPE_IPAD_OS\";\n        case RankingData_OSType.OS_TYPE_MAC_OS:\n            return \"OS_TYPE_MAC_OS\";\n        case RankingData_OSType.OS_TYPE_WINDOWS:\n            return \"OS_TYPE_WINDOWS\";\n        case RankingData_OSType.OS_TYPE_LINUX:\n            return \"OS_TYPE_LINUX\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport enum RankingData_ConnectivityType {\n    CONNECTIVITY_TYPE_UNSET = 0,\n    CONNECTIVITY_TYPE_WIFI = 1,\n    CONNECTIVITY_TYPE_MOBILE = 2,\n    CONNECTIVITY_TYPE_UNREACHABLE = 3,\n    CONNECTIVITY_TYPE_BLUETOOTH = 4,\n    UNRECOGNIZED = -1\n}\nexport function rankingData_ConnectivityTypeFromJSON(object: any): RankingData_ConnectivityType {\n    switch (object) {\n        case 0:\n        case \"CONNECTIVITY_TYPE_UNSET\":\n            return RankingData_ConnectivityType.CONNECTIVITY_TYPE_UNSET;\n        case 1:\n        case \"CONNECTIVITY_TYPE_WIFI\":\n            return RankingData_ConnectivityType.CONNECTIVITY_TYPE_WIFI;\n        case 2:\n        case \"CONNECTIVITY_TYPE_MOBILE\":\n            return RankingData_ConnectivityType.CONNECTIVITY_TYPE_MOBILE;\n        case 3:\n        case \"CONNECTIVITY_TYPE_UNREACHABLE\":\n            return RankingData_ConnectivityType.CONNECTIVITY_TYPE_UNREACHABLE;\n        case 4:\n        case \"CONNECTIVITY_TYPE_BLUETOOTH\":\n            return RankingData_ConnectivityType.CONNECTIVITY_TYPE_BLUETOOTH;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return RankingData_ConnectivityType.UNRECOGNIZED;\n    }\n}\nexport function rankingData_ConnectivityTypeToJSON(object: RankingData_ConnectivityType): string {\n    switch (object) {\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_UNSET:\n            return \"CONNECTIVITY_TYPE_UNSET\";\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_WIFI:\n            return \"CONNECTIVITY_TYPE_WIFI\";\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_MOBILE:\n            return \"CONNECTIVITY_TYPE_MOBILE\";\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_UNREACHABLE:\n            return \"CONNECTIVITY_TYPE_UNREACHABLE\";\n        case RankingData_ConnectivityType.CONNECTIVITY_TYPE_BLUETOOTH:\n            return \"CONNECTIVITY_TYPE_BLUETOOTH\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nfunction createBaseRankingData(): RankingData {\n    return { sessionId: \"\", locale: \"\", osType: 0, connectivityType: 0 };\n}\nexport const RankingData = {\n    encode(message: RankingData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.sessionId !== \"\") {\n            writer.uint32(10).string(message.sessionId);\n        }\n        if (message.locale !== \"\") {\n            writer.uint32(18).string(message.locale);\n        }\n        if (message.osType !== 0) {\n            writer.uint32(24).int32(message.osType);\n        }\n        if (message.connectivityType !== 0) {\n            writer.uint32(32).int32(message.connectivityType);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): RankingData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRankingData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sessionId = reader.string();\n                    break;\n                case 2:\n                    message.locale = reader.string();\n                    break;\n                case 3:\n                    message.osType = reader.int32() as any;\n                    break;\n                case 4:\n                    message.connectivityType = reader.int32() as any;\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): RankingData {\n        return {\n            sessionId: isSet(object.sessionId) ? String(object.sessionId) : \"\",\n            locale: isSet(object.locale) ? String(object.locale) : \"\",\n            osType: isSet(object.osType) ? rankingData_OSTypeFromJSON(object.osType) : 0,\n            connectivityType: isSet(object.connectivityType)\n                ? rankingData_ConnectivityTypeFromJSON(object.connectivityType)\n                : 0,\n        };\n    },\n    toJSON(message: RankingData): unknown {\n        const obj: any = {};\n        message.sessionId !== undefined && (obj.sessionId = message.sessionId);\n        message.locale !== undefined && (obj.locale = message.locale);\n        message.osType !== undefined && (obj.osType = rankingData_OSTypeToJSON(message.osType));\n        message.connectivityType !== undefined &&\n            (obj.connectivityType = rankingData_ConnectivityTypeToJSON(message.connectivityType));\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<RankingData>, I>>(object: I): RankingData {\n        const message = createBaseRankingData();\n        message.sessionId = object.sessionId ?? \"\";\n        message.locale = object.locale ?? \"\";\n        message.osType = object.osType ?? 0;\n        message.connectivityType = object.connectivityType ?? 0;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport interface LegalPrompt {\n    documents: LegalDocument[];\n    disabled: boolean;\n}\nexport interface LegalDocument {\n    type: LegalDocument_Type;\n    webUrl: string;\n    version: string;\n    timestamp: Date | undefined;\n}\nexport enum LegalDocument_Type {\n    UNSET = 0,\n    TERMS_OF_SERVICE = 1,\n    PRIVACY_POLICY = 2,\n    LEARN_MORE = 3,\n    UNRECOGNIZED = -1\n}\nexport function legalDocument_TypeFromJSON(object: any): LegalDocument_Type {\n    switch (object) {\n        case 0:\n        case \"UNSET\":\n            return LegalDocument_Type.UNSET;\n        case 1:\n        case \"TERMS_OF_SERVICE\":\n            return LegalDocument_Type.TERMS_OF_SERVICE;\n        case 2:\n        case \"PRIVACY_POLICY\":\n            return LegalDocument_Type.PRIVACY_POLICY;\n        case 3:\n        case \"LEARN_MORE\":\n            return LegalDocument_Type.LEARN_MORE;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LegalDocument_Type.UNRECOGNIZED;\n    }\n}\nexport function legalDocument_TypeToJSON(object: LegalDocument_Type): string {\n    switch (object) {\n        case LegalDocument_Type.UNSET:\n            return \"UNSET\";\n        case LegalDocument_Type.TERMS_OF_SERVICE:\n            return \"TERMS_OF_SERVICE\";\n        case LegalDocument_Type.PRIVACY_POLICY:\n            return \"PRIVACY_POLICY\";\n        case LegalDocument_Type.LEARN_MORE:\n            return \"LEARN_MORE\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nfunction createBaseLegalPrompt(): LegalPrompt {\n    return { documents: [], disabled: false };\n}\nexport const LegalPrompt = {\n    encode(message: LegalPrompt, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.documents) {\n            LegalDocument.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.disabled === true) {\n            writer.uint32(16).bool(message.disabled);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): LegalPrompt {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLegalPrompt();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.documents.push(LegalDocument.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.disabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): LegalPrompt {\n        return {\n            documents: Array.isArray(object?.documents) ? object.documents.map((e: any) => LegalDocument.fromJSON(e)) : [],\n            disabled: isSet(object.disabled) ? Boolean(object.disabled) : false,\n        };\n    },\n    toJSON(message: LegalPrompt): unknown {\n        const obj: any = {};\n        if (message.documents) {\n            obj.documents = message.documents.map((e) => (e ? LegalDocument.toJSON(e) : undefined));\n        }\n        else {\n            obj.documents = [];\n        }\n        message.disabled !== undefined && (obj.disabled = message.disabled);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<LegalPrompt>, I>>(object: I): LegalPrompt {\n        const message = createBaseLegalPrompt();\n        message.documents = object.documents?.map((e) => LegalDocument.fromPartial(e)) || [];\n        message.disabled = object.disabled ?? false;\n        return message;\n    },\n};\nfunction createBaseLegalDocument(): LegalDocument {\n    return { type: 0, webUrl: \"\", version: \"\", timestamp: undefined };\n}\nexport const LegalDocument = {\n    encode(message: LegalDocument, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.webUrl !== \"\") {\n            writer.uint32(18).string(message.webUrl);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(26).string(message.version);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): LegalDocument {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLegalDocument();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32() as any;\n                    break;\n                case 2:\n                    message.webUrl = reader.string();\n                    break;\n                case 3:\n                    message.version = reader.string();\n                    break;\n                case 4:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): LegalDocument {\n        return {\n            type: isSet(object.type) ? legalDocument_TypeFromJSON(object.type) : 0,\n            webUrl: isSet(object.webUrl) ? String(object.webUrl) : \"\",\n            version: isSet(object.version) ? String(object.version) : \"\",\n            timestamp: isSet(object.timestamp) ? fromJsonTimestamp(object.timestamp) : undefined,\n        };\n    },\n    toJSON(message: LegalDocument): unknown {\n        const obj: any = {};\n        message.type !== undefined && (obj.type = legalDocument_TypeToJSON(message.type));\n        message.webUrl !== undefined && (obj.webUrl = message.webUrl);\n        message.version !== undefined && (obj.version = message.version);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp.toISOString());\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<LegalDocument>, I>>(object: I): LegalDocument {\n        const message = createBaseLegalDocument();\n        message.type = object.type ?? 0;\n        message.webUrl = object.webUrl ?? \"\";\n        message.version = object.version ?? \"\";\n        message.timestamp = object.timestamp ?? undefined;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction toTimestamp(date: Date): Timestamp {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t: Timestamp): Date {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o: any): Date {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport interface OperationalMetric {\n    name: string;\n    timestamp: Date | undefined;\n    metric?: {\n        $case: \"count\";\n        count: number;\n    } | {\n        $case: \"latencyMillis\";\n        latencyMillis: number;\n    } | {\n        $case: \"histogram\";\n        histogram: number;\n    };\n}\nexport interface OperationalMetricsBundle {\n    metrics: OperationalMetric[];\n}\nfunction createBaseOperationalMetric(): OperationalMetric {\n    return { name: \"\", timestamp: undefined, metric: undefined };\n}\nexport const OperationalMetric = {\n    encode(message: OperationalMetric, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.name !== \"\") {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.metric?.$case === \"count\") {\n            writer.uint32(24).uint64(message.metric.count);\n        }\n        if (message.metric?.$case === \"latencyMillis\") {\n            writer.uint32(32).uint64(message.metric.latencyMillis);\n        }\n        if (message.metric?.$case === \"histogram\") {\n            writer.uint32(40).int64(message.metric.histogram);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): OperationalMetric {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOperationalMetric();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.metric = { $case: \"count\", count: longToNumber(reader.uint64() as Long) };\n                    break;\n                case 4:\n                    message.metric = { $case: \"latencyMillis\", latencyMillis: longToNumber(reader.uint64() as Long) };\n                    break;\n                case 5:\n                    message.metric = { $case: \"histogram\", histogram: longToNumber(reader.int64() as Long) };\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): OperationalMetric {\n        return {\n            name: isSet(object.name) ? String(object.name) : \"\",\n            timestamp: isSet(object.timestamp) ? fromJsonTimestamp(object.timestamp) : undefined,\n            metric: isSet(object.count)\n                ? { $case: \"count\", count: Number(object.count) }\n                : isSet(object.latencyMillis)\n                    ? { $case: \"latencyMillis\", latencyMillis: Number(object.latencyMillis) }\n                    : isSet(object.histogram)\n                        ? { $case: \"histogram\", histogram: Number(object.histogram) }\n                        : undefined,\n        };\n    },\n    toJSON(message: OperationalMetric): unknown {\n        const obj: any = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp.toISOString());\n        message.metric?.$case === \"count\" && (obj.count = Math.round(message.metric?.count));\n        message.metric?.$case === \"latencyMillis\" && (obj.latencyMillis = Math.round(message.metric?.latencyMillis));\n        message.metric?.$case === \"histogram\" && (obj.histogram = Math.round(message.metric?.histogram));\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<OperationalMetric>, I>>(object: I): OperationalMetric {\n        const message = createBaseOperationalMetric();\n        message.name = object.name ?? \"\";\n        message.timestamp = object.timestamp ?? undefined;\n        if (object.metric?.$case === \"count\" && object.metric?.count !== undefined && object.metric?.count !== null) {\n            message.metric = { $case: \"count\", count: object.metric.count };\n        }\n        if (object.metric?.$case === \"latencyMillis\" &&\n            object.metric?.latencyMillis !== undefined &&\n            object.metric?.latencyMillis !== null) {\n            message.metric = { $case: \"latencyMillis\", latencyMillis: object.metric.latencyMillis };\n        }\n        if (object.metric?.$case === \"histogram\" &&\n            object.metric?.histogram !== undefined &&\n            object.metric?.histogram !== null) {\n            message.metric = { $case: \"histogram\", histogram: object.metric.histogram };\n        }\n        return message;\n    },\n};\nfunction createBaseOperationalMetricsBundle(): OperationalMetricsBundle {\n    return { metrics: [] };\n}\nexport const OperationalMetricsBundle = {\n    encode(message: OperationalMetricsBundle, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.metrics) {\n            OperationalMetric.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): OperationalMetricsBundle {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOperationalMetricsBundle();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.metrics.push(OperationalMetric.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): OperationalMetricsBundle {\n        return {\n            metrics: Array.isArray(object?.metrics) ? object.metrics.map((e: any) => OperationalMetric.fromJSON(e)) : [],\n        };\n    },\n    toJSON(message: OperationalMetricsBundle): unknown {\n        const obj: any = {};\n        if (message.metrics) {\n            obj.metrics = message.metrics.map((e) => (e ? OperationalMetric.toJSON(e) : undefined));\n        }\n        else {\n            obj.metrics = [];\n        }\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<OperationalMetricsBundle>, I>>(object: I): OperationalMetricsBundle {\n        const message = createBaseOperationalMetricsBundle();\n        message.metrics = object.metrics?.map((e) => OperationalMetric.fromPartial(e)) || [];\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction toTimestamp(date: Date): Timestamp {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t: Timestamp): Date {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o: any): Date {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport enum CameraKitFlavor {\n    CAMERA_KIT_FLAVOR_UNSET = 0,\n    CAMERA_KIT_FLAVOR_DEBUG = 1,\n    CAMERA_KIT_FLAVOR_RELEASE = 2,\n    UNRECOGNIZED = -1\n}\nexport function cameraKitFlavorFromJSON(object: any): CameraKitFlavor {\n    switch (object) {\n        case 0:\n        case \"CAMERA_KIT_FLAVOR_UNSET\":\n            return CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET;\n        case 1:\n        case \"CAMERA_KIT_FLAVOR_DEBUG\":\n            return CameraKitFlavor.CAMERA_KIT_FLAVOR_DEBUG;\n        case 2:\n        case \"CAMERA_KIT_FLAVOR_RELEASE\":\n            return CameraKitFlavor.CAMERA_KIT_FLAVOR_RELEASE;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CameraKitFlavor.UNRECOGNIZED;\n    }\n}\nexport function cameraKitFlavorToJSON(object: CameraKitFlavor): string {\n    switch (object) {\n        case CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET:\n            return \"CAMERA_KIT_FLAVOR_UNSET\";\n        case CameraKitFlavor.CAMERA_KIT_FLAVOR_DEBUG:\n            return \"CAMERA_KIT_FLAVOR_DEBUG\";\n        case CameraKitFlavor.CAMERA_KIT_FLAVOR_RELEASE:\n            return \"CAMERA_KIT_FLAVOR_RELEASE\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport enum CameraKitConnectivityType {\n    CAMERA_KIT_CONNECTIVITY_TYPE_UNSET = 0,\n    CAMERA_KIT_CONNECTIVITY_TYPE_WIFI = 1,\n    CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE = 2,\n    CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE = 3,\n    CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH = 4,\n    UNRECOGNIZED = -1\n}\nexport function cameraKitConnectivityTypeFromJSON(object: any): CameraKitConnectivityType {\n    switch (object) {\n        case 0:\n        case \"CAMERA_KIT_CONNECTIVITY_TYPE_UNSET\":\n            return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET;\n        case 1:\n        case \"CAMERA_KIT_CONNECTIVITY_TYPE_WIFI\":\n            return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_WIFI;\n        case 2:\n        case \"CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE\":\n            return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE;\n        case 3:\n        case \"CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE\":\n            return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE;\n        case 4:\n        case \"CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH\":\n            return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CameraKitConnectivityType.UNRECOGNIZED;\n    }\n}\nexport function cameraKitConnectivityTypeToJSON(object: CameraKitConnectivityType): string {\n    switch (object) {\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET:\n            return \"CAMERA_KIT_CONNECTIVITY_TYPE_UNSET\";\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_WIFI:\n            return \"CAMERA_KIT_CONNECTIVITY_TYPE_WIFI\";\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE:\n            return \"CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE\";\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE:\n            return \"CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE\";\n        case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH:\n            return \"CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport enum CameraKitEnvironment {\n    CAMERA_KIT_ENVIRONMENT_UNSET = 0,\n    CAMERA_KIT_ENVIRONMENT_STAGING = 1,\n    CAMERA_KIT_ENVIRONMENT_PRODUCTION = 2,\n    UNRECOGNIZED = -1\n}\nexport function cameraKitEnvironmentFromJSON(object: any): CameraKitEnvironment {\n    switch (object) {\n        case 0:\n        case \"CAMERA_KIT_ENVIRONMENT_UNSET\":\n            return CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_UNSET;\n        case 1:\n        case \"CAMERA_KIT_ENVIRONMENT_STAGING\":\n            return CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_STAGING;\n        case 2:\n        case \"CAMERA_KIT_ENVIRONMENT_PRODUCTION\":\n            return CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_PRODUCTION;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CameraKitEnvironment.UNRECOGNIZED;\n    }\n}\nexport function cameraKitEnvironmentToJSON(object: CameraKitEnvironment): string {\n    switch (object) {\n        case CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_UNSET:\n            return \"CAMERA_KIT_ENVIRONMENT_UNSET\";\n        case CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_STAGING:\n            return \"CAMERA_KIT_ENVIRONMENT_STAGING\";\n        case CameraKitEnvironment.CAMERA_KIT_ENVIRONMENT_PRODUCTION:\n            return \"CAMERA_KIT_ENVIRONMENT_PRODUCTION\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport interface ExtensionEventBase {\n    extensionName: string;\n    extensionVersion: string;\n    deviceCluster: number;\n    cameraKitVersion: string;\n    lensCoreVersion: string;\n    deviceModel: string;\n    cameraKitFlavor: CameraKitFlavor;\n    appId: string;\n    deviceConnectivity: CameraKitConnectivityType;\n    sessionId: string;\n    cameraKitEnvironment: CameraKitEnvironment;\n}\nfunction createBaseExtensionEventBase(): ExtensionEventBase {\n    return {\n        extensionName: \"\",\n        extensionVersion: \"\",\n        deviceCluster: 0,\n        cameraKitVersion: \"\",\n        lensCoreVersion: \"\",\n        deviceModel: \"\",\n        cameraKitFlavor: 0,\n        appId: \"\",\n        deviceConnectivity: 0,\n        sessionId: \"\",\n        cameraKitEnvironment: 0,\n    };\n}\nexport const ExtensionEventBase = {\n    encode(message: ExtensionEventBase, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.extensionName !== \"\") {\n            writer.uint32(10).string(message.extensionName);\n        }\n        if (message.extensionVersion !== \"\") {\n            writer.uint32(18).string(message.extensionVersion);\n        }\n        if (message.deviceCluster !== 0) {\n            writer.uint32(24).int64(message.deviceCluster);\n        }\n        if (message.cameraKitVersion !== \"\") {\n            writer.uint32(34).string(message.cameraKitVersion);\n        }\n        if (message.lensCoreVersion !== \"\") {\n            writer.uint32(42).string(message.lensCoreVersion);\n        }\n        if (message.deviceModel !== \"\") {\n            writer.uint32(50).string(message.deviceModel);\n        }\n        if (message.cameraKitFlavor !== 0) {\n            writer.uint32(56).int32(message.cameraKitFlavor);\n        }\n        if (message.appId !== \"\") {\n            writer.uint32(66).string(message.appId);\n        }\n        if (message.deviceConnectivity !== 0) {\n            writer.uint32(72).int32(message.deviceConnectivity);\n        }\n        if (message.sessionId !== \"\") {\n            writer.uint32(82).string(message.sessionId);\n        }\n        if (message.cameraKitEnvironment !== 0) {\n            writer.uint32(88).int32(message.cameraKitEnvironment);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExtensionEventBase {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExtensionEventBase();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.extensionName = reader.string();\n                    break;\n                case 2:\n                    message.extensionVersion = reader.string();\n                    break;\n                case 3:\n                    message.deviceCluster = longToNumber(reader.int64() as Long);\n                    break;\n                case 4:\n                    message.cameraKitVersion = reader.string();\n                    break;\n                case 5:\n                    message.lensCoreVersion = reader.string();\n                    break;\n                case 6:\n                    message.deviceModel = reader.string();\n                    break;\n                case 7:\n                    message.cameraKitFlavor = reader.int32() as any;\n                    break;\n                case 8:\n                    message.appId = reader.string();\n                    break;\n                case 9:\n                    message.deviceConnectivity = reader.int32() as any;\n                    break;\n                case 10:\n                    message.sessionId = reader.string();\n                    break;\n                case 11:\n                    message.cameraKitEnvironment = reader.int32() as any;\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): ExtensionEventBase {\n        return {\n            extensionName: isSet(object.extensionName) ? String(object.extensionName) : \"\",\n            extensionVersion: isSet(object.extensionVersion) ? String(object.extensionVersion) : \"\",\n            deviceCluster: isSet(object.deviceCluster) ? Number(object.deviceCluster) : 0,\n            cameraKitVersion: isSet(object.cameraKitVersion) ? String(object.cameraKitVersion) : \"\",\n            lensCoreVersion: isSet(object.lensCoreVersion) ? String(object.lensCoreVersion) : \"\",\n            deviceModel: isSet(object.deviceModel) ? String(object.deviceModel) : \"\",\n            cameraKitFlavor: isSet(object.cameraKitFlavor) ? cameraKitFlavorFromJSON(object.cameraKitFlavor) : 0,\n            appId: isSet(object.appId) ? String(object.appId) : \"\",\n            deviceConnectivity: isSet(object.deviceConnectivity)\n                ? cameraKitConnectivityTypeFromJSON(object.deviceConnectivity)\n                : 0,\n            sessionId: isSet(object.sessionId) ? String(object.sessionId) : \"\",\n            cameraKitEnvironment: isSet(object.cameraKitEnvironment)\n                ? cameraKitEnvironmentFromJSON(object.cameraKitEnvironment)\n                : 0,\n        };\n    },\n    toJSON(message: ExtensionEventBase): unknown {\n        const obj: any = {};\n        message.extensionName !== undefined && (obj.extensionName = message.extensionName);\n        message.extensionVersion !== undefined && (obj.extensionVersion = message.extensionVersion);\n        message.deviceCluster !== undefined && (obj.deviceCluster = Math.round(message.deviceCluster));\n        message.cameraKitVersion !== undefined && (obj.cameraKitVersion = message.cameraKitVersion);\n        message.lensCoreVersion !== undefined && (obj.lensCoreVersion = message.lensCoreVersion);\n        message.deviceModel !== undefined && (obj.deviceModel = message.deviceModel);\n        message.cameraKitFlavor !== undefined && (obj.cameraKitFlavor = cameraKitFlavorToJSON(message.cameraKitFlavor));\n        message.appId !== undefined && (obj.appId = message.appId);\n        message.deviceConnectivity !== undefined &&\n            (obj.deviceConnectivity = cameraKitConnectivityTypeToJSON(message.deviceConnectivity));\n        message.sessionId !== undefined && (obj.sessionId = message.sessionId);\n        message.cameraKitEnvironment !== undefined &&\n            (obj.cameraKitEnvironment = cameraKitEnvironmentToJSON(message.cameraKitEnvironment));\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExtensionEventBase>, I>>(object: I): ExtensionEventBase {\n        const message = createBaseExtensionEventBase();\n        message.extensionName = object.extensionName ?? \"\";\n        message.extensionVersion = object.extensionVersion ?? \"\";\n        message.deviceCluster = object.deviceCluster ?? 0;\n        message.cameraKitVersion = object.cameraKitVersion ?? \"\";\n        message.lensCoreVersion = object.lensCoreVersion ?? \"\";\n        message.deviceModel = object.deviceModel ?? \"\";\n        message.cameraKitFlavor = object.cameraKitFlavor ?? 0;\n        message.appId = object.appId ?? \"\";\n        message.deviceConnectivity = object.deviceConnectivity ?? 0;\n        message.sessionId = object.sessionId ?? \"\";\n        message.cameraKitEnvironment = object.cameraKitEnvironment ?? 0;\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { RankingData } from \"./ranking\";\nimport { Lens } from \"./lens\";\nimport { LegalPrompt } from \"./legal_prompt\";\nimport { OperationalMetricsBundle } from \"./operational_metrics\";\nimport { Any } from \"../../google/protobuf/any\";\nimport { ExtensionEventBase } from \"./business_events\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport interface GetGroupRequest {\n    id: string;\n    rankingData: RankingData | undefined;\n}\nexport interface GetGroupResponse {\n    id: string;\n    lenses: Lens[];\n}\nexport interface GetGroupLensRequest {\n    lensId: string;\n    groupId: string;\n}\nexport interface GetGroupLensResponse {\n    lens: Lens | undefined;\n    groupId: string;\n}\nexport interface BatchGetGroupLensRequest {\n    getRequests: GetGroupLensRequest[];\n}\nexport interface BatchGetGroupLensResponse {\n    getResponses: GetGroupLensResponse[];\n}\nexport interface GetPlaceholderConfigRequest {\n}\nexport interface GetPlaceholderConfigResponse {\n    configs: {\n        [key: string]: string;\n    };\n}\nexport interface GetPlaceholderConfigResponse_ConfigsEntry {\n    key: string;\n    value: string;\n}\nexport interface GetInitializationConfigRequest {\n}\nexport interface GetInitializationConfigResponse {\n    appVendorUuidOptIn: boolean;\n    watermarkEnabled: boolean;\n    childrenProtectionActRestricted: boolean;\n    legalPrompt: LegalPrompt | undefined;\n}\nexport interface SetOperationalMetricsRequest {\n    metrics: OperationalMetricsBundle | undefined;\n}\nexport interface SetOperationalMetricsResponse {\n}\nexport interface SetBusinessEventsRequest {\n    batchEvents: Any | undefined;\n}\nexport interface SetBusinessEventsResponse {\n}\nexport interface SetExtensionBusinessEventsRequest {\n    events: Any[];\n    extensionEventBase: ExtensionEventBase | undefined;\n}\nexport interface SetExtensionBusinessEventsResponse {\n}\nfunction createBaseGetGroupRequest(): GetGroupRequest {\n    return { id: \"\", rankingData: undefined };\n}\nexport const GetGroupRequest = {\n    encode(message: GetGroupRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.rankingData !== undefined) {\n            RankingData.encode(message.rankingData, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetGroupRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.rankingData = RankingData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetGroupRequest {\n        return {\n            id: isSet(object.id) ? String(object.id) : \"\",\n            rankingData: isSet(object.rankingData) ? RankingData.fromJSON(object.rankingData) : undefined,\n        };\n    },\n    toJSON(message: GetGroupRequest): unknown {\n        const obj: any = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.rankingData !== undefined &&\n            (obj.rankingData = message.rankingData ? RankingData.toJSON(message.rankingData) : undefined);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetGroupRequest>, I>>(object: I): GetGroupRequest {\n        const message = createBaseGetGroupRequest();\n        message.id = object.id ?? \"\";\n        message.rankingData =\n            object.rankingData !== undefined && object.rankingData !== null\n                ? RankingData.fromPartial(object.rankingData)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseGetGroupResponse(): GetGroupResponse {\n    return { id: \"\", lenses: [] };\n}\nexport const GetGroupResponse = {\n    encode(message: GetGroupResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        for (const v of message.lenses) {\n            Lens.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetGroupResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.lenses.push(Lens.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetGroupResponse {\n        return {\n            id: isSet(object.id) ? String(object.id) : \"\",\n            lenses: Array.isArray(object?.lenses) ? object.lenses.map((e: any) => Lens.fromJSON(e)) : [],\n        };\n    },\n    toJSON(message: GetGroupResponse): unknown {\n        const obj: any = {};\n        message.id !== undefined && (obj.id = message.id);\n        if (message.lenses) {\n            obj.lenses = message.lenses.map((e) => (e ? Lens.toJSON(e) : undefined));\n        }\n        else {\n            obj.lenses = [];\n        }\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetGroupResponse>, I>>(object: I): GetGroupResponse {\n        const message = createBaseGetGroupResponse();\n        message.id = object.id ?? \"\";\n        message.lenses = object.lenses?.map((e) => Lens.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseGetGroupLensRequest(): GetGroupLensRequest {\n    return { lensId: \"\", groupId: \"\" };\n}\nexport const GetGroupLensRequest = {\n    encode(message: GetGroupLensRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.lensId !== \"\") {\n            writer.uint32(10).string(message.lensId);\n        }\n        if (message.groupId !== \"\") {\n            writer.uint32(18).string(message.groupId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupLensRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetGroupLensRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.lensId = reader.string();\n                    break;\n                case 2:\n                    message.groupId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetGroupLensRequest {\n        return {\n            lensId: isSet(object.lensId) ? String(object.lensId) : \"\",\n            groupId: isSet(object.groupId) ? String(object.groupId) : \"\",\n        };\n    },\n    toJSON(message: GetGroupLensRequest): unknown {\n        const obj: any = {};\n        message.lensId !== undefined && (obj.lensId = message.lensId);\n        message.groupId !== undefined && (obj.groupId = message.groupId);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetGroupLensRequest>, I>>(object: I): GetGroupLensRequest {\n        const message = createBaseGetGroupLensRequest();\n        message.lensId = object.lensId ?? \"\";\n        message.groupId = object.groupId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetGroupLensResponse(): GetGroupLensResponse {\n    return { lens: undefined, groupId: \"\" };\n}\nexport const GetGroupLensResponse = {\n    encode(message: GetGroupLensResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.lens !== undefined) {\n            Lens.encode(message.lens, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.groupId !== \"\") {\n            writer.uint32(18).string(message.groupId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupLensResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetGroupLensResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.lens = Lens.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.groupId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetGroupLensResponse {\n        return {\n            lens: isSet(object.lens) ? Lens.fromJSON(object.lens) : undefined,\n            groupId: isSet(object.groupId) ? String(object.groupId) : \"\",\n        };\n    },\n    toJSON(message: GetGroupLensResponse): unknown {\n        const obj: any = {};\n        message.lens !== undefined && (obj.lens = message.lens ? Lens.toJSON(message.lens) : undefined);\n        message.groupId !== undefined && (obj.groupId = message.groupId);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetGroupLensResponse>, I>>(object: I): GetGroupLensResponse {\n        const message = createBaseGetGroupLensResponse();\n        message.lens = object.lens !== undefined && object.lens !== null ? Lens.fromPartial(object.lens) : undefined;\n        message.groupId = object.groupId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseBatchGetGroupLensRequest(): BatchGetGroupLensRequest {\n    return { getRequests: [] };\n}\nexport const BatchGetGroupLensRequest = {\n    encode(message: BatchGetGroupLensRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.getRequests) {\n            GetGroupLensRequest.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BatchGetGroupLensRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBatchGetGroupLensRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.getRequests.push(GetGroupLensRequest.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): BatchGetGroupLensRequest {\n        return {\n            getRequests: Array.isArray(object?.getRequests)\n                ? object.getRequests.map((e: any) => GetGroupLensRequest.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message: BatchGetGroupLensRequest): unknown {\n        const obj: any = {};\n        if (message.getRequests) {\n            obj.getRequests = message.getRequests.map((e) => (e ? GetGroupLensRequest.toJSON(e) : undefined));\n        }\n        else {\n            obj.getRequests = [];\n        }\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<BatchGetGroupLensRequest>, I>>(object: I): BatchGetGroupLensRequest {\n        const message = createBaseBatchGetGroupLensRequest();\n        message.getRequests = object.getRequests?.map((e) => GetGroupLensRequest.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseBatchGetGroupLensResponse(): BatchGetGroupLensResponse {\n    return { getResponses: [] };\n}\nexport const BatchGetGroupLensResponse = {\n    encode(message: BatchGetGroupLensResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.getResponses) {\n            GetGroupLensResponse.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BatchGetGroupLensResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBatchGetGroupLensResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.getResponses.push(GetGroupLensResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): BatchGetGroupLensResponse {\n        return {\n            getResponses: Array.isArray(object?.getResponses)\n                ? object.getResponses.map((e: any) => GetGroupLensResponse.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message: BatchGetGroupLensResponse): unknown {\n        const obj: any = {};\n        if (message.getResponses) {\n            obj.getResponses = message.getResponses.map((e) => (e ? GetGroupLensResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.getResponses = [];\n        }\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<BatchGetGroupLensResponse>, I>>(object: I): BatchGetGroupLensResponse {\n        const message = createBaseBatchGetGroupLensResponse();\n        message.getResponses = object.getResponses?.map((e) => GetGroupLensResponse.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseGetPlaceholderConfigRequest(): GetPlaceholderConfigRequest {\n    return {};\n}\nexport const GetPlaceholderConfigRequest = {\n    encode(_: GetPlaceholderConfigRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetPlaceholderConfigRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetPlaceholderConfigRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_: any): GetPlaceholderConfigRequest {\n        return {};\n    },\n    toJSON(_: GetPlaceholderConfigRequest): unknown {\n        const obj: any = {};\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetPlaceholderConfigRequest>, I>>(_: I): GetPlaceholderConfigRequest {\n        const message = createBaseGetPlaceholderConfigRequest();\n        return message;\n    },\n};\nfunction createBaseGetPlaceholderConfigResponse(): GetPlaceholderConfigResponse {\n    return { configs: {} };\n}\nexport const GetPlaceholderConfigResponse = {\n    encode(message: GetPlaceholderConfigResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        Object.entries(message.configs).forEach(([key, value]) => {\n            GetPlaceholderConfigResponse_ConfigsEntry.encode({ key: key as any, value }, writer.uint32(10).fork()).ldelim();\n        });\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetPlaceholderConfigResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetPlaceholderConfigResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = GetPlaceholderConfigResponse_ConfigsEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.configs[entry1.key] = entry1.value;\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetPlaceholderConfigResponse {\n        return {\n            configs: isObject(object.configs)\n                ? Object.entries(object.configs).reduce<{\n                    [key: string]: string;\n                }>((acc, [key, value]) => {\n                    acc[key] = String(value);\n                    return acc;\n                }, {})\n                : {},\n        };\n    },\n    toJSON(message: GetPlaceholderConfigResponse): unknown {\n        const obj: any = {};\n        obj.configs = {};\n        if (message.configs) {\n            Object.entries(message.configs).forEach(([k, v]) => {\n                obj.configs[k] = v;\n            });\n        }\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetPlaceholderConfigResponse>, I>>(object: I): GetPlaceholderConfigResponse {\n        const message = createBaseGetPlaceholderConfigResponse();\n        message.configs = Object.entries(object.configs ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        return message;\n    },\n};\nfunction createBaseGetPlaceholderConfigResponse_ConfigsEntry(): GetPlaceholderConfigResponse_ConfigsEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const GetPlaceholderConfigResponse_ConfigsEntry = {\n    encode(message: GetPlaceholderConfigResponse_ConfigsEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetPlaceholderConfigResponse_ConfigsEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetPlaceholderConfigResponse_ConfigsEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetPlaceholderConfigResponse_ConfigsEntry {\n        return {\n            key: isSet(object.key) ? String(object.key) : \"\",\n            value: isSet(object.value) ? String(object.value) : \"\",\n        };\n    },\n    toJSON(message: GetPlaceholderConfigResponse_ConfigsEntry): unknown {\n        const obj: any = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetPlaceholderConfigResponse_ConfigsEntry>, I>>(object: I): GetPlaceholderConfigResponse_ConfigsEntry {\n        const message = createBaseGetPlaceholderConfigResponse_ConfigsEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetInitializationConfigRequest(): GetInitializationConfigRequest {\n    return {};\n}\nexport const GetInitializationConfigRequest = {\n    encode(_: GetInitializationConfigRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetInitializationConfigRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetInitializationConfigRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_: any): GetInitializationConfigRequest {\n        return {};\n    },\n    toJSON(_: GetInitializationConfigRequest): unknown {\n        const obj: any = {};\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetInitializationConfigRequest>, I>>(_: I): GetInitializationConfigRequest {\n        const message = createBaseGetInitializationConfigRequest();\n        return message;\n    },\n};\nfunction createBaseGetInitializationConfigResponse(): GetInitializationConfigResponse {\n    return {\n        appVendorUuidOptIn: false,\n        watermarkEnabled: false,\n        childrenProtectionActRestricted: false,\n        legalPrompt: undefined,\n    };\n}\nexport const GetInitializationConfigResponse = {\n    encode(message: GetInitializationConfigResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.appVendorUuidOptIn === true) {\n            writer.uint32(8).bool(message.appVendorUuidOptIn);\n        }\n        if (message.watermarkEnabled === true) {\n            writer.uint32(16).bool(message.watermarkEnabled);\n        }\n        if (message.childrenProtectionActRestricted === true) {\n            writer.uint32(24).bool(message.childrenProtectionActRestricted);\n        }\n        if (message.legalPrompt !== undefined) {\n            LegalPrompt.encode(message.legalPrompt, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetInitializationConfigResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetInitializationConfigResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVendorUuidOptIn = reader.bool();\n                    break;\n                case 2:\n                    message.watermarkEnabled = reader.bool();\n                    break;\n                case 3:\n                    message.childrenProtectionActRestricted = reader.bool();\n                    break;\n                case 4:\n                    message.legalPrompt = LegalPrompt.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): GetInitializationConfigResponse {\n        return {\n            appVendorUuidOptIn: isSet(object.appVendorUuidOptIn) ? Boolean(object.appVendorUuidOptIn) : false,\n            watermarkEnabled: isSet(object.watermarkEnabled) ? Boolean(object.watermarkEnabled) : false,\n            childrenProtectionActRestricted: isSet(object.childrenProtectionActRestricted)\n                ? Boolean(object.childrenProtectionActRestricted)\n                : false,\n            legalPrompt: isSet(object.legalPrompt) ? LegalPrompt.fromJSON(object.legalPrompt) : undefined,\n        };\n    },\n    toJSON(message: GetInitializationConfigResponse): unknown {\n        const obj: any = {};\n        message.appVendorUuidOptIn !== undefined && (obj.appVendorUuidOptIn = message.appVendorUuidOptIn);\n        message.watermarkEnabled !== undefined && (obj.watermarkEnabled = message.watermarkEnabled);\n        message.childrenProtectionActRestricted !== undefined &&\n            (obj.childrenProtectionActRestricted = message.childrenProtectionActRestricted);\n        message.legalPrompt !== undefined &&\n            (obj.legalPrompt = message.legalPrompt ? LegalPrompt.toJSON(message.legalPrompt) : undefined);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetInitializationConfigResponse>, I>>(object: I): GetInitializationConfigResponse {\n        const message = createBaseGetInitializationConfigResponse();\n        message.appVendorUuidOptIn = object.appVendorUuidOptIn ?? false;\n        message.watermarkEnabled = object.watermarkEnabled ?? false;\n        message.childrenProtectionActRestricted = object.childrenProtectionActRestricted ?? false;\n        message.legalPrompt =\n            object.legalPrompt !== undefined && object.legalPrompt !== null\n                ? LegalPrompt.fromPartial(object.legalPrompt)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseSetOperationalMetricsRequest(): SetOperationalMetricsRequest {\n    return { metrics: undefined };\n}\nexport const SetOperationalMetricsRequest = {\n    encode(message: SetOperationalMetricsRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.metrics !== undefined) {\n            OperationalMetricsBundle.encode(message.metrics, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SetOperationalMetricsRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSetOperationalMetricsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.metrics = OperationalMetricsBundle.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): SetOperationalMetricsRequest {\n        return {\n            metrics: isSet(object.metrics) ? OperationalMetricsBundle.fromJSON(object.metrics) : undefined,\n        };\n    },\n    toJSON(message: SetOperationalMetricsRequest): unknown {\n        const obj: any = {};\n        message.metrics !== undefined &&\n            (obj.metrics = message.metrics ? OperationalMetricsBundle.toJSON(message.metrics) : undefined);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<SetOperationalMetricsRequest>, I>>(object: I): SetOperationalMetricsRequest {\n        const message = createBaseSetOperationalMetricsRequest();\n        message.metrics =\n            object.metrics !== undefined && object.metrics !== null\n                ? OperationalMetricsBundle.fromPartial(object.metrics)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseSetOperationalMetricsResponse(): SetOperationalMetricsResponse {\n    return {};\n}\nexport const SetOperationalMetricsResponse = {\n    encode(_: SetOperationalMetricsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SetOperationalMetricsResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSetOperationalMetricsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_: any): SetOperationalMetricsResponse {\n        return {};\n    },\n    toJSON(_: SetOperationalMetricsResponse): unknown {\n        const obj: any = {};\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<SetOperationalMetricsResponse>, I>>(_: I): SetOperationalMetricsResponse {\n        const message = createBaseSetOperationalMetricsResponse();\n        return message;\n    },\n};\nfunction createBaseSetBusinessEventsRequest(): SetBusinessEventsRequest {\n    return { batchEvents: undefined };\n}\nexport const SetBusinessEventsRequest = {\n    encode(message: SetBusinessEventsRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.batchEvents !== undefined) {\n            Any.encode(message.batchEvents, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SetBusinessEventsRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSetBusinessEventsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.batchEvents = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): SetBusinessEventsRequest {\n        return {\n            batchEvents: isSet(object.batchEvents) ? Any.fromJSON(object.batchEvents) : undefined,\n        };\n    },\n    toJSON(message: SetBusinessEventsRequest): unknown {\n        const obj: any = {};\n        message.batchEvents !== undefined &&\n            (obj.batchEvents = message.batchEvents ? Any.toJSON(message.batchEvents) : undefined);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<SetBusinessEventsRequest>, I>>(object: I): SetBusinessEventsRequest {\n        const message = createBaseSetBusinessEventsRequest();\n        message.batchEvents =\n            object.batchEvents !== undefined && object.batchEvents !== null ? Any.fromPartial(object.batchEvents) : undefined;\n        return message;\n    },\n};\nfunction createBaseSetBusinessEventsResponse(): SetBusinessEventsResponse {\n    return {};\n}\nexport const SetBusinessEventsResponse = {\n    encode(_: SetBusinessEventsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SetBusinessEventsResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSetBusinessEventsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_: any): SetBusinessEventsResponse {\n        return {};\n    },\n    toJSON(_: SetBusinessEventsResponse): unknown {\n        const obj: any = {};\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<SetBusinessEventsResponse>, I>>(_: I): SetBusinessEventsResponse {\n        const message = createBaseSetBusinessEventsResponse();\n        return message;\n    },\n};\nfunction createBaseSetExtensionBusinessEventsRequest(): SetExtensionBusinessEventsRequest {\n    return { events: [], extensionEventBase: undefined };\n}\nexport const SetExtensionBusinessEventsRequest = {\n    encode(message: SetExtensionBusinessEventsRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.events) {\n            Any.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.extensionEventBase !== undefined) {\n            ExtensionEventBase.encode(message.extensionEventBase, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SetExtensionBusinessEventsRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSetExtensionBusinessEventsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Any.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.extensionEventBase = ExtensionEventBase.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object: any): SetExtensionBusinessEventsRequest {\n        return {\n            events: Array.isArray(object?.events) ? object.events.map((e: any) => Any.fromJSON(e)) : [],\n            extensionEventBase: isSet(object.extensionEventBase)\n                ? ExtensionEventBase.fromJSON(object.extensionEventBase)\n                : undefined,\n        };\n    },\n    toJSON(message: SetExtensionBusinessEventsRequest): unknown {\n        const obj: any = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.extensionEventBase !== undefined &&\n            (obj.extensionEventBase = message.extensionEventBase\n                ? ExtensionEventBase.toJSON(message.extensionEventBase)\n                : undefined);\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<SetExtensionBusinessEventsRequest>, I>>(object: I): SetExtensionBusinessEventsRequest {\n        const message = createBaseSetExtensionBusinessEventsRequest();\n        message.events = object.events?.map((e) => Any.fromPartial(e)) || [];\n        message.extensionEventBase =\n            object.extensionEventBase !== undefined && object.extensionEventBase !== null\n                ? ExtensionEventBase.fromPartial(object.extensionEventBase)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseSetExtensionBusinessEventsResponse(): SetExtensionBusinessEventsResponse {\n    return {};\n}\nexport const SetExtensionBusinessEventsResponse = {\n    encode(_: SetExtensionBusinessEventsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SetExtensionBusinessEventsResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSetExtensionBusinessEventsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_: any): SetExtensionBusinessEventsResponse {\n        return {};\n    },\n    toJSON(_: SetExtensionBusinessEventsResponse): unknown {\n        const obj: any = {};\n        return obj;\n    },\n    fromPartial<I extends Exact<DeepPartial<SetExtensionBusinessEventsResponse>, I>>(_: I): SetExtensionBusinessEventsResponse {\n        const message = createBaseSetExtensionBusinessEventsResponse();\n        return message;\n    },\n};\nexport const LensesDefinition = {\n    name: \"Lenses\",\n    fullName: \"com.snap.camerakit.v3.Lenses\",\n    methods: {\n        getGroup: {\n            name: \"GetGroup\",\n            requestType: GetGroupRequest,\n            requestStream: false,\n            responseType: GetGroupResponse,\n            responseStream: false,\n            options: {\n                idempotencyLevel: \"NO_SIDE_EFFECTS\",\n            },\n        },\n        getGroupLens: {\n            name: \"GetGroupLens\",\n            requestType: GetGroupLensRequest,\n            requestStream: false,\n            responseType: GetGroupLensResponse,\n            responseStream: false,\n            options: {\n                idempotencyLevel: \"NO_SIDE_EFFECTS\",\n            },\n        },\n        batchGetGroupLens: {\n            name: \"BatchGetGroupLens\",\n            requestType: BatchGetGroupLensRequest,\n            requestStream: false,\n            responseType: BatchGetGroupLensResponse,\n            responseStream: false,\n            options: {\n                idempotencyLevel: \"NO_SIDE_EFFECTS\",\n            },\n        },\n        getPlaceholderConfig: {\n            name: \"GetPlaceholderConfig\",\n            requestType: GetPlaceholderConfigRequest,\n            requestStream: false,\n            responseType: GetPlaceholderConfigResponse,\n            responseStream: false,\n            options: {\n                idempotencyLevel: \"NO_SIDE_EFFECTS\",\n            },\n        },\n    },\n} as const;\nexport const MetricsDefinition = {\n    name: \"Metrics\",\n    fullName: \"com.snap.camerakit.v3.Metrics\",\n    methods: {\n        setOperationalMetrics: {\n            name: \"SetOperationalMetrics\",\n            requestType: SetOperationalMetricsRequest,\n            requestStream: false,\n            responseType: SetOperationalMetricsResponse,\n            responseStream: false,\n            options: {},\n        },\n        setBusinessEvents: {\n            name: \"SetBusinessEvents\",\n            requestType: SetBusinessEventsRequest,\n            requestStream: false,\n            responseType: SetBusinessEventsResponse,\n            responseStream: false,\n            options: {},\n        },\n        setExtensionBusinessEvents: {\n            name: \"SetExtensionBusinessEvents\",\n            requestType: SetExtensionBusinessEventsRequest,\n            requestStream: false,\n            responseType: SetExtensionBusinessEventsResponse,\n            responseStream: false,\n            options: {},\n        },\n        getInitializationConfig: {\n            name: \"GetInitializationConfig\",\n            requestType: GetInitializationConfigRequest,\n            requestStream: false,\n            responseType: GetInitializationConfigResponse,\n            responseStream: false,\n            options: {\n                idempotencyLevel: \"NO_SIDE_EFFECTS\",\n            },\n        },\n    },\n} as const;\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\nfunction isObject(value: any): boolean {\n    return typeof value === \"object\" && value !== null;\n}\nfunction isSet(value: any): boolean {\n    return value !== null && value !== undefined;\n}\n","import { Injectable } from \"../dependency-injection/Injectable\";\n\nexport class PageVisibility {\n    private onHiddenHandlers = new Set<() => void>();\n    private onVisibleHandlers = new Set<() => void>();\n\n    private previousVisibilityState = document.visibilityState;\n    private visibilityTransition: false | DocumentVisibilityState = false;\n\n    constructor() {\n        this.onVisibilityChange = this.onVisibilityChange.bind(this);\n        this.isDuringVisibilityTransition = this.isDuringVisibilityTransition.bind(this);\n        this.onPageHidden = this.onPageHidden.bind(this);\n        this.onPageVisible = this.onPageVisible.bind(this);\n        this.destroy = this.destroy.bind(this);\n        document.addEventListener(\"visibilitychange\", this.onVisibilityChange);\n    }\n\n    isDuringVisibilityTransition(test: DocumentVisibilityState): boolean {\n        return test === this.visibilityTransition;\n    }\n\n    /**\n     * Run a function when the page is hidden. If this occurs due to tab / browser closure,\n     * only synchronous functions will run to completion.\n     *\n     * If the given handler throws an error, it will be silently swallowed.\n     *\n     * @param handler\n     * @returns A function which, when called, removes the function from the set of visibility change handlers.\n     */\n    onPageHidden(handler: () => void): () => void {\n        this.onHiddenHandlers.add(handler);\n        return () => this.onHiddenHandlers.delete(handler);\n    }\n\n    /**\n     * Run a function when the page is made visible.\n     *\n     * If the given handler throws an error, it will be silently swallowed.\n     *\n     * @param handler\n     * @returns A function which, when called, removes the function from the set of visibility change handlers.\n     */\n    onPageVisible(handler: () => void): () => void {\n        this.onVisibleHandlers.add(handler);\n        return () => this.onVisibleHandlers.delete(handler);\n    }\n\n    destroy() {\n        document.removeEventListener(\"visibilitychange\", this.onVisibilityChange);\n        this.onHiddenHandlers.clear();\n        this.onVisibleHandlers.clear();\n    }\n\n    private onVisibilityChange() {\n        const handlers =\n            this.previousVisibilityState === \"visible\" && document.visibilityState === \"hidden\"\n                ? this.onHiddenHandlers\n                : this.previousVisibilityState === \"hidden\" && document.visibilityState === \"visible\"\n                ? this.onVisibleHandlers\n                : new Set<() => void>();\n\n        this.visibilityTransition = document.visibilityState;\n\n        for (const handler of handlers) {\n            try {\n                handler();\n            } catch (error) {\n                // We'll do the same thing here that we would do if the handler was added directly as an event\n                // listener and dispatch an error event if we can.\n                if (typeof window !== \"undefined\") window.dispatchEvent(new CustomEvent(\"error\", { detail: error }));\n            }\n        }\n\n        this.previousVisibilityState = this.visibilityTransition;\n        this.visibilityTransition = false;\n    }\n}\n\nexport const pageVisibilityFactory = Injectable(\"pageVisibility\", () => new PageVisibility());\n","import { PageVisibility } from \"../common/pageVisibility\";\nimport { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\nimport { createMappingHandler } from \"./mappingHandler\";\n\nconst delay = (duration: number) => new Promise<void>((resolve) => setTimeout(resolve, duration));\n\n/**\n * Limit the rate at which requests are passed to the next handler in the chain.\n *\n * During any page transitions to \"hidden\" – possibly indicating the page is about to terminate – requests will not be\n * rate limited, to ensure that they are not lost.\n *\n * TODO: If there are requests in the queue waiting to be sent when the page transitions to \"hidden,\" these will not\n * be immediately sent. This means there still is an edge case in which a request may be lost on page termination. This\n * can be fixed with changes to `createMappingHandler`.\n *\n * **NOTE:** Under the hood, requests that come in faster than the set `duration` are placed in an unbounded buffer.\n * If many requests are made quickly and `duration` is long, this could result in high memory usage. Keep this in mind\n * when using this handler.\n *\n * @param duration In milliseconds. Requests will be passed to the next handler in the chain no faster than this. That\n * is, if `duration` is `1000`, the next handler will be called at most once per second.\n * @param pageVisibility Determines whether to flush buffered requests when the page becomes hidden.\n * `false` value indicates that page visibility handling is avoided, while\n * a {@link PageVisibility} instance is used to subscribe to page visibility change events.\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createRateLimitingHandler = <Req, Res, Meta extends RequestMetadata>(\n    duration: number,\n    pageVisibility: PageVisibility | false\n): ChainableHandler<Req, Res, Req, Res, Meta> => {\n    let mostRecentSendTime: number | undefined = undefined;\n\n    const mappingHandler = createMappingHandler<Req, Req, Res, Meta>(\n        async (request) => {\n            if (mostRecentSendTime !== undefined) {\n                const millisUntilNextSend = duration - (Date.now() - mostRecentSendTime);\n                if (millisUntilNextSend > 0) await delay(millisUntilNextSend);\n            }\n            mostRecentSendTime = Date.now();\n            return request;\n        },\n        pageVisibility,\n        1\n    );\n\n    return (next) => (request, metadata) => {\n        // Requests may be made while the page is transitioning to hidden – for example, the page is being unloaded and\n        // we're reporting final metrics. In this case, we need to skip rate limiting and synchronously call `next`\n        // so that the request is not lost.\n        if (pageVisibility && pageVisibility.isDuringVisibilityTransition(\"hidden\")) return next(request, metadata);\n        return mappingHandler(next)(request, metadata);\n    };\n};\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport { cameraKitServiceFetchHandlerFactory } from \"../handlers/cameraKitServiceFetchHandlerFactory\";\nimport { HandlerChainBuilder } from \"../handlers/HandlerChainBuilder\";\nimport { createRateLimitingHandler } from \"../handlers/rateLimitingHandler\";\nimport { PageVisibility, pageVisibilityFactory } from \"../common/pageVisibility\";\n\nconst METRIC_REQUEST_RATE_LIMIT_MS = 1000; // send at most one metric request per second.\n\n/**\n * @internal\n */\nexport const metricsHandlerFactory = Injectable(\n    \"metricsHandler\",\n    [cameraKitServiceFetchHandlerFactory.token, pageVisibilityFactory.token] as const,\n    (fetchHandler: FetchHandler, pageVisibility: PageVisibility) => {\n        return new HandlerChainBuilder(fetchHandler).map(\n            createRateLimitingHandler(METRIC_REQUEST_RATE_LIMIT_MS, pageVisibility)\n        ).handler;\n    }\n);\n","import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"../../handlers/HandlerChainBuilder\";\nimport { createBatchingHandler } from \"../../handlers/batchingHandler\";\nimport {\n    OperationalMetric,\n    OperationalMetricsBundle,\n} from \"../../generated-proto/pb_schema/camera_kit/v3/operational_metrics\";\nimport { SetOperationalMetricsRequest } from \"../../generated-proto/pb_schema/camera_kit/v3/service\";\nimport { createMappingHandler } from \"../../handlers/mappingHandler\";\nimport { PageVisibility, pageVisibilityFactory } from \"../../common/pageVisibility\";\nimport { metricsHandlerFactory } from \"../metricsHandler\";\nimport { CameraKitConfiguration, configurationToken } from \"../../configuration\";\nimport { Metric } from \"./Metric\";\n\ntype MetricsHandler = (metric: OperationalMetric) => Promise<void>;\ntype CountMetricValue = Extract<OperationalMetric[\"metric\"], { $case: \"count\" }>;\n\n// CameraKit's prod metrics endpoint.\n// See: https://github.sc-corp.net/Snapchat/pb_schema/blob/c390b9c/proto/camera_kit/v3/service.proto#L126\n\nconst DIMENSION_DELIMITER = \".\";\n\n// These values are (currently) arbitrarily selected.\n// TODO: Once we have gathered a sufficient quantity of metrics data, we should tune these numbers to ensure we're\n// operating with the right cost vs. alarming SLA vs. IDB storage size tradeoffs.\nconst METRIC_BATCH_MAX_SIZE = 100;\nconst METRIC_BATCH_MAX_AGE_MS = 5000;\n\n/**\n * Use this class to report operational metrics – these are metrics that describe aspects of the SDK's performance,\n * which may be used to assess and investigate operational issues.\n */\n/** @internal */\nexport class OperationalMetricsReporter {\n    constructor(private readonly metricsHandler: MetricsHandler) {}\n\n    /**\n     * Record a count.\n     *\n     * @param name\n     * @param count\n     * @param dimensions An optional Map containing dimensions which describe the metric.\n     * For example: `new Map([['status', '200']])`\n     * @returns Promise which resolves when the metric has been handled.\n     */\n    count(name: string, count: number, dimensions?: Map<string, string>): Promise<void> {\n        return this.record(name, { $case: \"count\", count }, dimensions);\n    }\n\n    /**\n     * Record a duration in milliseconds.\n     *\n     * @param name\n     * @param latencyMillis\n     * @param dimensions An optional Map containing dimensions which describe the metric.\n     * For example: `new Map([['status', '200']])`\n     * @returns Promise which resolves when the metric has been handled.\n     */\n    timer(name: string, latencyMillis: number, dimensions?: Map<string, string>): Promise<void> {\n        return this.record(name, { $case: \"latencyMillis\", latencyMillis }, dimensions);\n    }\n\n    /**\n     * Record a histogram.\n     *\n     * @param name\n     * @param histogram\n     * @param dimensions An optional Map containing dimensions which describe the metric.\n     * For example: `new Map([['status', '200']])`\n     * @returns Promise which resolves when the metric has been handled.\n     */\n    histogram(name: string, histogram: number, dimensions?: Map<string, string>): Promise<void> {\n        return this.record(name, { $case: \"histogram\", histogram }, dimensions);\n    }\n\n    /**\n     * TODO: This entire class in no longer necessary, since the new Timer/Count/Histogram classes offer a cleaner API\n     * for recording metrics. Once we migrate all operational metrics to use those new APIs, this class can be removed\n     * and call sites will just call the metrics handler directly.\n     *\n     * @param metric Any concrete Metric (e.g. Count, Timer, Histogram)\n     * @returns\n     */\n    async report(metric: Metric): Promise<void> {\n        await Promise.all(metric.toOperationalMetric().map((metric) => this.metricsHandler(metric)));\n    }\n\n    private record(\n        name: string,\n        metric: Required<OperationalMetric>[\"metric\"],\n        dimensions?: Map<string, string | number>\n    ): Promise<void> {\n        // The naming convention (metricName.dimensionName.dimensionValue.dimensionName.dimensionValue...) is mentioned\n        // the Graphene docs here https://wiki.sc-corp.net/display/METRICS/Graphene\n        // TODO: find explicit documentation of the API, if it exists.\n        const serializedDimensions = dimensions\n            ? `.${Array.from(dimensions.entries())\n                  .map((d) => d.join(DIMENSION_DELIMITER))\n                  .join(DIMENSION_DELIMITER)}`\n            : \"\";\n\n        return this.metricsHandler({\n            name: `${name}${serializedDimensions}`,\n            timestamp: new Date(),\n            metric,\n        });\n    }\n}\n\n/**\n * @internal\n */\nexport const operationalMetricReporterFactory = Injectable(\n    \"operationalMetricsReporter\",\n    [metricsHandlerFactory.token, pageVisibilityFactory.token, configurationToken] as const,\n    (metricsHandler: FetchHandler, pageVisibility: PageVisibility, configuration: CameraKitConfiguration) => {\n        const handler = new HandlerChainBuilder(metricsHandler)\n            .map(\n                createMappingHandler((metrics: OperationalMetricsBundle) => {\n                    const request: SetOperationalMetricsRequest = { metrics };\n                    return new Request(\n                        // eslint-disable-next-line max-len\n                        `https://${configuration.apiHostname}/com.snap.camerakit.v3.Metrics/metrics/operational_metrics`,\n                        {\n                            method: \"POST\",\n                            body: JSON.stringify(SetOperationalMetricsRequest.toJSON(request)),\n                            credentials: \"include\",\n\n                            // When this is true it makes fetch behave like `Navigator.sendBeacon` – that is, the\n                            // request will still be made even if the page terminates.\n                            // https://developer.mozilla.org/en-US/docs/Web/API/fetch\n                            keepalive: pageVisibility.isDuringVisibilityTransition(\"hidden\"),\n                        }\n                    );\n                }, pageVisibility)\n            )\n            .map(\n                createBatchingHandler({\n                    // The batching logic here is very simple – it could be improved by e.g.\n                    // computing statistics to reduce overall data sent, etc. Right now this is\n                    // premature optimization, but could become a good idea in the future.\n                    batchReduce: (previousBundle: OperationalMetricsBundle | undefined, metric: OperationalMetric) => {\n                        let metrics = [...(previousBundle?.metrics ?? [])];\n\n                        // For \"count\" metrics, it's straightforward to merge them into\n                        // a single metric with the same name.\n                        const existingCountIndex =\n                            metric.metric?.$case === \"count\"\n                                ? metrics.findIndex((m) => metric.name === m.name && m.metric?.$case === \"count\")\n                                : -1;\n                        if (existingCountIndex >= 0) {\n                            // Safety: Given the condition above, we can be sure that both the existing and new metrics\n                            // are of the \"count\" type.\n                            const existingValue = metrics[existingCountIndex].metric as CountMetricValue;\n                            const newValue = metric.metric as CountMetricValue;\n                            metrics.splice(existingCountIndex, 1, {\n                                ...metric,\n                                metric: {\n                                    $case: \"count\",\n                                    count: existingValue.count + newValue.count,\n                                },\n                            });\n                        } else {\n                            metrics.push(metric);\n                        }\n\n                        return { metrics };\n                    },\n                    isBatchComplete: (bundle) => bundle.metrics.length >= METRIC_BATCH_MAX_SIZE,\n                    maxBatchAge: METRIC_BATCH_MAX_AGE_MS,\n                    pageVisibility,\n                })\n            ).handler;\n\n        return new OperationalMetricsReporter(handler);\n    }\n);\n","import { getLogger } from \"../logger/logger\";\nimport { Persistence, ValidKey } from \"./Persistence\";\n\nconst logger = getLogger(\"ExpiringPersistence\");\n\n/**\n * Create a Persistence that will remove entries after they expire.\n *\n * An expiration function must be provided, which is called each time a value is stored. It must return the expiration\n * time for that value, given in seconds from now. For example, to expire a value 24 hours after it is stored, the\n * expiration function should return 86400 (the number of seconds in 24 hours).\n */\nexport class ExpiringPersistence<T> implements Persistence<T> {\n    constructor(\n        private readonly expiration: (value: T) => number,\n        private readonly persistence: Persistence<[number, T]>\n    ) {\n        this.removeExpired().catch((error) => {\n            logger.warn(\"Failed to cleanup expired entries on startup.\", error);\n        });\n    }\n\n    get size(): number {\n        return this.persistence.size;\n    }\n\n    async retrieve(key: ValidKey): Promise<T | undefined> {\n        const [expiry, value] = (await this.persistence.retrieve(key)) ?? [];\n        if (value === undefined || expiry === undefined) return undefined;\n\n        if (Date.now() > expiry) {\n            await this.persistence.remove(key).catch((error) => {\n                logger.warn(`Key ${key} is expired, but removing it from persistence failed.`, error);\n            });\n            return undefined;\n        }\n        return value;\n    }\n\n    async retrieveAll(): Promise<Array<[ValidKey, T]>> {\n        const now = Date.now();\n        return (await this.persistence.retrieveAll()).filter(([, [expiry]]) => expiry >= now).map(([, v]) => v);\n    }\n\n    remove(key: ValidKey): Promise<void> {\n        return this.persistence.remove(key);\n    }\n\n    async removeAll(): Promise<T[]> {\n        const results = await this.persistence.removeAll();\n        return results.map(([, v]) => v);\n    }\n\n    async removeExpired(): Promise<void> {\n        for (const [key, [expiry]] of await this.persistence.retrieveAll()) {\n            if (Date.now() >= expiry) {\n                await this.persistence\n                    .remove(key)\n                    .catch((error) => logger.warn(`Failed to remove expired key ${key}.`, error));\n            }\n        }\n    }\n\n    store(value: T): Promise<ValidKey>;\n    store(key: ValidKey, value: T): Promise<ValidKey>;\n    store(keyOrValue: T | ValidKey, maybeValue?: T): Promise<ValidKey> {\n        const [key, value] =\n            maybeValue === undefined ? [undefined, keyOrValue as T] : [keyOrValue as ValidKey, maybeValue];\n        const expiry = Date.now() + this.expiration(value) * 1000;\n        return key === undefined\n            ? this.persistence.store([expiry, value])\n            : this.persistence.store(key, [expiry, value]);\n    }\n}\n","/* eslint-disable max-len */\nimport { BrowserHeaders } from \"browser-headers\";\nimport { getCameraKitUserAgent } from \"../platform/cameraKitUserAgent\";\nimport { ensureError } from \"../common/errorHelpers\";\nimport { unionBy } from \"../common/unionBy\";\nimport { CircumstancesServiceClientImpl, GrpcWebImpl } from \"../generated-proto/pb_schema/cdp/cof/circumstance_service\";\nimport { ConfigTargetingRequest } from \"../generated-proto/pb_schema/cdp/cof/config_request\";\nimport { ConfigTargetingResponse } from \"../generated-proto/pb_schema/cdp/cof/config_response\";\nimport { HandlerChainBuilder, RequestMetadata } from \"../handlers/HandlerChainBuilder\";\nimport {\n    RequestStateEventTarget,\n    dispatchRequestCompleted,\n    dispatchRequestErrored,\n    dispatchRequestStarted,\n    requestStateEventTargetFactory,\n} from \"../handlers/requestStateEmittingHandler\";\nimport { createResponseCachingHandler, staleWhileRevalidateStrategy } from \"../handlers/responseCachingHandler\";\nimport { createRetryingHandler } from \"../handlers/retryingHandler\";\nimport { createTimeoutHandler } from \"../handlers/timeoutHandler\";\nimport { IndexedDBPersistence } from \"../persistence/IndexedDBPersistence\";\nimport {\n    OperationalMetricsReporter,\n    operationalMetricReporterFactory,\n} from \"../metrics/operational/operationalMetricsReporter\";\nimport { CameraKitConfiguration, configurationToken } from \"../configuration\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { getLogger } from \"../logger/logger\";\nimport { ExpiringPersistence } from \"../persistence/ExpiringPersistence\";\nimport { convertDaysToSeconds } from \"../common/time\";\n\nexport interface Metadata {\n    [key: string]: string;\n}\n\nexport const COF_REQUEST_TYPE = \"cof\";\n\nexport type CofDimensions = { requestType: typeof COF_REQUEST_TYPE; delta: string };\n\nconst logger = getLogger(\"cofHandler\");\n\n/**\n * Handler chain used to make COF requests. Uses the COF client to perform the\n * requests, with retries, timeout, and caching.\n *\n * The handler will first attempt to retrieve the COF response from cache. If it is found, the result is returned\n * immediately and the cache is updated in the background. If no response is found, a COF request is made. This request\n * will retry (with exponential backoff + jitter) for 5 seconds before returning an error to the caller.\n */\nexport const cofHandlerFactory = Injectable(\n    \"cofHandler\",\n    [configurationToken, requestStateEventTargetFactory.token, operationalMetricReporterFactory.token] as const,\n    (\n        config: CameraKitConfiguration,\n        requestStateEventTarget: RequestStateEventTarget,\n        reporter: OperationalMetricsReporter\n    ) => {\n        const cofCache = new ExpiringPersistence<ConfigTargetingResponse>(\n            () => convertDaysToSeconds(365),\n            new IndexedDBPersistence({ databaseName: \"COFCache\" })\n        );\n        const getCacheKey = (r: Partial<ConfigTargetingRequest>) => JSON.stringify(r);\n        // We need to wrap `targetingQuery` to create a usable Handler – the main issue is that HandlerChainBuilder\n        // always adds a `signal` property to the metadata argument (second argument of the Handler), but\n        // `targetingQuery` expects the second argument to only contain headers.\n        return (\n            new HandlerChainBuilder(\n                async (\n                    request: Partial<ConfigTargetingRequest>,\n                    { signal, isSideEffect: _, ...metadata }: Metadata & RequestMetadata\n                ) => {\n                    const rpc = new GrpcWebImpl(`https://${config.apiHostname}`, {});\n                    const client = new CircumstancesServiceClientImpl(rpc);\n                    return new Promise<ConfigTargetingResponse>(async (resolve, reject) => {\n                        if (signal) {\n                            signal.addEventListener(\"abort\", () =>\n                                reject(new Error(\"COF request aborted by handler chain.\"))\n                            );\n                        }\n\n                        const cachedResponse = await cofCache.retrieve(getCacheKey(request)).catch((e) => {\n                            logger.warn(\"Unable to get COF response from cache.\", e);\n                            return {\n                                configResultsEtag: undefined,\n                                configResults: [],\n                            };\n                        });\n                        const dimensions: CofDimensions = {\n                            requestType: COF_REQUEST_TYPE,\n                            delta: `${!!cachedResponse?.configResultsEtag}`,\n                        };\n                        const { requestId } = dispatchRequestStarted(requestStateEventTarget, { dimensions });\n\n                        try {\n                            const response = await client.targetingQuery(\n                                {\n                                    ...request,\n                                    configResultsEtag: cachedResponse?.configResultsEtag,\n                                    deltaSync: !!cachedResponse?.configResultsEtag,\n                                },\n                                new BrowserHeaders({\n                                    authorization: `Bearer ${config.apiToken}`,\n                                    \"x-snap-client-user-agent\": getCameraKitUserAgent(),\n                                    ...metadata,\n                                })\n                            );\n\n                            // NOTE: in order for cache persistance to work, we need to make the\n                            // object cloneable i.e. with no methods (it appears targetingQuery()\n                            // attaches toObject() to response object). Safety: We have to cast response\n                            // object to a type that has toObject defined, because that is indeed\n                            // what generated code has:\n                            // eslint-disable-next-line max-len\n                            // https://github.sc-corp.net/Snapchat/camera-kit-web-sdk/blob/8d6b4e8bfa3717b376ab197a49972a1e410851f7/packages/web-sdk/src/generated-proto/pb_schema/cdp/cof/circumstance_service.ts#L1459\n                            delete (response as any).toObject;\n\n                            // Merge the cached configs into the just-returned configs, making sure to remove any configs that are marked as deleted -- this will then get cached by\n                            // the responseCachingHandler as we return up the handler chain.\n                            const configResults = unionBy(\n                                \"configId\",\n                                cachedResponse?.configResults ?? [],\n                                response.configResults\n                            ).filter((config) => !config.delete);\n\n                            // TODO: We hardcode status code and sizeByte values because we do not have access to\n                            // underlying transport of configs-web.\n                            // When this ticket is done https://jira.sc-corp.net/browse/CAMKIT-2840,\n                            // we will remove this handler and benefit from existing ones.\n                            const status = 200;\n                            let sizeByte = 0;\n                            try {\n                                sizeByte = new TextEncoder().encode(JSON.stringify(response)).byteLength;\n                            } finally {\n                                dispatchRequestCompleted(requestStateEventTarget, {\n                                    requestId,\n                                    dimensions,\n                                    status,\n                                    sizeByte,\n                                });\n                            }\n\n                            resolve({\n                                ...response,\n                                configResults,\n                            });\n                        } catch (error) {\n                            dispatchRequestErrored(requestStateEventTarget, {\n                                requestId,\n                                dimensions,\n                                error: ensureError(error),\n                            });\n                            reject(error);\n                        }\n                    });\n                }\n            )\n                // targetingQuery() always converts failed responses into errors (unlike fetch()), so we need a custom\n                // retryPredicate that retries all errors. We'll keep retrying (with backoff) for 20 seconds total\n                // elapsed time before we return an error back up the chain.\n                .map(createRetryingHandler({ retryPredicate: (r) => r instanceof Error }))\n                // API gateway has 15 seconds timeout, so we rely on that first\n                .map(createTimeoutHandler({ timeout: 20 * 1000 }))\n                .map(\n                    createResponseCachingHandler(\n                        cofCache,\n                        getCacheKey,\n                        // If we have a matching response already in cache,\n                        // we'll return it immediately and then update the cache in the background.\n                        staleWhileRevalidateStrategy({\n                            requestType: \"cof\",\n                            reporter,\n                        })\n                    )\n                ).handler\n        );\n    }\n);\n","import { from, map, mergeMap, Observable, shareReplay, take } from \"rxjs\";\nimport { CameraKitApiHostname, CameraKitConfiguration, configurationToken } from \"../configuration\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { ConfigTargetingRequest } from \"../generated-proto/pb_schema/cdp/cof/config_request\";\nimport { ConfigResult } from \"../generated-proto/pb_schema/cdp/cof/config_result\";\nimport { Namespace } from \"../generated-proto/pb_schema/cdp/cof/namespace\";\nimport { GetInitializationConfigResponse } from \"../generated-proto/pb_schema/camera_kit/v3/service\";\nimport { cameraKitServiceFetchHandlerFactory, FetchHandler } from \"../handlers\";\nimport { cofHandlerFactory } from \"./cofHandler\";\n\nconst defaultTargetingRequest: Partial<ConfigTargetingRequest> = {\n    namespaces: [Namespace.LENS_CORE, Namespace.CAMERA_KIT_CORE, Namespace.LENS_CORE_CONFIG],\n};\n\nconst initializeConfigRelativePath = \"/com.snap.camerakit.v3.Metrics/metrics/initialization_config\";\n\ntype SupportedNamespaces = Namespace.LENS_CORE | Namespace.CAMERA_KIT_CORE | Namespace.LENS_CORE_CONFIG;\n\nexport type InitializationConfig = GetInitializationConfigResponse;\n\nexport class RemoteConfiguration {\n    private readonly configById: Observable<Map<string, ConfigResult[]>>;\n    private readonly initializationConfig: Observable<InitializationConfig>;\n\n    constructor(\n        lensPerformance: CameraKitConfiguration[\"lensPerformance\"],\n        apiHostname: CameraKitApiHostname,\n        cofHandler: ReturnType<typeof cofHandlerFactory>,\n        fetchHandler: FetchHandler\n    ) {\n        const lensCluster = Promise.resolve(lensPerformance).then((lensPerformance) => {\n            // `0` means no cluster could be determined. For COF, we'll omit a value in that case.\n            return lensPerformance?.cluster === 0 ? undefined : lensPerformance?.cluster;\n        });\n\n        this.configById = from(lensCluster).pipe(\n            // Note: we don't catch errors here, purposefully letting them propagate to subscribers outside this class.\n            // Subscribers, having more context about the config use-case, will know better how to handle an error than\n            // we do here (e.g. their logging / reporting will have more context, and they can use the error they get\n            // from this Observable as a cause).\n            mergeMap((lensClusterOrig4) =>\n                from(\n                    cofHandler({\n                        ...defaultTargetingRequest,\n                        lensClusterOrig4,\n                    })\n                )\n            ),\n            map((result) => {\n                const configById = new Map<string, ConfigResult[]>();\n                result.configResults.forEach((config) => {\n                    const configsWithId = configById.get(config.configId) ?? [];\n                    configsWithId.push(config);\n                    configById.set(config.configId, configsWithId);\n                });\n                return configById;\n            }),\n            shareReplay(1)\n        );\n\n        this.initializationConfig = new Observable<InitializationConfig>((observer) => {\n            fetchHandler(`https://${apiHostname}${initializeConfigRelativePath}`)\n                .then((response) => response.json())\n                .then((data) => {\n                    observer.next(data);\n                    observer.complete();\n                })\n                .catch((err) => observer.error(err));\n        }).pipe(shareReplay(1));\n    }\n\n    /**\n     * COF configuration.\n     */\n    get(configId: string): Observable<ConfigResult[]> {\n        return this.configById.pipe(map((config) => config.get(configId) ?? []));\n    }\n\n    /**\n     * Configuration that is provided by Camera Kit backend.\n     */\n    getInitializationConfig(): Observable<InitializationConfig> {\n        return this.initializationConfig;\n    }\n\n    getNamespace(namespace: SupportedNamespaces): Observable<ConfigResult[]> {\n        return this.configById.pipe(\n            map((configs) => {\n                const namespaceConfigs = Array.from(configs.values())\n                    .filter((values) => values.some((c) => c.namespace === namespace))\n                    .flatMap((results) => results);\n\n                return namespaceConfigs;\n            })\n        );\n    }\n}\n\nexport const remoteConfigurationFactory = Injectable(\n    \"remoteConfiguration\",\n    [configurationToken, cofHandlerFactory.token, cameraKitServiceFetchHandlerFactory.token] as const,\n    (\n        config: CameraKitConfiguration,\n        cofHandler: ReturnType<typeof cofHandlerFactory>,\n        fetchHandler: FetchHandler\n    ): RemoteConfiguration => {\n        const remoteConfig = new RemoteConfiguration(\n            config.lensPerformance,\n            config.apiHostname,\n            cofHandler,\n            fetchHandler\n        );\n\n        // We'll kick off remote configuration loading by subscribing (and then unsubscribing) to a dummy config value.\n        // Subsequent requests for config will use the shared Observable, benefitting from this eager loading.\n        remoteConfig.get(\"\").pipe(take(1)).subscribe();\n\n        return remoteConfig;\n    }\n);\n","import { catchError, firstValueFrom, map, mergeMap } from \"rxjs\";\nimport { isRecord, isString } from \"../../common/typeguards\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { createArrayBufferParsingHandler } from \"../../handlers/arrayBufferParsingHandler\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"../../handlers/HandlerChainBuilder\";\nimport { RemoteConfiguration, remoteConfigurationFactory } from \"../../remote-configuration/remoteConfiguration\";\nimport { AssetLoader, AssetResponse } from \"./LensAssetRepository\";\n\ninterface AssetConfig {\n    url: string;\n    checksum?: string;\n}\n\nconst hasStringValue = (value: unknown): value is { stringValue: string } => {\n    return isRecord(value) && isString(value.stringValue);\n};\n\nconst isAssetConfig = (value: unknown): value is AssetConfig => {\n    return isRecord(value) && isString(value.url) && (value.checksum === undefined || isString(value.checksum));\n};\n\n/**\n * @internal\n */\nexport const deviceDependentAssetLoaderFactory = Injectable(\n    \"deviceDependentAssetLoader\",\n    [defaultFetchHandlerFactory.token, remoteConfigurationFactory.token] as const,\n    (fetchHandler: FetchHandler, remoteConfiguration: RemoteConfiguration): AssetLoader => {\n        const assetHandler = new HandlerChainBuilder(fetchHandler).map(createArrayBufferParsingHandler()).handler;\n\n        return async function deviceDependentAssetLoader({ assetId }): Promise<AssetResponse> {\n            const loadingFailed = (reason: string, cause?: unknown) =>\n                new Error(`Cannot load device-dependent asset ${assetId}. ${reason}`, { cause });\n\n            return firstValueFrom(\n                remoteConfiguration.get(assetId).pipe(\n                    catchError((error) => {\n                        throw loadingFailed(\"COF config failed to load.\", error);\n                    }),\n                    map((configs) => {\n                        if (configs.length === 0) {\n                            throw loadingFailed(`No COF config found corresponding to that assetId.`);\n                        }\n                        // All of the deviceDependent asset configs will only have one value, so we can safely use the\n                        // first (i.e. only) element in the configs list.\n                        const [{ value }] = configs;\n\n                        // Asset configurations are all JSON-encoded in the `stringValue` property. If it doesn't\n                        // exists, we can't fetch the asset.\n                        if (!hasStringValue(value)) throw loadingFailed(\"COF config malformed (missing stringValue)\");\n\n                        let assetConfig: unknown;\n                        try {\n                            assetConfig = JSON.parse(value.stringValue);\n                        } catch (parseError) {\n                            throw loadingFailed(\"COF config malformed (JSON parse error)\", parseError);\n                        }\n\n                        // Asset configurations have a `url` and `checksum` property. Otherwise we're dealing with some\n                        // other kind of configuration, and cannot fetch the asset.\n                        if (!isAssetConfig(assetConfig)) throw loadingFailed(\"COF config malformed (missing URL)\");\n\n                        return assetConfig;\n                    }),\n                    mergeMap(async ({ url, checksum }) => {\n                        // TODO: remove force-cache once https://jira.sc-corp.net/browse/CAMKIT-3671 is addressed\n                        const [data, response] = await assetHandler(url, { cache: \"force-cache\" });\n                        if (!response.ok) throw response;\n                        return { data, checksum };\n                    })\n                )\n            );\n        };\n    }\n);\n","import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { createArrayBufferParsingHandler } from \"../../handlers/arrayBufferParsingHandler\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"../../handlers/HandlerChainBuilder\";\nimport { AssetLoader } from \"./LensAssetRepository\";\n\n/**\n * @internal\n */\nexport const remoteMediaAssetLoaderFactory = Injectable(\n    \"remoteMediaAssetLoader\",\n    [defaultFetchHandlerFactory.token] as const,\n    (fetchHandler: FetchHandler): AssetLoader => {\n        const handler = new HandlerChainBuilder(fetchHandler).map(createArrayBufferParsingHandler()).handler;\n\n        return async function remoteMediaAssetLoader(asset) {\n            // as a default option assuming that RemoteMedia asset type contains asset url in assetId\n            // this behaviour could be changed by providing own implementation for RemoteMedia asset loader\n            //   const cameraKit = bootstrapCameraKit(config, container => {\n            //     return container.provides(Injectable(\n            //       remoteMediaAssetLoaderFactory.token, ...\n            // TODO: remove force-cache once https://jira.sc-corp.net/browse/CAMKIT-3671 is addressed\n            const [buffer, response] = await handler(asset.assetId, { cache: \"force-cache\" });\n            if (!response.ok) throw response;\n            return buffer;\n        };\n    }\n);\n","import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { createArrayBufferParsingHandler } from \"../../handlers/arrayBufferParsingHandler\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"../../handlers/HandlerChainBuilder\";\nimport { AssetLoader } from \"./LensAssetRepository\";\n\n/**\n * @internal\n */\nexport const staticAssetLoaderFactory = Injectable(\n    \"staticAssetLoader\",\n    [defaultFetchHandlerFactory.token] as const,\n    (fetchHandler: FetchHandler): AssetLoader => {\n        const handler = new HandlerChainBuilder(fetchHandler).map(createArrayBufferParsingHandler()).handler;\n\n        return async (asset, _lens, assetManifest) => {\n            const assetUrl = assetManifest?.find((manifest) => manifest.id === asset.assetId)?.assetUrl;\n            if (!assetUrl) {\n                throw new Error(`Cannot load lens asset ${asset.assetId}. Static asset URL could not be found.`);\n            }\n            // TODO: remove force-cache once https://jira.sc-corp.net/browse/CAMKIT-3671 is addressed\n            const [buffer, response] = await handler(assetUrl, { cache: \"force-cache\" });\n            if (!response.ok) throw response;\n            return buffer;\n        };\n    }\n);\n","import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { Lens } from \"../Lens\";\nimport {\n    RequestStateEventTarget,\n    dispatchRequestCompleted,\n    dispatchRequestErrored,\n    dispatchRequestStarted,\n    requestStateEventTargetFactory,\n} from \"../../handlers/requestStateEmittingHandler\";\nimport { AssetDownloadDimensions } from \"../../metrics/reporters/reportLensAndAssetDownload\";\nimport {\n    LensAssetManifestItem,\n    LensAssetManifestItem_RequestTiming,\n    LensAssetManifestItem_Type,\n} from \"../../generated-proto/pb_schema/camera_kit/v3/lens\";\nimport { AssetDescriptor, AssetType, LensCore, lensCoreFactory } from \"../../lens-core-module\";\nimport { assertUnreachable } from \"../../common/assertions\";\nimport { getLogger } from \"../../logger/logger\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../../metrics/metricsEventTarget\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { deviceDependentAssetLoaderFactory } from \"./deviceDependentAssetLoader\";\nimport { remoteMediaAssetLoaderFactory } from \"./remoteMediaAssetLoaderFactory\";\nimport { staticAssetLoaderFactory } from \"./staticAssetLoader\";\n\nconst logger = getLogger(\"LensAssetRepository\");\n\n/**\n * Computes cache key for asset ID and loader type pair.\n * @param asset Asset ID and loader type pair.\n * @returns Cache key.\n */\nfunction getCacheKey(asset: AssetDescriptor) {\n    return `${asset.assetId}_${asset.assetType.value}`;\n}\n\nexport function mapManfiestItemToAssetType(lensCore: LensCore, type: LensAssetManifestItem_Type): AssetType {\n    switch (type) {\n        case LensAssetManifestItem_Type.ASSET:\n            return lensCore.AssetType.Static;\n        case LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET:\n        case LensAssetManifestItem_Type.UNRECOGNIZED:\n            return lensCore.AssetType.DeviceDependent;\n        default:\n            return assertUnreachable(type);\n    }\n}\n\nexport interface Asset {\n    assetId: string;\n    assetBuffer: ArrayBuffer;\n    assetType: AssetType;\n    assetChecksum: string | undefined;\n}\n\nexport type AssetResponse =\n    | ArrayBuffer\n    | {\n          data: ArrayBuffer;\n          checksum?: string;\n      };\n\n/**\n * An AssetLoader is used to retrieve assets. A separate loader may be defined to retrieve different asset types.\n *\n * @category Lenses\n */\nexport type AssetLoader = (\n    asset: AssetDescriptor,\n    lens?: Lens,\n    assetManifest?: LensAssetManifestItem[]\n) => Promise<AssetResponse> | AssetResponse;\n\n/**\n * Registers a remote asset provider function with a given instance of LensCore, and uses a provided mapping of asset\n * types to loading functions to acquire remote asset data and pass it to LensCore.\n *\n * *Note:* LensCoreModule.initialize must be called on the desired LensCoreModule instance **prior** to passing it\n * to the LensAssetProvider constructor. If this class is instantiated with a LensCoreModule that has not been\n * initialized, the registry of the asset provider function will fail silently and no remote assets will be loaded.\n */\nexport class LensAssetRepository {\n    private readonly cachedAssetKeys = new Set<string>();\n\n    constructor(\n        private readonly lensCore: LensCore,\n        private readonly assetLoaders: Map<AssetType, [keyof LensCore[\"AssetType\"], AssetLoader]>,\n        private readonly metrics: MetricsEventTarget,\n        private readonly requestStateEventTarget: RequestStateEventTarget\n    ) {}\n\n    /**\n     * Caches lens assets defined in asset manifest.\n     *\n     * @param assetManifest Lens asset manifest.\n     * @param lens Lens to cache assets of.\n     * @param assetTimings Optionally specifies what assets to cache. By default, on-demand assets are not cached.\n     * @returns Promise rejects if any required assets could not be loaded – if this occurs, it's very likely the Lens\n     * with this manifest will not function.\n     */\n    public async cacheAssets(\n        assetManifest: LensAssetManifestItem[],\n        lens: Lens,\n        assetTimings: LensAssetManifestItem_RequestTiming[] = [LensAssetManifestItem_RequestTiming.REQUIRED]\n    ): Promise<void> {\n        const assetTimingsToPreload = new Set([\n            // That is a bad naming, but PRELOAD_UNSET actually means\n            // that an asset has to be preloaded\n            LensAssetManifestItem_RequestTiming.PRELOAD_UNSET,\n            ...assetTimings,\n        ]);\n        const assetDescriptors = assetManifest\n            .filter((asset) => {\n                return assetTimingsToPreload.has(asset.requestTiming);\n            })\n            .map(({ id, type }) => ({\n                assetId: id,\n                assetType: mapManfiestItemToAssetType(this.lensCore, type),\n            }));\n\n        if (assetDescriptors.length) {\n            // When preloading, we *do* want load failures to reject Promise.all (assets listed in the manifest\n            // are known to be hard requirements of the lens).\n            return this.cacheAssetsByDescriptor(assetDescriptors, lens, assetManifest);\n        }\n    }\n\n    /**\n     * Calls the correct asset loader to fetch the asset's data,\n     * depending on the requested asset's type and provides that to LensCore.\n     */\n    public async loadAsset(\n        assetDescriptor: AssetDescriptor,\n        lens: Lens | undefined,\n        assetManifest: LensAssetManifestItem[] | undefined\n    ): Promise<void> {\n        const { assetId, assetType } = assetDescriptor;\n        const [assetTypeName, assetLoader] = this.assetLoaders.get(assetType) ?? [];\n        const safeAssetTypeName = assetTypeName ?? \"unknown\";\n        const dimensions: AssetDownloadDimensions = {\n            requestType: \"asset\",\n            assetId: assetId,\n            assetType: safeAssetTypeName,\n            lensId: lens?.id ?? \"unknown\",\n        };\n\n        const { requestId } = dispatchRequestStarted(this.requestStateEventTarget, { dimensions });\n\n        try {\n            if (!assetLoader) {\n                throw new Error(`Cannot get asset ${assetId}. Asset type ${safeAssetTypeName} is not supported.`);\n            }\n\n            const assetResponse = await assetLoader(assetDescriptor, lens, assetManifest);\n            const assetBuffer = \"data\" in assetResponse ? assetResponse.data : assetResponse;\n            const assetChecksum = \"checksum\" in assetResponse ? assetResponse.checksum : undefined;\n\n            if (assetBuffer.byteLength === 0) {\n                throw new Error(`Got empty response for asset ${assetId} from ${safeAssetTypeName} loader.`);\n            }\n\n            dispatchRequestCompleted(this.requestStateEventTarget, {\n                requestId,\n                dimensions,\n                status: 200,\n                sizeByte: assetBuffer.byteLength,\n            });\n\n            this.lensCore.provideRemoteAssetsResponse({\n                assetId,\n                assetBuffer,\n                assetType,\n                assetChecksum,\n                onFailure: (lensCoreError) => {\n                    if (/validation failed/.test(lensCoreError.message)) {\n                        this.metrics.dispatchEvent(\n                            new TypedCustomEvent(\"assetValidationFailed\", {\n                                name: \"assetValidationFailed\",\n                                assetId,\n                            })\n                        );\n                    }\n                    logger.warn(`Failed to provide lens asset ${assetId}.`, lensCoreError);\n                },\n            });\n        } catch (error) {\n            const wrappedError = new Error(`Failed to load lens asset ${assetId}.`, { cause: error });\n            dispatchRequestErrored(this.requestStateEventTarget, { requestId, dimensions, error: wrappedError });\n            throw wrappedError;\n        }\n    }\n\n    /**\n     * Downloads and caches assets if applicable. Does nothing for assets that are already in cache.\n     * @param assetDescriptors Asset ID and type pairs.\n     * @param lens Lens to load assets for.\n     * @param assetManifest Lens asset manifest.\n     */\n    private async cacheAssetsByDescriptor(\n        assetDescriptors: AssetDescriptor[],\n        lens: Lens,\n        assetManifest: LensAssetManifestItem[] | undefined\n    ): Promise<void> {\n        await Promise.all(\n            assetDescriptors\n                .filter((assetDescriptors) => !this.cachedAssetKeys.has(getCacheKey(assetDescriptors)))\n                .map(async (assetDescriptor) => {\n                    try {\n                        // NOTE: we allow concurrent cache request to download the same asset more than once,\n                        // because that is better than skipping second request when the firs one fails.\n                        // In future we could improve concurretn logic with observables as part of\n                        // https://jira.sc-corp.net/browse/CAMKIT-3931\n                        await this.loadAsset(assetDescriptor, lens, assetManifest);\n                        this.cachedAssetKeys.add(getCacheKey(assetDescriptor));\n                    } catch (error) {\n                        const { assetId, assetType } = assetDescriptor;\n                        const [assetTypeName] = this.assetLoaders.get(assetType) ?? [];\n                        logger.warn(\n                            `Failed to cache asset ${assetId} of type ${assetTypeName ?? assetType.value}.`,\n                            error\n                        );\n                    }\n                })\n        );\n    }\n}\n\n/**\n * @internal\n */\nexport const lensAssetRepositoryFactory = Injectable(\n    \"lensAssetRepository\",\n    [\n        lensCoreFactory.token,\n        deviceDependentAssetLoaderFactory.token,\n        remoteMediaAssetLoaderFactory.token,\n        staticAssetLoaderFactory.token,\n        metricsEventTargetFactory.token,\n        requestStateEventTargetFactory.token,\n    ] as const,\n    (\n        lensCore: LensCore,\n        deviceDependentAssetLoader: AssetLoader,\n        remoteMediaAssetLoader: AssetLoader,\n        staticAssetLoader: AssetLoader,\n        metrics: MetricsEventTarget,\n        requestStateEventTarget: RequestStateEventTarget\n    ) =>\n        new LensAssetRepository(\n            lensCore,\n            new Map([\n                [lensCore.AssetType.DeviceDependent, [\"DeviceDependent\", deviceDependentAssetLoader]],\n                [lensCore.AssetType.RemoteMediaByUrl, [\"RemoteMediaByUrl\", remoteMediaAssetLoader]],\n                // URL type is deprecated and was introduced before RemoteMediaByURL\n                // however, there are some lenses still using it so we need to support it\n                [lensCore.AssetType.URL, [\"URL\", remoteMediaAssetLoader]],\n                [lensCore.AssetType.Static, [\"Static\", staticAssetLoader]],\n            ]),\n            metrics,\n            requestStateEventTarget\n        )\n);\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Lens } from \"./lens\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport interface ExportLensesByIdRequest {\n    unlockableIds: number[];\n    context: ExportLensesByIdRequest_Context | undefined;\n}\nexport interface ExportLensesByIdRequest_Context {\n    userAgent: string;\n    locale: string;\n    extention: ExportLensesByIdRequest_Context_Extension | undefined;\n    extension: ExportLensesByIdRequest_Context_Extension | undefined;\n    extensionRequestContext: Uint8Array;\n}\nexport interface ExportLensesByIdRequest_Context_Extension {\n    name: ExportLensesByIdRequest_Context_Extension_Name;\n    version: string;\n}\nexport enum ExportLensesByIdRequest_Context_Extension_Name {\n    UNSET = \"UNSET\",\n    SHOP_KIT = \"SHOP_KIT\",\n    LENS_WEB_BUILDER = \"LENS_WEB_BUILDER\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function exportLensesByIdRequest_Context_Extension_NameFromJSON(object: any): ExportLensesByIdRequest_Context_Extension_Name {\n    switch (object) {\n        case 0:\n        case \"UNSET\":\n            return ExportLensesByIdRequest_Context_Extension_Name.UNSET;\n        case 1:\n        case \"SHOP_KIT\":\n            return ExportLensesByIdRequest_Context_Extension_Name.SHOP_KIT;\n        case 2:\n        case \"LENS_WEB_BUILDER\":\n            return ExportLensesByIdRequest_Context_Extension_Name.LENS_WEB_BUILDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ExportLensesByIdRequest_Context_Extension_Name.UNRECOGNIZED;\n    }\n}\nexport function exportLensesByIdRequest_Context_Extension_NameToNumber(object: ExportLensesByIdRequest_Context_Extension_Name): number {\n    switch (object) {\n        case ExportLensesByIdRequest_Context_Extension_Name.UNSET:\n            return 0;\n        case ExportLensesByIdRequest_Context_Extension_Name.SHOP_KIT:\n            return 1;\n        case ExportLensesByIdRequest_Context_Extension_Name.LENS_WEB_BUILDER:\n            return 2;\n        default:\n            return 0;\n    }\n}\nexport interface ExportLensesByIdResponse {\n    lenses: {\n        [key: number]: Uint8Array;\n    };\n    excludedLenses: ExportLensesByIdResponse_ExcludedLens[];\n}\nexport interface ExportLensesByIdResponse_LensesEntry {\n    key: number;\n    value: Uint8Array;\n}\nexport interface ExportLensesByIdResponse_ExcludedLens {\n    lensId: number;\n    code: ExportLensesByIdResponse_ExcludedLens_Code;\n    reason: string;\n}\nexport enum ExportLensesByIdResponse_ExcludedLens_Code {\n    UNSET = \"UNSET\",\n    UNKNOWN = \"UNKNOWN\",\n    NOT_FOUND = \"NOT_FOUND\",\n    INCOMPATIBLE_LENS_CORE_VERSION = \"INCOMPATIBLE_LENS_CORE_VERSION\",\n    ARCHIVED_OR_INVISIBLE = \"ARCHIVED_OR_INVISIBLE\",\n    CONTAINS_MUSIC = \"CONTAINS_MUSIC\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function exportLensesByIdResponse_ExcludedLens_CodeFromJSON(object: any): ExportLensesByIdResponse_ExcludedLens_Code {\n    switch (object) {\n        case 0:\n        case \"UNSET\":\n            return ExportLensesByIdResponse_ExcludedLens_Code.UNSET;\n        case 1:\n        case \"UNKNOWN\":\n            return ExportLensesByIdResponse_ExcludedLens_Code.UNKNOWN;\n        case 2:\n        case \"NOT_FOUND\":\n            return ExportLensesByIdResponse_ExcludedLens_Code.NOT_FOUND;\n        case 3:\n        case \"INCOMPATIBLE_LENS_CORE_VERSION\":\n            return ExportLensesByIdResponse_ExcludedLens_Code.INCOMPATIBLE_LENS_CORE_VERSION;\n        case 4:\n        case \"ARCHIVED_OR_INVISIBLE\":\n            return ExportLensesByIdResponse_ExcludedLens_Code.ARCHIVED_OR_INVISIBLE;\n        case 5:\n        case \"CONTAINS_MUSIC\":\n            return ExportLensesByIdResponse_ExcludedLens_Code.CONTAINS_MUSIC;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ExportLensesByIdResponse_ExcludedLens_Code.UNRECOGNIZED;\n    }\n}\nexport function exportLensesByIdResponse_ExcludedLens_CodeToNumber(object: ExportLensesByIdResponse_ExcludedLens_Code): number {\n    switch (object) {\n        case ExportLensesByIdResponse_ExcludedLens_Code.UNSET:\n            return 0;\n        case ExportLensesByIdResponse_ExcludedLens_Code.UNKNOWN:\n            return 1;\n        case ExportLensesByIdResponse_ExcludedLens_Code.NOT_FOUND:\n            return 2;\n        case ExportLensesByIdResponse_ExcludedLens_Code.INCOMPATIBLE_LENS_CORE_VERSION:\n            return 3;\n        case ExportLensesByIdResponse_ExcludedLens_Code.ARCHIVED_OR_INVISIBLE:\n            return 4;\n        case ExportLensesByIdResponse_ExcludedLens_Code.CONTAINS_MUSIC:\n            return 5;\n        default:\n            return 0;\n    }\n}\nexport interface ExtensionRequestContext {\n    userAgent: string;\n    locale: string;\n}\nexport interface Envelope {\n    lenses: Lens[];\n}\nfunction createBaseExportLensesByIdRequest(): ExportLensesByIdRequest {\n    return { unlockableIds: [], context: undefined };\n}\nexport const ExportLensesByIdRequest = {\n    encode(message: ExportLensesByIdRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        writer.uint32(10).fork();\n        for (const v of message.unlockableIds) {\n            writer.int64(v);\n        }\n        writer.ldelim();\n        if (message.context !== undefined) {\n            ExportLensesByIdRequest_Context.encode(message.context, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExportLensesByIdRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.unlockableIds.push(longToNumber(reader.int64() as Long));\n                        }\n                    }\n                    else {\n                        message.unlockableIds.push(longToNumber(reader.int64() as Long));\n                    }\n                    break;\n                case 2:\n                    message.context = ExportLensesByIdRequest_Context.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExportLensesByIdRequest>, I>>(object: I): ExportLensesByIdRequest {\n        const message = createBaseExportLensesByIdRequest();\n        message.unlockableIds = object.unlockableIds?.map((e) => e) || [];\n        message.context =\n            object.context !== undefined && object.context !== null\n                ? ExportLensesByIdRequest_Context.fromPartial(object.context)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseExportLensesByIdRequest_Context(): ExportLensesByIdRequest_Context {\n    return {\n        userAgent: \"\",\n        locale: \"\",\n        extention: undefined,\n        extension: undefined,\n        extensionRequestContext: new Uint8Array(),\n    };\n}\nexport const ExportLensesByIdRequest_Context = {\n    encode(message: ExportLensesByIdRequest_Context, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.userAgent !== \"\") {\n            writer.uint32(10).string(message.userAgent);\n        }\n        if (message.locale !== \"\") {\n            writer.uint32(18).string(message.locale);\n        }\n        if (message.extention !== undefined) {\n            ExportLensesByIdRequest_Context_Extension.encode(message.extention, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.extension !== undefined) {\n            ExportLensesByIdRequest_Context_Extension.encode(message.extension, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.extensionRequestContext.length !== 0) {\n            writer.uint32(42).bytes(message.extensionRequestContext);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdRequest_Context {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExportLensesByIdRequest_Context();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.userAgent = reader.string();\n                    break;\n                case 2:\n                    message.locale = reader.string();\n                    break;\n                case 3:\n                    message.extention = ExportLensesByIdRequest_Context_Extension.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.extension = ExportLensesByIdRequest_Context_Extension.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.extensionRequestContext = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExportLensesByIdRequest_Context>, I>>(object: I): ExportLensesByIdRequest_Context {\n        const message = createBaseExportLensesByIdRequest_Context();\n        message.userAgent = object.userAgent ?? \"\";\n        message.locale = object.locale ?? \"\";\n        message.extention =\n            object.extention !== undefined && object.extention !== null\n                ? ExportLensesByIdRequest_Context_Extension.fromPartial(object.extention)\n                : undefined;\n        message.extension =\n            object.extension !== undefined && object.extension !== null\n                ? ExportLensesByIdRequest_Context_Extension.fromPartial(object.extension)\n                : undefined;\n        message.extensionRequestContext = object.extensionRequestContext ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseExportLensesByIdRequest_Context_Extension(): ExportLensesByIdRequest_Context_Extension {\n    return { name: ExportLensesByIdRequest_Context_Extension_Name.UNSET, version: \"\" };\n}\nexport const ExportLensesByIdRequest_Context_Extension = {\n    encode(message: ExportLensesByIdRequest_Context_Extension, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.name !== ExportLensesByIdRequest_Context_Extension_Name.UNSET) {\n            writer.uint32(8).int32(exportLensesByIdRequest_Context_Extension_NameToNumber(message.name));\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdRequest_Context_Extension {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExportLensesByIdRequest_Context_Extension();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = exportLensesByIdRequest_Context_Extension_NameFromJSON(reader.int32());\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExportLensesByIdRequest_Context_Extension>, I>>(object: I): ExportLensesByIdRequest_Context_Extension {\n        const message = createBaseExportLensesByIdRequest_Context_Extension();\n        message.name = object.name ?? ExportLensesByIdRequest_Context_Extension_Name.UNSET;\n        message.version = object.version ?? \"\";\n        return message;\n    },\n};\nfunction createBaseExportLensesByIdResponse(): ExportLensesByIdResponse {\n    return { lenses: {}, excludedLenses: [] };\n}\nexport const ExportLensesByIdResponse = {\n    encode(message: ExportLensesByIdResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        Object.entries(message.lenses).forEach(([key, value]) => {\n            ExportLensesByIdResponse_LensesEntry.encode({ key: key as any, value }, writer.uint32(10).fork()).ldelim();\n        });\n        for (const v of message.excludedLenses) {\n            ExportLensesByIdResponse_ExcludedLens.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExportLensesByIdResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = ExportLensesByIdResponse_LensesEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.lenses[entry1.key] = entry1.value;\n                    }\n                    break;\n                case 2:\n                    message.excludedLenses.push(ExportLensesByIdResponse_ExcludedLens.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExportLensesByIdResponse>, I>>(object: I): ExportLensesByIdResponse {\n        const message = createBaseExportLensesByIdResponse();\n        message.lenses = Object.entries(object.lenses ?? {}).reduce<{\n            [key: number]: Uint8Array;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[Number(key)] = value;\n            }\n            return acc;\n        }, {});\n        message.excludedLenses =\n            object.excludedLenses?.map((e) => ExportLensesByIdResponse_ExcludedLens.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseExportLensesByIdResponse_LensesEntry(): ExportLensesByIdResponse_LensesEntry {\n    return { key: 0, value: new Uint8Array() };\n}\nexport const ExportLensesByIdResponse_LensesEntry = {\n    encode(message: ExportLensesByIdResponse_LensesEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== 0) {\n            writer.uint32(8).int64(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdResponse_LensesEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExportLensesByIdResponse_LensesEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = longToNumber(reader.int64() as Long);\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExportLensesByIdResponse_LensesEntry>, I>>(object: I): ExportLensesByIdResponse_LensesEntry {\n        const message = createBaseExportLensesByIdResponse_LensesEntry();\n        message.key = object.key ?? 0;\n        message.value = object.value ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBaseExportLensesByIdResponse_ExcludedLens(): ExportLensesByIdResponse_ExcludedLens {\n    return { lensId: 0, code: ExportLensesByIdResponse_ExcludedLens_Code.UNSET, reason: \"\" };\n}\nexport const ExportLensesByIdResponse_ExcludedLens = {\n    encode(message: ExportLensesByIdResponse_ExcludedLens, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.lensId !== 0) {\n            writer.uint32(8).int64(message.lensId);\n        }\n        if (message.code !== ExportLensesByIdResponse_ExcludedLens_Code.UNSET) {\n            writer.uint32(16).int32(exportLensesByIdResponse_ExcludedLens_CodeToNumber(message.code));\n        }\n        if (message.reason !== \"\") {\n            writer.uint32(26).string(message.reason);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdResponse_ExcludedLens {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExportLensesByIdResponse_ExcludedLens();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.lensId = longToNumber(reader.int64() as Long);\n                    break;\n                case 2:\n                    message.code = exportLensesByIdResponse_ExcludedLens_CodeFromJSON(reader.int32());\n                    break;\n                case 3:\n                    message.reason = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExportLensesByIdResponse_ExcludedLens>, I>>(object: I): ExportLensesByIdResponse_ExcludedLens {\n        const message = createBaseExportLensesByIdResponse_ExcludedLens();\n        message.lensId = object.lensId ?? 0;\n        message.code = object.code ?? ExportLensesByIdResponse_ExcludedLens_Code.UNSET;\n        message.reason = object.reason ?? \"\";\n        return message;\n    },\n};\nfunction createBaseExtensionRequestContext(): ExtensionRequestContext {\n    return { userAgent: \"\", locale: \"\" };\n}\nexport const ExtensionRequestContext = {\n    encode(message: ExtensionRequestContext, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.userAgent !== \"\") {\n            writer.uint32(10).string(message.userAgent);\n        }\n        if (message.locale !== \"\") {\n            writer.uint32(18).string(message.locale);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): ExtensionRequestContext {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExtensionRequestContext();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.userAgent = reader.string();\n                    break;\n                case 2:\n                    message.locale = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<ExtensionRequestContext>, I>>(object: I): ExtensionRequestContext {\n        const message = createBaseExtensionRequestContext();\n        message.userAgent = object.userAgent ?? \"\";\n        message.locale = object.locale ?? \"\";\n        return message;\n    },\n};\nfunction createBaseEnvelope(): Envelope {\n    return { lenses: [] };\n}\nexport const Envelope = {\n    decode(input: _m0.Reader | Uint8Array, length?: number): Envelope {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEnvelope();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.lenses.push(Lens.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Envelope>, I>>(object: I): Envelope {\n        const message = createBaseEnvelope();\n        message.lenses = object.lenses?.map((e) => Lens.fromPartial(e)) || [];\n        return message;\n    },\n};\nexport interface Export {\n    ExportLensesById(request: ExportLensesByIdRequest): Promise<ExportLensesByIdResponse>;\n}\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { Envelope } from \"../generated-proto/pb_schema/camera_kit/v3/export\";\nimport { Lens } from \"../generated-proto/pb_schema/camera_kit/v3/lens\";\n\n/**\n * Provides Lens metadata for one or more Lens groups.\n *\n * When a Lens or Lens group is requested via the {@link LensRepository}, CameraKit will find the LensSource which\n * claims ownership of that group. The appropriate LensSource method will be called and must return an ArrayBuffer\n * containing the encoded Lens metadata -- this can be obtained from a CameraKit backend API.\n */\nexport interface LensSource {\n    isGroupOwner(groupId: string): boolean;\n    loadLens(lensId: string, groupId: string): Promise<ArrayBuffer>;\n    loadLensGroup(groupId: string): Promise<ArrayBuffer>;\n}\n\n/**\n * By default, no custom {@link LensSources} are provided to CameraKit. But to enable certain advanced use-cases,\n * applications may provide their own LensSources.\n *\n * Perhaps the most convenient way to do this is with {@link ConcatInjectable}, as shown here:\n *\n * @example\n * ```ts\n * import { bootstrapCameraKit, lensSourcesFactory, LensSource } from '@snap/camera-kit'\n *\n * const cameraKit = bootstrapCameraKit(config, (container) => {\n *   return container.provides(ConcatInjectable(\n *     lensSourcesFactory.token,\n *     (): LensSource => { return ... }\n *   ))\n * })\n * ```\n */\nexport const lensSourcesFactory = Injectable(\"lensSources\", (): LensSource[] => []);\n\n/**\n * Given a list of LensSources (like the one provided by CameraKit's DI container under the `'lensSources'` token), and\n * a groupId/lensId, return a list of lenses loaded by the first LensSource claiming ownership of the given groupId.\n *\n * @internal\n */\nexport async function loadLensesFromSources(sources: LensSource[], groupId: string, lensId?: string): Promise<Lens[]> {\n    const source = sources.find((source) => source.isGroupOwner(groupId));\n    if (!source) {\n        throw new Error(\n            `Cannot load lens ${lensId ? `${lensId} from ` : \"\"}group ${groupId}. No LensSource claimed ownership of` +\n                `that lens group.`\n        );\n    }\n    const envelope =\n        lensId === undefined ? await source.loadLensGroup(groupId) : await source.loadLens(lensId, groupId);\n\n    return envelope instanceof ArrayBuffer || ArrayBuffer.isView(envelope)\n        ? Envelope.decode(envelope instanceof Uint8Array ? envelope : new Uint8Array(envelope)).lenses\n        : [];\n}\n","import { guard, validate } from \"../common/validate\";\nimport { isArrayOfType, isSafeString, isSafeStringArray, isString, isUndefined } from \"../common/typeguards\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport {\n    RequestStateEventTarget,\n    createRequestStateEmittingHandler,\n    requestStateEventTargetFactory,\n} from \"../handlers/requestStateEmittingHandler\";\nimport { LensDownloadDimensions } from \"../metrics/reporters/reportLensAndAssetDownload\";\nimport { Handler, HandlerChainBuilder } from \"../handlers/HandlerChainBuilder\";\nimport { createArrayBufferParsingHandler } from \"../handlers/arrayBufferParsingHandler\";\nimport { LensAssetManifestItem_RequestTiming } from \"../generated-proto/pb_schema/camera_kit/v3/lens\";\nimport { getLogger } from \"../logger/logger\";\nimport { errorLoggingDecorator } from \"../logger/errorLoggingDecorator\";\nimport { ensureError } from \"../common/errorHelpers\";\nimport { isLensArray, Lens, LensProtoWithGroupId, toPublicLens } from \"./Lens\";\nimport { LensAssetRepository, lensAssetRepositoryFactory } from \"./assets/LensAssetRepository\";\nimport { LensSource, loadLensesFromSources, lensSourcesFactory } from \"./LensSource\";\n\nconst logger = getLogger(\"LensRepository\");\nconst log = errorLoggingDecorator(logger);\n\ntype LensFetchHandler = Handler<\n    [RequestInfo, LensDownloadDimensions],\n    [ArrayBuffer, Response],\n    RequestInit | undefined\n>;\n\nconst assetTimingMap = {\n    required: LensAssetManifestItem_RequestTiming.REQUIRED,\n    onDemand: LensAssetManifestItem_RequestTiming.ON_DEMAND,\n};\n\nfunction isAssetTiming(value: unknown): value is AssetTiming {\n    return isString(value) && assetTimingMap.hasOwnProperty(value);\n}\n\nfunction isOptionalAssetTimingArray(value: unknown): value is undefined | AssetTiming[] {\n    return isUndefined(value) || isArrayOfType(isAssetTiming, value);\n}\n\n/**\n * Lens assets are included in a manifest, and each will indicate when that asset will be used by the lens.\n *\n * Assets can have the following timing values:\n * - `required`: the lens will definitely request this asset immediately when the lens is applied.\n * - `onDemand`: the lens may request this asset at some time while the lens is applied.\n *\n * Depending on the use-case, an application may want to cache both required and onDemand assets for\n * a particular lens, or may decide to only cache required assets (or cache no assets).\n *\n * @category Lenses\n */\nexport type AssetTiming = keyof typeof assetTimingMap;\n\nexport interface LensBinary {\n    lensBuffer: ArrayBuffer;\n    lensChecksum: string;\n}\n\n/**\n * The LensRepository is used to query for lenses from specific lens groups, or for a lens with a specific ID.\n *\n * Lens groups are configured in the CameraKit Portal -- that's where you'll find lens group IDs and lens IDs.\n *\n * Lenses must be loaded by the LensRepository before they can be applied to a {@link CameraKitSession}.\n *\n * @example\n * ```ts\n * const cameraKit = await bootstrapCameraKit(options)\n * const session = await cameraKit.createSession()\n * const lens = await cameraKit.lensRepository.loadLens(lensId, groupId)\n * session.applyLens(lens)\n * ```\n *\n * @category Lenses\n */\nexport class LensRepository {\n    private readonly metadataCache = new Map<string, LensProtoWithGroupId>();\n    private readonly binariesCache = new Map<string, ArrayBuffer>();\n\n    /** @internal */\n    constructor(\n        private readonly lensFetchHandler: LensFetchHandler,\n        private readonly lensSources: LensSource[],\n        private readonly lensAssetRepository: LensAssetRepository\n    ) {}\n\n    /**\n     * Retrieve a single Lens.\n     *\n     * @param lensId Desired Lens's unique ID. Can be found in the CameraKit Portal.\n     * @param groupId The ID of a group containing the desired Lens. Can be found in the CameraKit Portal.\n     * @returns Resolves with the desired Lens, or rejects if an error occurred (including a missing Lens).\n     */\n    @validate\n    @log\n    async loadLens(@guard(isSafeString) lensId: string, @guard(isSafeString) groupId: string): Promise<Lens> {\n        const lens = (await loadLensesFromSources(this.lensSources, groupId, lensId))[0];\n        if (!lens) {\n            throw new Error(`Cannot load lens. No lens with id ${lensId} was found in lens group ${groupId}.`);\n        }\n        const lensWithGroup: LensProtoWithGroupId = { ...lens, groupId };\n        this.metadataCache.set(lens.id, lensWithGroup);\n        return toPublicLens(lensWithGroup);\n    }\n\n    /**\n     * Retrieve the Lenses contained in a list of Lens Groups.\n     *\n     * This may result in multiple requests to retrieve Lens data (e.g. one per desired group). If any constituent\n     * requests fail, those errors will be reported in the response – but the returned Promise will not be rejected. Any\n     * Lenses which could be successfully retrieved will be available in the response.\n     *\n     * @param groupIds A list of Lens Group IDs. Can be found in the CameraKit Portal.\n     * @returns Resolves with a flattened list of all lenses in the desired groups. If any errors occurred during the\n     * query operation, these will be included in a separate list. If errors are present, the list of Lenses may not\n     * contain all the Lenses from the desired groups.\n     */\n    @validate\n    @log\n    async loadLensGroups(@guard(isSafeStringArray) groupIds: string[]): Promise<{\n        errors: Error[];\n        lenses: Lens[];\n    }> {\n        const responses = await Promise.all(\n            groupIds.map(async (groupId) => {\n                try {\n                    return (await loadLensesFromSources(this.lensSources, groupId)).map((lens) => {\n                        const lensWithGroup = { ...lens, groupId };\n                        this.metadataCache.set(lens.id, lensWithGroup);\n                        return toPublicLens(lensWithGroup);\n                    });\n                } catch (e) {\n                    const error = ensureError(e);\n                    logger.error(new Error(`Failed to load lens group ${groupId}.`, { cause: error }));\n                    return error;\n                }\n            })\n        );\n\n        return responses.reduce(\n            (result, response) => {\n                if (response instanceof Error) result.errors.push(response);\n                else result.lenses.push(...response);\n                return result;\n            },\n            { errors: [], lenses: [] } as { errors: Error[]; lenses: Lens[] }\n        );\n    }\n\n    /**\n     * Loads and caches lens content and dependencies to reduce latency when {@link CameraKitSession.applyLens} is later\n     * called to apply the lens. This is an in-memory cache, it will not be persisted across page loads.\n     *\n     * This may useful if the application A) knows which lenses will be applied and B) has some opportunity to call\n     * this method before a lens is applied. For example, if the user must perform some other actions before lenses\n     * become active, this might be a good opportunity to cache lenses to improve applyLens latency.\n     *\n     * @example\n     * ```ts\n     * const lens = await cameraKit.lensRepository.loadLens(lensId, groupId)\n     * await cameraKit.lensRepository.cacheLensContent([lens])\n     *\n     * // sometime later -- this call will use the cached lens content, making lens application faster.\n     * await cameraKitSession.applyLens(lens)\n     * ```\n     *\n     * @param lenses Array of lenses to cache in memory.\n     * @param assetTimingsToCache Lenses specify certain required assets that are necessary for the lens to render, and\n     * other assets which may be needed by the lens. By default this method will cache all of those assets, but this\n     * behavior can be modified to only load the required assets, only the \"onDemand\" assets, or neither (by passing\n     * an empty array).\n     */\n    @validate\n    @log\n    async cacheLensContent(\n        @guard(isLensArray) lenses: Lens[],\n        @guard(isOptionalAssetTimingArray) assetTimingsToCache: AssetTiming[] = [\"required\", \"onDemand\"]\n    ) {\n        const assetTimingsToLoad = assetTimingsToCache.map((timing) => assetTimingMap[timing]);\n        await Promise.all(\n            lenses.map(async (lens) => {\n                try {\n                    const { lensBuffer } = await this.getLensContent(lens);\n                    // Safety: getLensContent() call above ensures metadata to exist\n                    const { content } = this.metadataCache.get(lens.id)!;\n                    this.binariesCache.set(lens.id, lensBuffer);\n                    await this.lensAssetRepository.cacheAssets(content!.assetManifest, lens, assetTimingsToLoad);\n                } catch (error) {\n                    logger.warn(`Failed to cache lens ${lens.id}.`, error);\n                }\n            })\n        );\n    }\n\n    /**\n     * Returns loaded Lens metadata if available.\n     */\n    getLensMetadata(lensId: string): LensProtoWithGroupId | undefined {\n        return this.metadataCache.get(lensId);\n    }\n\n    /**\n     * Removes Lens content from the in-memory cache.\n     */\n    removeCachedLenses(lenses: Lens[]) {\n        lenses.forEach((lens) => this.binariesCache.delete(lens.id));\n    }\n\n    /**\n     * Fetches lens content and assets. This may come from the cache, otherwise network requests will be made.\n     *\n     * @internal\n     */\n    async getLensContent(lens: Lens): Promise<LensBinary> {\n        const { content } = this.metadataCache.get(lens.id) ?? {};\n        if (!content) {\n            throw new Error(`Cannot find metadata for lens ${lens.id}.`);\n        }\n\n        const cachedLensBuffer = this.binariesCache.get(lens.id);\n        if (cachedLensBuffer) {\n            return {\n                lensBuffer: cachedLensBuffer,\n                lensChecksum: content.lnsSha256,\n            };\n        }\n\n        // Load required lens assets and the lens itself in parallel. We count both toward lens download time.\n        const [lensBuffer] = await this.lensFetchHandler([\n            // TODO: remove force-cache once https://jira.sc-corp.net/browse/CAMKIT-3671 is addressed\n            new Request(content.lnsUrlBolt, { cache: \"force-cache\" }),\n            {\n                requestType: \"lens_content\",\n                lensId: lens.id,\n            },\n        ]);\n        return { lensBuffer, lensChecksum: content.lnsSha256 };\n    }\n}\n\n/**\n * @internal\n */\nexport const lensRepositoryFactory = Injectable(\n    \"LensRepository\",\n    [\n        requestStateEventTargetFactory.token,\n        defaultFetchHandlerFactory.token,\n        lensSourcesFactory.token,\n        lensAssetRepositoryFactory.token,\n    ],\n    (\n        requestStateEventTarget: RequestStateEventTarget,\n        defaultFetchHandler: FetchHandler,\n        lensSources: LensSource[],\n        lensAssetRepository: LensAssetRepository\n    ) => {\n        const lensFetchHandler = new HandlerChainBuilder(defaultFetchHandler)\n            .map(createRequestStateEmittingHandler<LensDownloadDimensions>(requestStateEventTarget))\n            .map(createArrayBufferParsingHandler()).handler;\n\n        return new LensRepository(lensFetchHandler, lensSources, lensAssetRepository);\n    }\n);\n","import { entries } from \"../common/entries\";\nimport { memoize, Memoized } from \"../common/memoize\";\nimport { Container } from \"./Container\";\nimport { AddService, InjectableFunction, ServicesFromTokenizedParams, ValidTokens } from \"./types\";\n\n// Using a conditional type forces TS language services to evaluate the type -- so when showing e.g. type hints, we\n// will see the mapped type instead of the AddDependencies type alias. This produces better hints.\ntype AddDependencies<ParentDependencies, Dependencies> = ParentDependencies extends any\n    ? // A mapped type produces better, more concise type hints than an intersection type.\n      {\n          [K in keyof ParentDependencies | keyof Dependencies]: K extends keyof ParentDependencies\n              ? ParentDependencies[K]\n              : K extends keyof Dependencies\n              ? Dependencies[K]\n              : never;\n      }\n    : never;\n\ntype ExcludeKey<T, U> = T extends any ? { [K in Exclude<keyof T, U>]: T[K] } : never;\n\ntype PartialInjectableFunction<\n    Params extends readonly any[],\n    Tokens extends readonly string[],\n    Token extends string,\n    Service\n> = {\n    (...args: Params): Service;\n    token: Token;\n    dependencies: Tokens;\n};\n\ntype Injectables<Services, Dependencies> = {\n    [K in keyof Services]: K extends string\n        ? InjectableFunction<Services & Dependencies, readonly ValidTokens<Services & Dependencies>[], K, Services[K]>\n        : never;\n};\n\ntype PartialContainerFactories<Services, Dependecies> = {\n    [K in keyof Services]: Memoized<(c: Container<Partial<Services> & Dependecies>) => Services[K]>;\n};\n\n/**\n * Similar to [Container], with the exception that Services may be provided to a PartialContainer which *does not*\n * contain all of that Services dependencies.\n *\n * For this to remain safe, Services can not be resolved by PartialContainer – it has no `get` method.\n *\n * Instead, the PartialContainer must be provided to a [Container] which *does* contain all the dependencies required\n * by all the Service in the PartialContainer. The resulting [Container] can then resolve these Services.\n *\n * PartialContainers are used to create a collection of Services which can then be provided via a simple one-line syntax\n * to an existing Container (which fulfills the collection's dependencies). It is an organizational tool, allowing\n * coherent groupings of Services to be defined in one place, then combined elsewhere to form a complete [Container].\n *\n * Here's an example of PartialContainer usage:\n * ```ts\n * // We can provide fooFactory, even though the PartialContainer doesn't fulfill the Bar dependency.\n * const fooFactory = Injectable('Foo', ['Bar'] as const, (bar: Bar) => new Foo(bar))\n * const partialContainer = new PartialContainer({}).provide(fooFactory)\n *\n * const barFactory = Injectable('Bar', () => new Bar())\n * const dependenciesContainer = Container.provides(barFactory)\n *\n * const combinedContainer = dependenciesContainer.provides(partialContainer)\n *\n * // We can resolve Foo, because the combined container includes Bar, so all of Foo's dependencies are now met.\n * const foo = combinedContainer.get('Foo')\n * ```\n */\n/** @internal */\nexport class PartialContainer<Services = {}, Dependencies = {}> {\n    constructor(private readonly injectables: Injectables<Services, Dependencies>) {}\n\n    /**\n     * Create a new PartialContainer which provides a Service created by the given InjectableFunction.\n     *\n     * The InjectableFunction contains metadata specifying the Token by which the created Service will be known, as well\n     * as an ordered list of Tokens to be resolved and provided to the InjectableFunction as arguments.\n     *\n     * This dependencies are allowed to be missing from the PartialContainer, but these dependencies are maintained as a\n     * parameter of the returned PartialContainer. This allows `[Container.provides]` to type check the dependencies and\n     * ensure they can be provided by the Container.\n     *\n     * @param fn A InjectableFunction, taking dependencies as arguments, which returns the Service.\n     */\n    provides<\n        AdditionalDependencies extends readonly any[],\n        Tokens extends readonly string[],\n        Token extends string,\n        Service\n    >(\n        fn: PartialInjectableFunction<AdditionalDependencies, Tokens, Token, Service>\n    ): PartialContainer<\n        AddService<Services, Token, Service>,\n        // The dependencies of the new PartialContainer are the combined dependencies of this container and the\n        // PartialInjectableFunction -- but we exclude any dependencies already provided by this container (i.e. this\n        // container's Services) as well as the new Service being provided.\n        ExcludeKey<\n            AddDependencies<\n                ExcludeKey<Dependencies, Token>,\n                ServicesFromTokenizedParams<Tokens, AdditionalDependencies>\n            >,\n            keyof Services\n        >\n    > {\n        return new PartialContainer({ ...this.injectables, [fn.token]: fn } as any);\n    }\n\n    /**\n     * In order to create a [Container], the InjectableFunctions maintained by the PartialContainer must be memoized\n     * into Factories that can resolve their dependencies and return the correct Service.\n     *\n     * In particular, this requires access to a \"parent\" Container to avoid infinite looping in cases where Service A\n     * depends on Service A – this is allowed (as long as the parent container provides Service A), but requires access\n     * to the parent Container to provide the parent implementation of Service A.\n     *\n     * This also means that Services provided by a PartialContainer to a Container via this function will always be\n     * scoped to the Container. In other words, if a PartialContainer containing Service A is provided to both\n     * Container X and Container Y, when Service A is resolved by Container X the InjectableFunction used to create\n     * Service A will be invoked – and when Service A is resolved by Container Y, the InjectableFunction will be invoked\n     * again.\n     *\n     * @param parent A [Container] which provides all the required Dependencies of this PartialContainer.\n     */\n    getFactories(parent: Container<Dependencies>): PartialContainerFactories<Services, Dependencies> {\n        return Object.fromEntries(\n            entries(this.injectables).map(([token, fn]) => {\n                return [\n                    token,\n                    memoize((c: Container<Services & Dependencies>) => {\n                        return fn(\n                            ...(fn.dependencies.map((t) => {\n                                return t === token\n                                    ? parent.get(t as keyof Dependencies)\n                                    : c.get(t as keyof Services & Dependencies);\n                            }) as any)\n                        );\n                    }),\n                ];\n            })\n        ) as PartialContainerFactories<Services, Dependencies>;\n    }\n\n    getTokens(): Array<keyof Services> {\n        return Object.keys(this.injectables) as Array<keyof Services>;\n    }\n}\n","import { isMemoized, memoize, Memoized } from \"../common/memoize\";\nimport { PartialContainer } from \"./PartialContainer\";\nimport { AddService, InjectableFunction, ValidTokens } from \"./types\";\n\ntype MaybeMemoizedFactories<Services> = {\n    [K in keyof Services]:\n        | ((c: Container<Services>) => Services[K])\n        | Memoized<(c: Container<Services>) => Services[K]>;\n};\n\nexport type Factories<Services> = {\n    [K in keyof Services]: Memoized<(c: Container<Services>) => Services[K]>;\n};\n\nexport const CONTAINER = \"$container\";\nexport type ContainerToken = typeof CONTAINER;\n\n/**\n * A Container of values, indexed each by a unique token, which can be used throughout CameraKit. This is how CameraKit\n * implements simple dependency injection.\n *\n * Dependency injection is a way to decouple the *use* of a dependency from the *creation* of that dependency. This\n * improves modularity and re-usability, since components only care about the *interfaces* of dependencies (since that\n * determines their use) and not about their concrete creation. New implementations of a particular dependency may be\n * provided without the need to change any of the consumers of that dependency.\n *\n * There are a few commonly-used terms used when talking about dependency injection:\n *\n *   - Container (or Injector): Maintains a registry of all available Services and understands how to create them.\n *   - Service: Anything that can be provided by the Container is called a Service – this can be a value of any type.\n *   - Token: Each Service is associated with a unique name, or Token. In order to obtain a Service from the Container,\n *     the consumer must provide the Token corresponding to that Service.\n *   - InjectableFunction: Services are created by InjectableFunctions. When adding a Service to a Container, the\n *     Service provider gives the Container a InjectableFunction which, when called will return the Service. These\n *     InjectableFunctions may themselves use other Services, which will be passed to them as arguments.\n *\n * Services are, by default, singletons – that is, each call to `get()` a particular Service will return a reference\n * to the same value. In other words, InjectableFunctions are only invoked once. If multiple instances of a Service are\n * desired, a new Container can be created using the `copy([Token])` method – passing a Token to this method forces the\n * new Container to recreate the corresponding Service (the InjectableFunction will be invoked again). We say that the\n * Service is then \"scoped\" to the new Container.\n *\n *\n * One common downside of many dependency injection implementations is that the dependency graph formed by the various\n * Services can only be validated at runtime. That is, if a dependency is missing or a circular dependency is found, the\n * developer must wait until runtime to discover the error. These errors can often be confusing and hard to debug.\n *\n * This implementation eliminates this issue by moving these sorts of errors to compile time. If an unknown dependency\n * is used in a InjectableFunction, for example, the code simply won't compile.\n *\n * To achieve this, we do lose the ability to implicitly define the dependency graph, as is common with many dependency\n * injection frameworks that employ decorators to define Services and their dependencies. Instead, the dependency graph\n * must be constructed explicitly, step-by-step, via successive calls to the `provide()` method. This is a suitable\n * trade-off for CameraKit, as there are a relatively small number of Services.\n *\n * Here's a simple example of Container usage:\n * ```ts\n * const fooFactory = Injectable('Foo', () => new Foo())\n * const barFactory = Injectable('Bar', ['Foo'] as const, (foo: Foo) => new Bar(foo))\n * const container = Container.empy()\n *   .provide(fooFactory)\n *   .provide(barFactory)\n *\n * const bar: Bar = container.get('Bar')\n * ```\n */\n/** @internal */\nexport class Container<Services = {}> {\n    /**\n     * Create a new [Container] by providing a [PartialContainer] that has no dependencies.\n     */\n    static provides<Services>(container: PartialContainer<Services, {}> | Container<Services>): Container<Services>;\n\n    /**\n     * Create a new [Container] by providing a Service that has no dependencies.\n     */\n    static provides<Token extends string, Service>(\n        fn: InjectableFunction<{}, [], Token, Service>\n    ): Container<AddService<{}, Token, Service>>;\n\n    static provides(\n        fnOrContainer: InjectableFunction<{}, [], string, any> | PartialContainer<any, {}> | Container<any>\n    ): Container<any> {\n        // Although the `provides` method has overloads that match both members of the union type separately, it does\n        // not match the union type itself, so the compiler forces us to branch and handle each type within the union\n        // separately. (Maybe in the future the compiler will decide to infer this, but for now this is necessary.)\n        if (fnOrContainer instanceof PartialContainer) return new Container({}).provides(fnOrContainer);\n        if (fnOrContainer instanceof Container) return new Container({}).provides(fnOrContainer);\n        return new Container({}).provides(fnOrContainer);\n    }\n\n    private readonly factories: Factories<Services>;\n\n    constructor(factories: MaybeMemoizedFactories<Services>) {\n        this.factories = {} as Factories<Services>;\n        for (const k in factories) {\n            const fn = factories[k];\n            if (isMemoized(fn)) this.factories[k] = fn;\n            else this.factories[k] = memoize(fn);\n        }\n    }\n\n    /**\n     * Create a copy of this Container, optionally providing a list of Services which will be scoped to the copy.\n     *\n     * This can be useful, for example, if different parts of an application wish to use the same Service interface, but\n     * do not want to share a reference to same Service instance.\n     *\n     * Say we have a Service which manages a list of Users. Our application wishes to display two lists of Users, which\n     * may be edited independently. In this case it may be desirable to create a Container for each list component, with\n     * the UserList Service scoped to those Containers – that way, each list component gets a unique copy of the\n     * UserList Service that can be edited independently of the other.\n     *\n     * @param scopedServices A list of Tokens identifying Services which will be scoped to the new Container – that is,\n     * if those Services had already been created by the source Container, they will be re-created by their Factory\n     * functions when provided by the new Container.\n     * @returns A new copy of this Container, sharing all of this Container's Services. Services corresponding to any\n     * Tokens passed to this method will be re-created by the new Container (i.e. they become \"scoped\" to the new\n     * Container).\n     */\n    copy<Tokens extends readonly (keyof Services)[]>(scopedServices?: Tokens): Container<Services> {\n        const factories: MaybeMemoizedFactories<Services> = { ...this.factories };\n\n        // We \"un-memoize\" scoped Service InjectableFunctions so they will create a new copy of their Service when\n        // provided by the new Container – we re-memoize them so the new Container will itself only create one Service\n        // instance.\n        (scopedServices || []).forEach((token: keyof Services) => {\n            factories[token] = this.factories[token].delegate;\n        });\n        return new Container(factories);\n    }\n\n    /**\n     * Gets a reference to this Container.\n     *\n     * @param token The CONTAINER token.\n     * @returns This Container.\n     */\n    get(token: ContainerToken): this;\n\n    /**\n     * Get a specific Service provided by this Container.\n     *\n     * @param token A unique string corresponding to a Service\n     * @returns A Service corresponding to the given Token.\n     */\n    get<Token extends keyof Services>(token: Token): Services[Token];\n\n    get(token: ContainerToken | keyof Services): this | Services[keyof Services] {\n        if (token === CONTAINER) return this;\n        const factory = this.factories[token];\n        if (!factory) {\n            throw new Error(\n                `[Container::get] Could not find Service for Token \"${String(token)}\". This should've caused a ` +\n                    \"compile-time error. If the Token is 'undefined', check all your calls to the Injectable \" +\n                    \"function. Make sure you define dependencies using string literals or string constants that are \" +\n                    \"definitely initialized before the call to Injectable.\"\n            );\n        }\n        return factory(this);\n    }\n\n    /**\n     * Run the services in this [PartialContainer]. \"Run\" simply means that [Container::get] will be called for each\n     * Service, which invokes that Service's factory function, creating the Service.\n     *\n     * This may be useful e.g. if services need to initialize themselves, since generally a Service factory is only\n     * invoked when the Service is needed.\n     *\n     * Note this method cannot be used to add services to a Container. – that is, calling this method does not provide\n     * the services in a new Container.\n     *\n     * @param container Optionally provide a [PartialContainer], which will be used as a filter – the only services\n     * from *this* container that will run are those with a token that is also present in this PartialContainer.\n     * @returns No mutation is done to the Container, it is returned as-is (convenient for chaining).\n     */\n    run<AdditionalServices, Dependencies, FulfilledDependencies extends Dependencies>(\n        // FullfilledDependencies is assignable to Dependencies -- by specifying Container<FulfilledDependencies> as the\n        // `this` type, we ensure this Container can provide all the Dependencies required by the PartialContainer.\n        this: Container<FulfilledDependencies>,\n        container: PartialContainer<AdditionalServices, Dependencies>\n    ): this;\n\n    /**\n     * Run the given Service. \"Run\" simply means that [Container::get] will be called for this Service, which invokes\n     * the Service's factory function, creating the Service.\n     *\n     * This may be useful e.g. if services need to initialize themselves, since generally a Service factory is only\n     * invoked when the Service is needed.\n     *\n     * Note this method cannot be used to add services to a Container. – that is, calling this method does not provide\n     * the services in a new Container.\n     *\n     * @param fn Optionally provide an [InjectableFunction], which will be used as a filter – the only services\n     * from *this* container that will run are those with a token that is also present in this PartialContainer.\n     * @returns No mutation is done to the Container, it is returned as-is (convenient for chaining).\n     */\n    run<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service>(\n        fn: InjectableFunction<Services, Tokens, Token, Service>\n    ): this;\n\n    run<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service, AdditionalServices>(\n        fnOrContainer:\n            | InjectableFunction<Services, Tokens, Token, Service>\n            | PartialContainer<AdditionalServices, Services>\n    ): this {\n        if (fnOrContainer instanceof PartialContainer) {\n            const runnableContainer = this.provides(fnOrContainer);\n            for (const token of fnOrContainer.getTokens()) {\n                runnableContainer.get(token);\n            }\n        } else {\n            this.provides(fnOrContainer).get(fnOrContainer.token);\n        }\n        return this;\n    }\n\n    /**\n     * Create a new Container from this Container with additional services from a given [PartialContainer].\n     *\n     * Services in the provided PartialContainer take precedence if there are service token conflicts.\n     *\n     * Services from the provided PartialContainer become scoped to the new Container – that is, if PartialContainer A\n     * is provided to Container X and Container Y, each resultant Container will contain its own copy of the services\n     * from PartialContainer A.\n     *\n     * @param container A [PartialContainer] providing additional services.\n     */\n    provides<AdditionalServices, Dependencies, FulfilledDependencies extends Dependencies>(\n        // FullfilledDependencies is assignable to Dependencies -- by specifying Container<FulfilledDependencies> as the\n        // `this` type, we ensure this Container can provide all the Dependencies required by the PartialContainer.\n        this: Container<FulfilledDependencies>,\n        container: PartialContainer<AdditionalServices, Dependencies>\n    ): Container<Services & AdditionalServices>;\n\n    /**\n     * Creates a new Container from this Container with additional services from another Container.\n     *\n     * Services in the provided PartialContainer take precedence if there are service token conflicts.\n     *\n     * Services from the provided Container become scoped to both Containers (the one from which they were provided\n     * and the new Container returned by this method) - that is, if Container A is provided to Container B,\n     * they will share the same instances of any Services provided by Container A.\n     * If Container B should re-create new instances of the Services from Container A,\n     * Container A must first be copied before providing it here.\n     *\n     * @param container A [Container] providing additional services.\n     */\n    provides<AdditionalServices>(container: Container<AdditionalServices>): Container<Services & AdditionalServices>;\n\n    /**\n     * Create a new Container which provides a Service created by the given [InjectableFunction].\n     *\n     * The InjectableFunction contains metadata specifying the Token by which the created Service will be known, as well\n     * as an ordered list of Tokens to be resolved and provided to the InjectableFunction as arguments.\n     *\n     * If any of these required dependencies are missing from the Container (or if there is a mismatch between the types\n     * of those dependencies and the arguments of the InjectableFunction), a compiler error will be raised.\n     *\n     * @param fn A factory function, taking dependencies as arguments, which returns the Service.\n     */\n    provides<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service>(\n        fn: InjectableFunction<Services, Tokens, Token, Service>\n    ): Container<AddService<Services, Token, Service>>;\n\n    provides<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service, AdditionalServices>(\n        fnOrContainer:\n            | InjectableFunction<Services, Tokens, Token, Service>\n            | PartialContainer<AdditionalServices, Services>\n            | Container<AdditionalServices>\n    ): Container<any> {\n        if (fnOrContainer instanceof PartialContainer || fnOrContainer instanceof Container) {\n            const factories =\n                fnOrContainer instanceof PartialContainer ? fnOrContainer.getFactories(this) : fnOrContainer.factories;\n            // Safety: `this.factories` and `factories` are both properly type checked, so merging them produces\n            // a Factories object with keys from both Services and AdditionalServices. The compiler is unable to\n            // infer that Factories<A> & Factories<B> == Factories<A & B>, so the cast is required.\n            return new Container({\n                ...this.factories,\n                ...factories,\n            } as unknown as MaybeMemoizedFactories<Services & AdditionalServices>);\n        }\n        return this.providesService(fnOrContainer);\n    }\n\n    private providesService<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service>(\n        fn: InjectableFunction<Services, Tokens, Token, Service>\n    ): Container<AddService<Services, Token, Service>> {\n        const token = fn.token;\n        const dependencies: readonly any[] = fn.dependencies;\n\n        const factory = memoize((container: Container<Services>) => {\n            return fn(\n                ...(dependencies.map((t) => {\n                    // To support overwriting an already-existing service with a new implementation, it should be\n                    // possibleto do `provide(A, [A], a => createNewServiceFromOld(a))` – that is, inject a dependency\n                    // with the same token as this service's token.\n                    //\n                    // To avoid a circular dependency (in which the factory for service A depends on itself), we always\n                    // use the service defined in the *parent* container (i.e. this) when injecting a dependency with\n                    // the same token as the service we're providing. If we did not do this, calling `container.get(t)`\n                    // would result in an infinite loop.\n                    return t === token ? this.get(t) : container.get(t);\n                }) as any)\n            );\n        });\n\n        // Safety: `token` and `factory` are property type checked, so extending `this.factories` produces a\n        // MaybeMemoizedFactories object with the expected set of services – but when using the spread operation to\n        // merge two objects, the compiler widens the Token type to string. So we must re-narrow via casting.\n        const factories = { ...this.factories, [token]: factory };\n        return new Container(factories as unknown as MaybeMemoizedFactories<AddService<Services, Token, Service>>);\n    }\n}\n","// `Object.entries` does preserve key types.\nexport const entries = (o) => Object.entries(o);\n// `Object.fromEntries` does not preserve key types.\nexport const fromEntries = (entries) => Object.fromEntries(entries);\n","import { filter } from 'rxjs';\nimport { fromEntries } from './types';\n/**\n * Define an Action by providing a name and (optionally) the type of data the Action carries. Returns a function which\n * creates actions of that type.\n *\n * @param name The action's name, should be unique among all actions used by a single state machine.\n * @returns The function returned is used to specify the type of data the Action carries – it must be called to return\n * the actual action creator, which is then strongly typed.\n */\nexport const defineAction = (name) => () => {\n    const actionCreator = (data) => ({\n        name,\n        data,\n    });\n    Object.defineProperty(actionCreator, 'name', { value: name });\n    // Safety: Object.defineProperty has added the `name` property, but the TS compiler doesn't know that.\n    return actionCreator;\n};\n/**\n * Create an object from action creators, where each property is the name of the action.\n *\n * @param actions Pass one or more actions as arguments, using [[defineAction]] to create each action.\n * @returns\n */\nexport const defineActions = (...actions) => {\n    const entries = actions.map((s) => [s.name, s]);\n    // Safety: TS isn't able to infer that keys are the action names, so we have to cast – but we're just extracting the\n    // name property and using it as the key (we're doing no other manipulation), so we know we'll end up with the\n    // correct ActionCreatorMap.\n    return fromEntries(entries);\n};\n/**\n * Filter an `Observable<[Action, State]>` to only emit when the action matches one of the action names given as\n * arguments.\n * ```ts\n * myStateMachine.pipe(\n *   forActions('myFirstAction', 'mySecondAction'),\n * ).subscribe(doSomethingOnEitherAction)\n * ```\n *\n * @param actions Pass one or more action names as arguments, used to filter an `Observable<[Action, State]>`\n * @returns\n */\nexport function forActions(...actions) {\n    return filter((v) => actions.some(action => v[0].name === action));\n}\n/**\n * Determine if a given action is of a specific type, given by an action name. This narrows the type of the action.\n *\n * @param action An action with a broad type (e.g. a union of many actions)\n * @param name The name of a specific action.\n * @returns Narrows the type of the action argument to that action which has the given name.\n */\nexport function isAction(action, name) {\n    return action.name === name;\n}\n","import { BehaviorSubject, map, mergeMap, NEVER, Observable, of, raceWith, startWith, Subject, take, tap, withLatestFrom } from 'rxjs';\n/**\n * A StateMachine takes a finite set of both Action and State types, represeting the allowed states of the machine and\n * the possible actions which may (or may not) cause a transition between states.\n *\n * The following algorithm is used to update state. For those who have used Redux, this will sound familiar:\n *\n * 1. The user of the state machine dispatches one of the allowed Actions.\n * 2. The [action, current state] pair is passed to each of the \"reducers\" configured for the state machine. These\n *    reducers must (synchronously) produce a new state, or do nothing.\n * 3. The state machine's internal state is updated to the new state (or remains in the old state if no reducer produced\n *    a new state).\n * 4. Notify all configured \"effects\" with the [action, new state] pair – effects are notified even if the state did not\n *    change. Effects may produce their own actions. This will feel familiar to users of redux-observable.\n *\n * We can visualize this with the following diagram:\n *\n * ```txt\n * dipatch Action\n *    |\n *    |\n * reducers run on [Action, Starting State] and return New State\n *    |\n *    |\n * the state machine's internal state is updated to New State\n *    |\n *    |\n * effects run on [Action, New State]\n * ```\n */\n/** @internal */\nexport class StateMachine {\n    actions;\n    states;\n    /**\n     * After an Action is dispatched, passed to the StateMachine's reducer to produce a new state (or stay in the same\n     * state), a pair of [Action, State] is emitted on this Observable.\n     *\n     * This can be used to observe every action dispatched to the StateMachine, along with the state that it produced.\n     *\n     * The most common use of the `events` Observable is to implement side-effects. It's very common for side-effects\n     * to dispatch actions back to the StateMachine.\n     *\n     * ```ts\n     * stateMachine.events.pipe(\n     *   inStates('idle'),\n     *   forActions('makeRequest'),\n     *   switchMap(([{data: request}]) => fromFetch(request)),\n     *   tap(response => stateMachine.dispatch('requestComplete', response)),\n     * ).subscribe()\n     * ```\n     */\n    events;\n    actionsSubject;\n    eventsSubject;\n    state;\n    /**\n     * Create a StateMachine with a defined set of Actions and States.\n     *\n     * The StateMachine begins in a given initial state with transitions to new states defined by a \"reducer\" function.\n     *\n     * Reducers are OperatorFunctions which map an Observable of `[Action, State]` pairs into an Observable of a new\n     * state. They can be constructed using RxJS's `pipe` function. For example:\n     *\n     * ```ts\n     * new StateMachine(actions, states, initialState, pipe(\n     *   inStates('someState'),\n     *   forActions('someAction'),\n     *   map(([a, s]) => computeNewState(a, s)),\n     * ))\n     * ```\n     *\n     * Often it will be useful to break the reducer into separate behaviors to handle different actions:\n     *\n     * ```ts\n     * new StateMachine(actions, states, initialState, state => {\n     *   return merge(\n     *     state.pipe(inStates('someState'), forAction('someAction'), map(computeNextState)),\n     *     state.pipe(inStates('otherState'), forAction('otherAction'), map(computeOtherNextState)),\n     *     // ...\n     *   )\n     * })\n     * ```\n     *\n     * Reducers must return an output Observable<State> which, when the input Observable<[Action, State]> emits, either:\n     *\n     * - synchronously emits a single new state.\n     * - emits nothing.\n     *\n     * To enforce this, reducer Observables race with a sync Observable containing the current state. If the reducer\n     * Observable does not emit a new state synchronously, the current state is used (i.e. the state does not change).\n     *\n     * @param initialState\n     * @param reducer\n     * @returns\n     */\n    constructor(actions, states, initialState, reducer) {\n        this.actions = actions;\n        this.states = states;\n        this.actionsSubject = new Subject();\n        this.eventsSubject = new Subject();\n        this.events = this.eventsSubject.asObservable();\n        this.state = new BehaviorSubject(initialState);\n        this.actionsSubject\n            .pipe(withLatestFrom(this.state), mergeMap(([a, s]) => \n        // `NEVER` + `startWith` is needed for `raceWith` to work properly. If we instead used the more\n        // typical `of([a, s])` we would encounter the following problem:\n        //\n        // `of` emits its value and completes synchronously (i.e. both in the same \"frame,\" if you think in\n        // marble diagrams). Assuming `reducer` does nothing to modify the completion behavior of its source\n        // Observable, the Observable returned by `reducer` will also complete immediately. If we were to\n        // pass that Observable to `raceWith` – whose output mirrors whichever input Observable is first to\n        // emit, error, *or complete* – it would always win, even if it never emitted anything (because it\n        // would already be complete).\n        //\n        // So instead we need an Observable that does not complete. We achieve this by using `NEVER` and\n        // then starting it with `[a, s]`. Note that it's important to then use `take(1)` after `raceWith`\n        // so that we don't leak Observables which never complete.\n        NEVER.pipe(startWith([a, s]), reducer, raceWith(of(s)), tap((newState) => {\n            if (newState !== s)\n                this.state.next(newState);\n        }), map((newState) => [a, newState]), take(1))))\n            .subscribe(this.eventsSubject);\n    }\n    dispatch(actionOrName, data) {\n        const action = typeof actionOrName === 'string' ? { name: actionOrName, data } : actionOrName;\n        this.actionsSubject.next(action);\n    }\n    /**\n     * Returns the current state.\n     */\n    getState() {\n        return this.state.getValue();\n    }\n}\n/**\n * Transform a source Observable of Actions into an Observable of [Action, State] pairs by:\n * 1. Dispatching the source Actions to the given StateMachine.\n * 3. Return an Observable of that StateMachine's events.\n *\n * This allows callers to dispatch to a StateMachine when the output Observable is subscribed, and then be notified when\n * the StateMachine has produced a new state (which could be the same as the old state).\n *\n * The output Observable will remain subscribed to the StateMachine's events, emitting all subsequent `[Action, State]`\n * pairs. For that reason, it's important to ensure the output Observable is properly unsubscribed to avoid leaks. This\n * is commonly done using the `take`, `takeUntil`, `firstValueFrom`, etc. operators.\n *\n * @param stateMachine The source Observable's Actions will be dispatched to this StateMachine\n * @returns Operator function which transforms an Observable<Action> into an Observable<[Action, State]> by subscribing\n * to the given StateMachine's events and then dispatching source actions to it when they arrive.\n */\nexport function dispatch(stateMachine) {\n    return (source) => new Observable(subscriber => {\n        const subscription = stateMachine.events.subscribe(subscriber);\n        subscription.add(source.subscribe({\n            next: (action) => stateMachine.dispatch(action),\n            error: (error) => subscriber.error(error),\n            // We purposely do not forward the `complete` notification. We want the subscriber to remain subscribed to\n            // the stateMachine.events observable even if the source Observable<Actions> completes.\n        }));\n        return subscription;\n    });\n}\n","import { filter } from 'rxjs';\nimport { defineAction, defineActions } from './actions';\n/**\n * Define a State by providing a name and (optionally) the type of data the State carries. Returns a function which\n * creates states of that type.\n *\n * @param name The state's name, should be unique among all states used by a single state machine.\n * @returns The function returned is used to specify the type of data the State carries – it must be called to return\n * the actual state creator, which is then strongly typed.\n */\nexport const defineState = (name) => () => defineAction(name)();\n/**\n * Create an object from state creators, where each property is the name of the state.\n *\n * @param states Pass one or more states as arguments, using [[defineState]] to create each state.\n * @returns\n */\nexport const defineStates = (...states) => defineActions(...states);\n/**\n * Filter an `Observable<[Action, State]>` to only emit when the state matches one of the state names given as\n * arguments.\n * ```ts\n * myStateMachine.pipe(\n *   inStates('myFirstState', 'mySecondState'),\n * ).subscribe(doSomethingIfInEitherState)\n * ```\n *\n * @param states Pass one or more state names as arguments, used to filter an `Observable<[Action, State]>`\n * @returns An Observable which only emits when in one of the given states.\n */\nexport function inStates(...states) {\n    return filter((v) => states.some(state => v[1].name === state));\n}\n/**\n * Determine if a given state is of a specific type, given by an state name. This narrows the type of the state.\n *\n * @param state A state with a broad type (e.g. a union of many states)\n * @param name The name of a specific state.\n * @returns Narrows the type of the state argument to that state which has the given name.\n */\nexport function isState(state, name) {\n    return state.name === name;\n}\n","export * from './actions';\nexport * from './state-machine';\nexport * from './states';\n","import { TupleOf } from \"../common/types\";\n\n/**\n * Use this class to supply the CameraKitSession::setSourceTransform with the proper data\n * needed to apply transformations\n *\n * @category Rendering\n */\nexport class Transform2D {\n    static readonly MirrorX = new Transform2D([-1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0]);\n    static readonly MirrorY = new Transform2D([1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 1.0]);\n    static readonly Identity = new Transform2D([1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]);\n\n    /**\n     * @param matrix A 3x3 matrix in column-major order, representing a 2D transform to be applied to the source media\n     */\n    constructor(readonly matrix: TupleOf<number, 9>) {}\n}\n","export * from \"./Transform2D\";\n","/* eslint-disable @typescript-eslint/member-ordering */\n\nimport { copyDefinedProperties } from \"../common/copyDefinedProperties\";\nimport { validate } from \"../common/validate\";\nimport { LensCore, UseMediaElementInput } from \"../lens-core-module\";\nimport { Transform2D } from \"../transforms\";\n\nconst defaultDeviceInfo: CameraKitDeviceOptions = {\n    cameraType: \"user\",\n    fpsLimit: Number.POSITIVE_INFINITY,\n};\n\nconst createNotAttachedError = (message: string) =>\n    new Error(`${message}. This CameraKitSource is not attached to a CameraKitSession.`);\n\n/**\n * When creating a {@link CameraKitSource}, passing a CameraKitSourceSubscriber allows logic to implemented which will\n * run whenever that source is attached/detached from a CameraKitSession.\n *\n * @category Rendering\n */\nexport interface CameraKitSourceSubscriber {\n    readonly onAttach?: (\n        source: CameraKitSource,\n        lensCore: LensCore,\n        reportError: (error: Error) => void\n    ) => void | Promise<void>;\n    readonly onDetach?: (reportError: (error: Error) => void) => void | Promise<void>;\n}\n\n/** @category Rendering\n * @deprecated use {@link CameraKitDeviceOptions}\n */\nexport type CameraKitDeviceInfo = {\n    /** @deprecated \"front\" and \"back\" are deprecated please use \"user\" or \"enviroment\" for cameraType instead */\n    cameraType: \"front\" | \"back\";\n    fpsLimit: number;\n};\n\n/** @category Rendering */\nexport type CameraKitDeviceOptions = {\n    cameraType: \"user\" | \"environment\";\n    fpsLimit: number;\n};\n\nexport type CameraKitSourceInfo = Pick<\n    UseMediaElementInput,\n    \"media\" | \"replayTrackingData\" | \"useManualFrameProcessing\"\n>;\n\n/** @category Rendering */\nexport type CameraKitSourceOptions<T = {}> = Partial<T> & Partial<CameraKitDeviceInfo | CameraKitDeviceOptions>;\n\n/**\n * This general-purpose class represents a source of media for a {@link CameraKitSession}.\n *\n * When an instance is passed to {@link CameraKitSession.setSource | CameraKitSession.setSource}, it will be \"attached\"\n * to the session. Later it may be \"detached\" from the session.\n *\n * Passing a {@link CameraKitSourceSubscriber} to the constructor allows callers to specify behavior\n * that will occur when the source is attached and detached. This can be used to e.g. update the render size.\n *\n * @category Rendering\n */\nexport class CameraKitSource {\n    private lensCore?: LensCore;\n    private readonly deviceInfo: CameraKitDeviceInfo | CameraKitDeviceOptions;\n\n    constructor(\n        private readonly sourceInfo: CameraKitSourceInfo,\n        private readonly subscriber: CameraKitSourceSubscriber = {},\n        deviceInfo: Partial<CameraKitDeviceInfo | CameraKitDeviceOptions> = {}\n    ) {\n        this.deviceInfo = { ...defaultDeviceInfo, ...copyDefinedProperties(deviceInfo) };\n    }\n\n    /**\n     * Called by {@link CameraKitSession} when this source is set as that session's source.\n     *\n     * @param lensCore\n     * @param reportError Calling this function will report an error back to the session.\n     * @returns Rejects if any calls to LensCore or CameraKitSource.subscriber.onAttach fail.\n     * @internal\n     */\n    async attach(lensCore: LensCore, reportError: (error: Error) => void): Promise<void> {\n        if (this.lensCore) {\n            throw new Error(\n                \"Cannot attach. This CameraKitCustomSource has already been attached to \" +\n                    \"a CameraKitSession. To re-attach, create a copy of this CameraKitCustomSource.\"\n            );\n        }\n\n        this.lensCore = lensCore;\n\n        await lensCore.useMediaElement({\n            autoplayNewMedia: false,\n            autoplayPreviewCanvas: false,\n            media: this.sourceInfo.media,\n            pauseExistingMedia: false,\n            replayTrackingData: this.sourceInfo.replayTrackingData,\n            requestWebcam: false,\n            startOnFrontCamera: [\"user\", \"front\"].includes(this.deviceInfo.cameraType),\n            useManualFrameProcessing: this.sourceInfo.useManualFrameProcessing,\n        });\n\n        // LensCore uses 0 to remove the limit.\n        const fps = this.deviceInfo.fpsLimit < Number.POSITIVE_INFINITY ? this.deviceInfo.fpsLimit : 0;\n        await lensCore.setFPSLimit({ fps });\n        await lensCore.setRenderSize({ mode: \"matchInputResolution\" });\n\n        if (this.subscriber.onAttach) await this.subscriber.onAttach(this, lensCore, reportError);\n    }\n\n    /**\n     * Make a copy of the source, sharing the same {@link CameraKitSourceSubscriber}.\n     *\n     * @param deviceInfo Optionally provide new device info for the copy (e.g. to change the camera type).\n     * @returns The new {@link CameraKitSource}\n     */\n    /** @deprecated Use {@link CameraKitDeviceOptions} where cameraType is either \"environment\" or \"user\" */\n    copy(deviceInfo?: Partial<CameraKitDeviceInfo>): CameraKitSource;\n    copy(deviceInfo?: Partial<CameraKitDeviceOptions>): CameraKitSource;\n    copy(deviceInfo: Partial<CameraKitDeviceOptions | CameraKitDeviceInfo> = {}): CameraKitSource {\n        return new CameraKitSource(this.sourceInfo, this.subscriber, { ...this.deviceInfo, ...deviceInfo });\n    }\n\n    /**\n     * Called by {@link CameraKitSession} when it must remove this source.\n     *\n     * @param reportError Calling this function will report an error back to the session.\n     * @returns\n     * @internal\n     */\n    detach(reportError: (error: Error) => void): void | Promise<void> {\n        if (!this.lensCore) return Promise.reject(createNotAttachedError(\"Cannot detach\"));\n        if (this.subscriber.onDetach) return this.subscriber.onDetach(reportError);\n    }\n\n    /**\n     * Set the resolution used to render this source.\n     *\n     * If greater performance is required, a smaller render size may boost frame-rate. It does come at a cost, including\n     * loss of accuracy in various tracking and computer-vision algorithms (since they'll be operating on fewer pixels).\n     *\n     * By default (i.e. if this method is never called), then the render size will match the size of the input media.\n     * Best performance can be achieved by varying the size of the input media and allowing CameraKit to render at a\n     * resolution that matches the input media -- this method should only be used if the input media resolution cannot\n     * be changed to the desired size.\n     *\n     * It’s important to distinguish render size from display size. The size at which the output canvases are displayed\n     * on a web page is determined by the CSS of the page. It is distinct from the size at which CameraKit renders\n     * Lenses. Performance is dominated by render size, while any display scaling (using CSS) can most often be thought\n     * of as free.\n     *\n     * The size of the Live and Capture {@link RenderTarget} is always the same.\n     *\n     * @todo Currently it's only valid to call `setRenderSize` after `CameraKitSession.play` has been called. This\n     * constraint should be removed, so callers don't have to understand the underlying LensCore state machine.\n     *\n     * @param width pixels\n     * @param height pixels\n     * @returns Promise resolves when the render size has been successfully updated.\n     */\n    @validate\n    setRenderSize(width: number, height: number): Promise<void> {\n        if (!this.lensCore) return Promise.reject(createNotAttachedError(\"Cannot setRenderSize\"));\n        const target = { width, height };\n        return this.lensCore.setRenderSize({ mode: \"explicit\", target });\n    }\n\n    /**\n     * Apply a 2D transformation to the source (e.g. translation, rotation, scale).\n     *\n     * @param transform Specifies the 3x3 matrix describing the transformation.\n     */\n    @validate\n    setTransform(transform: Transform2D): Promise<void> {\n        if (!this.lensCore) return Promise.reject(createNotAttachedError(\"Cannot setTransform\"));\n        const matrix = new Float32Array(transform.matrix);\n        return this.lensCore.setInputTransform({ matrix });\n    }\n}\n","import { ensureError } from \"../common/errorHelpers\";\nimport { Transform2D } from \"../transforms\";\nimport { CameraKitSource, CameraKitSourceOptions } from \"./CameraKitSource\";\n\nconst defaultOptions: MediaStreamSourceOptions = {\n    transform: Transform2D.Identity,\n    disableSourceAudio: false,\n};\n\nfunction closeWorklet(worklet: AudioWorkletNode | undefined) {\n    if (!worklet) return;\n    worklet.port.close();\n    worklet.port.onmessage = null;\n    worklet.disconnect();\n}\n\nasync function closeAudioContext(audioContext: AudioContext | undefined) {\n    if (!audioContext || audioContext.state === \"closed\") return;\n    return audioContext.close();\n}\n\n/** @category Rendering */\nexport interface MediaStreamSourceOptions {\n    transform: Transform2D;\n    disableSourceAudio: boolean; // defaults to false\n}\n\n/**\n * Create a {@link CameraKitSource} from a user's media device -- this calls\n * [MediaDevices.getUserMedia](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia) to get a\n * MediaStream and then calls {@link createMediaStreamSource}.\n *\n * @param constraints Specify contraints used to get a MediaStream from a media device. By default we simply request\n * a video stream.\n * @param options\n * @param options.transform By default we horizontally mirror the video stream. The most common use-case is to obtain a\n * stream from a front-facing web cam, which requires mirroring to be viewed naturally.\n * @param options.cameraType By default we set this to 'front' to indicate a camera pointed at the user (e.g. a webcam).\n * @param options.fpsLimit By default we set no limit on FPS – if the source device has a known FPS setting this limit\n * may prevent CameraKit from using more compute resources than strictly necessary.\n * @returns A Promise, resolving to {@link CameraKitSource}\n *\n * @category Rendering\n *\n * @deprecated The helper will be removed in one of the future releases.\n * Consumer apps are responsible for acquiring a media stream,\n * which can then be supplied to {@link createMediaStreamSource}.\n */\nexport async function createUserMediaSource(\n    constraints: MediaStreamConstraints = { video: true },\n    options: CameraKitSourceOptions<MediaStreamSourceOptions> = {}\n): Promise<CameraKitSource> {\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    return createMediaStreamSource(stream, { transform: Transform2D.MirrorX, cameraType: \"front\", ...options });\n}\n\n/**\n * Create a {@link CameraKitSource} from any\n * [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream).\n *\n * @param stream Any MediaStream, such as obtained via `canvas.captureStream()` or `mediaDevices.getUserMedia()`.\n * @param options\n * @param options.transform We apply no transformation by default.\n * @param options.disableSourceAudio By default we pass audio to lens. Settings this to true will disable sending audio\n * to the lens.\n * @param options.cameraType By default we set this to 'user', which is the camera type most Lenses expect.\n * @param options.fpsLimit By default we set no limit on FPS – if the MediaStream has a known FPS setting this limit\n * may prevent CameraKit from using more compute resources than strictly necessary.\n *\n * @category Rendering\n */\nexport function createMediaStreamSource(\n    stream: MediaStream,\n    options: CameraKitSourceOptions<MediaStreamSourceOptions> = {}\n): CameraKitSource {\n    const { facingMode } =\n        stream.getVideoTracks().length > 0 ? stream.getVideoTracks()[0].getSettings() : { facingMode: undefined };\n\n    const detectedCameraType = facingMode === \"user\" || facingMode === \"environment\" ? facingMode : undefined;\n\n    const optionsWithDefaults = {\n        ...defaultOptions,\n        ...options,\n        cameraType: options.cameraType ?? detectedCameraType,\n    };\n\n    const enableSourceAudio: boolean = stream.getAudioTracks().length > 0 && !optionsWithDefaults.disableSourceAudio;\n\n    const simulateStereoAudio = true;\n    const sampleRate: number = 44100;\n\n    let audioContext: AudioContext | undefined = undefined;\n    let audioSource: MediaStreamAudioSourceNode | undefined = undefined;\n    let worklet: AudioWorkletNode | undefined = undefined;\n    let microphoneRecorderUrl: string;\n\n    if (enableSourceAudio) {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Using_AudioWorklet\n        const microphoneRecorderWorklet = `\n        class MicrophoneWorkletProcessor extends AudioWorkletProcessor {\n            process(inputs, outputs, parameters) {\n                this.port.postMessage({\n                    eventType: 'data',\n                    buffer: inputs\n                });\n                return true;\n            }\n        }\n        registerProcessor('microphone-worklet', MicrophoneWorkletProcessor);`;\n        const microphoneRecorderBlob = new Blob([microphoneRecorderWorklet], {\n            type: \"application/javascript\",\n        });\n        microphoneRecorderUrl = URL.createObjectURL(microphoneRecorderBlob);\n    }\n\n    return new CameraKitSource(\n        { media: stream },\n        {\n            onAttach: async (source, lensCore, reportError) => {\n                await source.setTransform(optionsWithDefaults.transform);\n\n                if (enableSourceAudio) {\n                    // Audio paramters set has to be called before lens is applied\n                    await lensCore.setAudioParameters({\n                        parameters: {\n                            numChannels: simulateStereoAudio ? 2 : 1,\n                            sampleRate,\n                        },\n                    });\n\n                    try {\n                        // There is a possibility of the onAttach method being called twice in a row due to a bug.\n                        // To ensure there are not leaks, it is better to close any existing connections.\n                        closeWorklet(worklet);\n                        audioSource?.disconnect();\n                        await closeAudioContext(audioContext);\n                    } catch (error) {\n                        // We still want to continue if anything above failed\n                        reportError(ensureError(error));\n                    }\n\n                    audioContext = new AudioContext();\n                    audioSource = audioContext.createMediaStreamSource(stream);\n                    const scopedAudioSource = audioSource;\n                    audioContext.audioWorklet\n                        .addModule(microphoneRecorderUrl)\n                        .then(() => {\n                            if (audioContext) {\n                                worklet = new AudioWorkletNode(audioContext, \"microphone-worklet\");\n                                scopedAudioSource.connect(worklet);\n                                worklet.connect(audioContext.destination);\n                                // NOTE: We subscribe to messages here, and they will continue to arrive\n                                // even after audioContext.close() is called. To disconnect the audio worklets\n                                // created here, we need to track two variables - worklet and audioSource.\n                                // By calling disconnect() on them, we can properly\n                                // disconnect the audio worklets.\n                                worklet.port.onmessage = (e) => {\n                                    if (e.data.eventType === \"data\") {\n                                        // developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/process\n                                        // inputs[n][m] is the list of samples in the n-th input at the m-th channel.\n                                        const leftSamples = e.data.buffer[0][0] as Float32Array;\n\n                                        // Firefox might have leftSamples undefined:\n                                        // https://jira.sc-corp.net/browse/CAMKIT-5189\n                                        if (!leftSamples) return;\n\n                                        let inputBuffers = [leftSamples];\n                                        if (simulateStereoAudio) {\n                                            const rightSamples =\n                                                e.data.buffer[0].length > 1 ? e.data.buffer[0][1] : leftSamples.slice();\n                                            inputBuffers.push(rightSamples);\n                                        }\n\n                                        lensCore.processAudioSampleBuffer({ input: inputBuffers }).catch(reportError);\n                                    }\n                                };\n                            }\n                        })\n                        .catch((error: Error) => {\n                            reportError(error);\n                        });\n                }\n            },\n            onDetach: async (reportError) => {\n                if (worklet) {\n                    closeWorklet(worklet);\n                    worklet = undefined;\n                }\n                if (audioSource) {\n                    audioSource.disconnect();\n                    audioSource = undefined;\n                }\n                if (audioContext) {\n                    await closeAudioContext(audioContext).catch(reportError);\n                    audioContext = undefined;\n                }\n            },\n        },\n        optionsWithDefaults\n    );\n}\n","import { CameraKitSource, CameraKitSourceOptions } from \"./CameraKitSource\";\n\nconst defaultOptions: VideoSourceOptions = {\n    trackingData: new ArrayBuffer(0),\n};\n\n/** @category Rendering */\nexport interface VideoSourceOptions {\n    trackingData: ArrayBuffer;\n}\n\n/**\n * Create a {@link CameraKitSource} from an\n * [HTMLVideoElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement).\n *\n * @param video CameraKit performs best when the source video is 720p – arbitrary resolutions are supported, but very\n * high resolutions may not perform well.\n * @param options\n * @param options.trackingData If pre-computed tracking data exists for this video, it may be provided in order to boost\n * rendering performance (it is not typical or expected for this to be provided).\n * @param options.cameraType By default we set this to 'user', which is the camera type most Lenses expect.\n * @param options.fpsLimit By default we set no limit on FPS – if the video has a known FPS setting this limit\n * may prevent CameraKit from using more compute resources than strictly necessary.\n *\n * @category Rendering\n */\nexport function createVideoSource(\n    video: HTMLVideoElement,\n    options: CameraKitSourceOptions<VideoSourceOptions> = {}\n): CameraKitSource {\n    const { trackingData } = { ...defaultOptions, ...options };\n    const replayTrackingData = trackingData.byteLength > 0 ? { buffer: trackingData } : undefined;\n\n    return new CameraKitSource(\n        {\n            media: video,\n            replayTrackingData,\n        },\n        {},\n        options\n    );\n}\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { resetLogger } from \"./logger\";\n\n/**\n * The factory creates new logEntries subject.\n *\n * NOTE: The factory calls `resetLogger()`, which overrides the global `logEntrySubject`.\n * This is currently necessary to avoid sharing the same subject between multiple `CameraKit` instances.\n * In the future, we may throw an error when bootstrapping more than a single `CameraKit`,\n * that will allow us to have a single log entry subject.\n *\n * @internal\n */\nexport const logEntriesFactory = Injectable(\"logEntries\", () => resetLogger().asObservable());\n","interface FrameMetricsState {\n    avgFps: number;\n    averageProcessingTime: number;\n    n: number;\n    processingTimeBuckets: Uint32Array;\n    procFrameCount: number;\n    procFrameMean: number;\n    procFrameD2: number;\n}\n\nconst getDefaultFrameMetricsState = (): FrameMetricsState => ({\n    avgFps: 0,\n    averageProcessingTime: 0,\n    n: 0,\n    processingTimeBuckets: new Uint32Array(frameProcessingTimeMedianMax + 1),\n    procFrameCount: 0,\n    procFrameMean: 0,\n    procFrameD2: 0,\n});\n\n// This duration is chosen to be larger than we expect frame processing to reasonably take on any device, but smaller\n// than the duration of a manual rendering pause (e.g. a user clicking a pause button followed by a play button).\n//\n// This also defines the min avgFps that will be reported – if we see avgFps at `1 / frameDurationThresholdSec`\n// consistently, it's safe to assume actual fps is probably even lower.\nconst frameDurationThreshold: number = 1;\n\n// When computing the median frame processing time, in order to save space, we'll record a maximum frame processing\n// time median of 200ms -- that's already unnusably slow, and we don't really care if the true median is greater than\n// 200ms.\nconst frameProcessingTimeMedianMax = 200;\n\n/**\n * @category Rendering\n * @category Metrics\n */\nexport interface ComputedFrameMetrics {\n    avgFps: number;\n    lensFrameProcessingTimeMsAvg: number;\n    lensFrameProcessingTimeMsStd: number;\n    lensFrameProcessingTimeMsMedian: number;\n    lensFrameProcessingN: number;\n}\n\n/**\n * Represents an ongoing measurement of rendering metrics.\n *\n * An instance of this class is obtained by calling {@link LensPerformanceMetrics.beginMeasurement}. Then it may be\n * used to record rendering performance metrics, reset measurement, or end the measurement.\n *\n * @category Rendering\n * @category Metrics\n */\nexport class LensPerformanceMeasurement {\n    private state: FrameMetricsState = { ...getDefaultFrameMetricsState() };\n    private priorFrameCompletedTime?: number;\n\n    constructor(private instances: Set<LensPerformanceMeasurement>) {\n        this.instances.add(this);\n    }\n\n    /** @internal */\n    update(processingTimeMs: number): void {\n        this.computeRunningStats(processingTimeMs);\n    }\n\n    /**\n     * Return a {@link ComputedFrameMetrics} object, containing lens performance metrics.\n     *\n     * This method may be called multiple times, each time reporting values computed since the time when this instance\n     * was created.\n     */\n    measure(): ComputedFrameMetrics {\n        // We count the number of frames in each per-millisecond bucket, stopping when we've counted half the frames --\n        // that bucket contains the median.\n        let median = 0;\n        let count = 0;\n        for (; median < this.state.processingTimeBuckets.length; median++) {\n            count += this.state.processingTimeBuckets[median];\n            if (count >= (this.state.n + 1) / 2) break;\n        }\n        return {\n            avgFps: this.state.avgFps,\n            lensFrameProcessingTimeMsAvg: this.state.procFrameMean,\n            lensFrameProcessingTimeMsStd: Math.sqrt(this.state.procFrameD2 / this.state.procFrameCount),\n            lensFrameProcessingTimeMsMedian: this.state.n > 0 ? median : 0,\n            lensFrameProcessingN: this.state.n,\n        };\n    }\n\n    /**\n     * Reset the measured perforamance statistics (averages, std deviations). This is equivalent to using\n     * {@link LensPerformanceMetrics.beginMeasurement} to create a new LensPerformanceMeasurement instance, but may be\n     * more convenient.\n     */\n    reset(): void {\n        this.state = { ...getDefaultFrameMetricsState() };\n    }\n\n    /**\n     * Stop measuring performance statistics.\n     *\n     * This instance will not be garbage collected until this method is called. Therefore it is important to call this\n     * method at the appropriate time to avoid leaking memory -- particularly if your application creates many\n     * LensPerformanceMeasurement instances.\n     */\n    end(): void {\n        this.instances.delete(this);\n    }\n    /**\n     * In order to calculate the mean, variance, and standard deviation for the processing times\n     *  we are using Welford's online algorithm.\n     * https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Welford's_online_algorithm\n     *\n     * @param processingTimeMs Processing time that is returned from registered callback\n     */\n    private computeRunningStats(processingTimeMs: number) {\n        // calculate mean and delta squared for variance and standard deviation\n        const delta = processingTimeMs - this.state.procFrameMean;\n        this.state.procFrameCount += 1;\n        this.state.procFrameMean += delta / this.state.procFrameCount;\n\n        const delta2 = processingTimeMs - this.state.procFrameMean;\n        this.state.procFrameD2 += delta * delta2;\n\n        // Determine average fps\n        if (this.priorFrameCompletedTime === undefined) {\n            this.priorFrameCompletedTime = performance.now();\n        } else {\n            const frameDurationSec = (performance.now() - this.priorFrameCompletedTime) / 1000;\n            if (frameDurationSec < frameDurationThreshold) {\n                this.state.avgFps = (this.state.avgFps + 1 / frameDurationSec) / 2;\n            }\n            this.priorFrameCompletedTime = performance.now();\n        }\n\n        // To approximate the median, we put each processing time into a per-millisecond bucket, and then when we\n        // compute a measurement, we can count how many frames fell into each bucket. We don't care about latencies\n        // above 200ms, since that's already unusably slow (if we regress from 280ms to 320ms, we don't really care\n        // since both are unnusable).\n        this.state.n++;\n        this.state.processingTimeBuckets[Math.min(Math.round(processingTimeMs), frameProcessingTimeMedianMax)]++;\n    }\n}\n","import { errorLoggingDecorator } from \"../logger/errorLoggingDecorator\";\nimport { LensCore } from \"../lens-core-module\";\nimport { getLogger } from \"../logger/logger\";\nimport { LensPerformanceMeasurement } from \"./LensPerformanceMeasurement\";\n\nconst logger = getLogger(\"RenderingMetrics\");\nconst log = errorLoggingDecorator(logger);\n\n/**\n * Use to measure lens rendering performance.\n *\n * The {@link LensPerformanceMetrics.beginMeasurement} method is used to start measuring rendering performance. After\n * a measurement has begun, performance metrics can be read using {@link LensPerformanceMeasurement}.\n *\n * @example\n * ```ts\n * const measurement = cameraKitSession.metrics.beginMeasurement()\n * // some time later\n * console.log(measurement.measure())\n * ```\n *\n * @category Rendering\n * @category Metrics\n */\nexport class LensPerformanceMetrics {\n    private readonly measurementInstances: Set<LensPerformanceMeasurement>;\n\n    /** @internal */\n    constructor(private lensCore: LensCore) {\n        this.measurementInstances = new Set();\n        this.lensCore\n            .setOnFrameProcessedCallback({\n                onFrameProcessed: ({ processingTimeMs }) => {\n                    try {\n                        for (const measurement of this.measurementInstances.values()) {\n                            measurement.update(processingTimeMs);\n                        }\n                    } catch (error) {\n                        logger.error(error);\n                    }\n                },\n            })\n            .catch((error) =>\n                logger.error(`Failed registering setOnFrameProcessedCallback with error: ${error.message}`)\n            );\n    }\n\n    /**\n     * Begin a measurement window, during which time rendering metrics will be gathered.\n     *\n     * @returns A {@link LensPerformanceMeasurement} representing an ongoing measurement of aggregated rendering\n     * metrics, from which specific metrics can be obtained.\n     */\n    @log\n    beginMeasurement(): LensPerformanceMeasurement {\n        return new LensPerformanceMeasurement(this.measurementInstances);\n    }\n}\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { persistentStoreError } from \"../namedErrors\";\nimport { lensCoreFactory, LensCore } from \"../lens-core-module\";\nimport { getLogger } from \"../logger/logger\";\nimport { IndexedDBPersistence } from \"../persistence/IndexedDBPersistence\";\n\nconst logger = getLogger(\"LensPersistenceStore\");\n\nexport const lensPersistenceStoreFactory = Injectable(\n    \"lensPersistenceStore\",\n    [lensCoreFactory.token] as const,\n    (lensCore: LensCore): IndexedDBPersistence<ArrayBuffer> => {\n        const db = new IndexedDBPersistence<ArrayBuffer>({ databaseName: \"lensPersistenceStore\" });\n        lensCore.registerSavePersistentStoreCallback(async (id, data) => {\n            try {\n                await db.store(id, data);\n            } catch (error) {\n                logger.error(persistentStoreError(`Error occurred while storing data for lens ${id}.`, error));\n            }\n        });\n        return db;\n    }\n);\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.lenses.snappable\";\nexport interface EncryptionData {\n    key: Uint8Array;\n    ivStore: {\n        [key: string]: Uint8Array;\n    };\n    isKeyServerEncrypted: boolean;\n    isKeyE2eEncrypted: boolean;\n    encryptionScheme: EncryptionData_EncryptionScheme;\n}\nexport enum EncryptionData_EncryptionScheme {\n    NOT_APPLICABLE = \"NOT_APPLICABLE\",\n    SPOOKEY = \"SPOOKEY\",\n    REGISTRY = \"REGISTRY\",\n    FIDELIUS = \"FIDELIUS\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function encryptionData_EncryptionSchemeFromJSON(object: any): EncryptionData_EncryptionScheme {\n    switch (object) {\n        case 0:\n        case \"NOT_APPLICABLE\":\n            return EncryptionData_EncryptionScheme.NOT_APPLICABLE;\n        case 1:\n        case \"SPOOKEY\":\n            return EncryptionData_EncryptionScheme.SPOOKEY;\n        case 2:\n        case \"REGISTRY\":\n            return EncryptionData_EncryptionScheme.REGISTRY;\n        case 3:\n        case \"FIDELIUS\":\n            return EncryptionData_EncryptionScheme.FIDELIUS;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EncryptionData_EncryptionScheme.UNRECOGNIZED;\n    }\n}\nexport function encryptionData_EncryptionSchemeToNumber(object: EncryptionData_EncryptionScheme): number {\n    switch (object) {\n        case EncryptionData_EncryptionScheme.NOT_APPLICABLE:\n            return 0;\n        case EncryptionData_EncryptionScheme.SPOOKEY:\n            return 1;\n        case EncryptionData_EncryptionScheme.REGISTRY:\n            return 2;\n        case EncryptionData_EncryptionScheme.FIDELIUS:\n            return 3;\n        default:\n            return 0;\n    }\n}\nexport interface EncryptionData_IvStoreEntry {\n    key: string;\n    value: Uint8Array;\n}\nexport interface PlayerData {\n    store: {\n        [key: string]: string;\n    };\n    serializedStore: Uint8Array;\n}\nexport interface PlayerData_StoreEntry {\n    key: string;\n    value: string;\n}\nexport interface SessionData {\n    playerData: {\n        [key: string]: PlayerData;\n    };\n}\nexport interface SessionData_PlayerDataEntry {\n    key: string;\n    value: PlayerData | undefined;\n}\nexport interface SnappableMedia {\n    sessionId: string;\n    playerId: string;\n    url: string;\n    key: string;\n    createdTime: number;\n}\nexport interface Snap3DData {\n    allowZippedMedia: boolean;\n}\nexport interface UsesCameraRoll {\n    usesCameraRoll: boolean;\n}\nexport interface SnappableMessage {\n    snappable: Snappable | undefined;\n    media: SnappableMedia[];\n    effectId: string;\n    userIds: string[];\n    focusPointX: number;\n    focusPointY: number;\n    focusPointWidth: number;\n    replyType: SnappableMessage_ReplyType;\n    snap3dData: Snap3DData | undefined;\n    usesCameraRollData: UsesCameraRoll | undefined;\n    assetBatchId: string;\n}\nexport enum SnappableMessage_ReplyType {\n    NOT_APPLICABLE = \"NOT_APPLICABLE\",\n    CONTEXT = \"CONTEXT\",\n    INTERSTITIAL = \"INTERSTITIAL\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function snappableMessage_ReplyTypeFromJSON(object: any): SnappableMessage_ReplyType {\n    switch (object) {\n        case 0:\n        case \"NOT_APPLICABLE\":\n            return SnappableMessage_ReplyType.NOT_APPLICABLE;\n        case 1:\n        case \"CONTEXT\":\n            return SnappableMessage_ReplyType.CONTEXT;\n        case 2:\n        case \"INTERSTITIAL\":\n            return SnappableMessage_ReplyType.INTERSTITIAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SnappableMessage_ReplyType.UNRECOGNIZED;\n    }\n}\nexport function snappableMessage_ReplyTypeToNumber(object: SnappableMessage_ReplyType): number {\n    switch (object) {\n        case SnappableMessage_ReplyType.NOT_APPLICABLE:\n            return 0;\n        case SnappableMessage_ReplyType.CONTEXT:\n            return 1;\n        case SnappableMessage_ReplyType.INTERSTITIAL:\n            return 2;\n        default:\n            return 0;\n    }\n}\nexport interface Snappable {\n    id: string;\n    sessionId: string;\n    playerId: string;\n    sessionData: SessionData | undefined;\n    createdTime: number;\n    expireTime: number;\n    version: number;\n    encryptionData: EncryptionData | undefined;\n    sessionDepth: number;\n}\nexport interface PutSnappableRequest {\n    snappable: Snappable | undefined;\n    media: SnappableMedia[];\n}\nexport interface PutSnappableResponse {\n    id: string;\n}\nexport interface GetSnappableRequest {\n    id: string;\n}\nexport interface GetSnappableResponse {\n    data: Snappable | undefined;\n    media: SnappableMedia[];\n}\nexport interface SnappableEncryptedKey {\n    encryptedKey: Uint8Array;\n    encryptionKeyId: string;\n    encryptionKeyIv: Uint8Array;\n}\nfunction createBaseEncryptionData(): EncryptionData {\n    return {\n        key: new Uint8Array(),\n        ivStore: {},\n        isKeyServerEncrypted: false,\n        isKeyE2eEncrypted: false,\n        encryptionScheme: EncryptionData_EncryptionScheme.NOT_APPLICABLE,\n    };\n}\nexport const EncryptionData = {\n    encode(message: EncryptionData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        Object.entries(message.ivStore).forEach(([key, value]) => {\n            EncryptionData_IvStoreEntry.encode({ key: key as any, value }, writer.uint32(18).fork()).ldelim();\n        });\n        if (message.isKeyServerEncrypted === true) {\n            writer.uint32(24).bool(message.isKeyServerEncrypted);\n        }\n        if (message.isKeyE2eEncrypted === true) {\n            writer.uint32(32).bool(message.isKeyE2eEncrypted);\n        }\n        if (message.encryptionScheme !== EncryptionData_EncryptionScheme.NOT_APPLICABLE) {\n            writer.uint32(40).int32(encryptionData_EncryptionSchemeToNumber(message.encryptionScheme));\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): EncryptionData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEncryptionData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    const entry2 = EncryptionData_IvStoreEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.ivStore[entry2.key] = entry2.value;\n                    }\n                    break;\n                case 3:\n                    message.isKeyServerEncrypted = reader.bool();\n                    break;\n                case 4:\n                    message.isKeyE2eEncrypted = reader.bool();\n                    break;\n                case 5:\n                    message.encryptionScheme = encryptionData_EncryptionSchemeFromJSON(reader.int32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<EncryptionData>, I>>(object: I): EncryptionData {\n        const message = createBaseEncryptionData();\n        message.key = object.key ?? new Uint8Array();\n        message.ivStore = Object.entries(object.ivStore ?? {}).reduce<{\n            [key: string]: Uint8Array;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = value;\n            }\n            return acc;\n        }, {});\n        message.isKeyServerEncrypted = object.isKeyServerEncrypted ?? false;\n        message.isKeyE2eEncrypted = object.isKeyE2eEncrypted ?? false;\n        message.encryptionScheme = object.encryptionScheme ?? EncryptionData_EncryptionScheme.NOT_APPLICABLE;\n        return message;\n    },\n};\nfunction createBaseEncryptionData_IvStoreEntry(): EncryptionData_IvStoreEntry {\n    return { key: \"\", value: new Uint8Array() };\n}\nexport const EncryptionData_IvStoreEntry = {\n    encode(message: EncryptionData_IvStoreEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): EncryptionData_IvStoreEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEncryptionData_IvStoreEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<EncryptionData_IvStoreEntry>, I>>(object: I): EncryptionData_IvStoreEntry {\n        const message = createBaseEncryptionData_IvStoreEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBasePlayerData(): PlayerData {\n    return { store: {}, serializedStore: new Uint8Array() };\n}\nexport const PlayerData = {\n    encode(message: PlayerData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        Object.entries(message.store).forEach(([key, value]) => {\n            PlayerData_StoreEntry.encode({ key: key as any, value }, writer.uint32(10).fork()).ldelim();\n        });\n        if (message.serializedStore.length !== 0) {\n            writer.uint32(18).bytes(message.serializedStore);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PlayerData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePlayerData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = PlayerData_StoreEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.store[entry1.key] = entry1.value;\n                    }\n                    break;\n                case 2:\n                    message.serializedStore = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PlayerData>, I>>(object: I): PlayerData {\n        const message = createBasePlayerData();\n        message.store = Object.entries(object.store ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.serializedStore = object.serializedStore ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBasePlayerData_StoreEntry(): PlayerData_StoreEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PlayerData_StoreEntry = {\n    encode(message: PlayerData_StoreEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PlayerData_StoreEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePlayerData_StoreEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PlayerData_StoreEntry>, I>>(object: I): PlayerData_StoreEntry {\n        const message = createBasePlayerData_StoreEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseSessionData(): SessionData {\n    return { playerData: {} };\n}\nexport const SessionData = {\n    encode(message: SessionData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        Object.entries(message.playerData).forEach(([key, value]) => {\n            SessionData_PlayerDataEntry.encode({ key: key as any, value }, writer.uint32(10).fork()).ldelim();\n        });\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SessionData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSessionData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = SessionData_PlayerDataEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.playerData[entry1.key] = entry1.value;\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<SessionData>, I>>(object: I): SessionData {\n        const message = createBaseSessionData();\n        message.playerData = Object.entries(object.playerData ?? {}).reduce<{\n            [key: string]: PlayerData;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = PlayerData.fromPartial(value);\n            }\n            return acc;\n        }, {});\n        return message;\n    },\n};\nfunction createBaseSessionData_PlayerDataEntry(): SessionData_PlayerDataEntry {\n    return { key: \"\", value: undefined };\n}\nexport const SessionData_PlayerDataEntry = {\n    encode(message: SessionData_PlayerDataEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== undefined) {\n            PlayerData.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SessionData_PlayerDataEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSessionData_PlayerDataEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = PlayerData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<SessionData_PlayerDataEntry>, I>>(object: I): SessionData_PlayerDataEntry {\n        const message = createBaseSessionData_PlayerDataEntry();\n        message.key = object.key ?? \"\";\n        message.value =\n            object.value !== undefined && object.value !== null ? PlayerData.fromPartial(object.value) : undefined;\n        return message;\n    },\n};\nfunction createBaseSnappableMedia(): SnappableMedia {\n    return { sessionId: \"\", playerId: \"\", url: \"\", key: \"\", createdTime: 0 };\n}\nexport const SnappableMedia = {\n    encode(message: SnappableMedia, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.sessionId !== \"\") {\n            writer.uint32(10).string(message.sessionId);\n        }\n        if (message.playerId !== \"\") {\n            writer.uint32(18).string(message.playerId);\n        }\n        if (message.url !== \"\") {\n            writer.uint32(26).string(message.url);\n        }\n        if (message.key !== \"\") {\n            writer.uint32(34).string(message.key);\n        }\n        if (message.createdTime !== 0) {\n            writer.uint32(40).int64(message.createdTime);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SnappableMedia {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnappableMedia();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sessionId = reader.string();\n                    break;\n                case 2:\n                    message.playerId = reader.string();\n                    break;\n                case 3:\n                    message.url = reader.string();\n                    break;\n                case 4:\n                    message.key = reader.string();\n                    break;\n                case 5:\n                    message.createdTime = longToNumber(reader.int64() as Long);\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<SnappableMedia>, I>>(object: I): SnappableMedia {\n        const message = createBaseSnappableMedia();\n        message.sessionId = object.sessionId ?? \"\";\n        message.playerId = object.playerId ?? \"\";\n        message.url = object.url ?? \"\";\n        message.key = object.key ?? \"\";\n        message.createdTime = object.createdTime ?? 0;\n        return message;\n    },\n};\nfunction createBaseSnap3DData(): Snap3DData {\n    return { allowZippedMedia: false };\n}\nexport const Snap3DData = {\n    encode(message: Snap3DData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.allowZippedMedia === true) {\n            writer.uint32(8).bool(message.allowZippedMedia);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Snap3DData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnap3DData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowZippedMedia = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Snap3DData>, I>>(object: I): Snap3DData {\n        const message = createBaseSnap3DData();\n        message.allowZippedMedia = object.allowZippedMedia ?? false;\n        return message;\n    },\n};\nfunction createBaseUsesCameraRoll(): UsesCameraRoll {\n    return { usesCameraRoll: false };\n}\nexport const UsesCameraRoll = {\n    encode(message: UsesCameraRoll, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.usesCameraRoll === true) {\n            writer.uint32(8).bool(message.usesCameraRoll);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UsesCameraRoll {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUsesCameraRoll();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.usesCameraRoll = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UsesCameraRoll>, I>>(object: I): UsesCameraRoll {\n        const message = createBaseUsesCameraRoll();\n        message.usesCameraRoll = object.usesCameraRoll ?? false;\n        return message;\n    },\n};\nfunction createBaseSnappableMessage(): SnappableMessage {\n    return {\n        snappable: undefined,\n        media: [],\n        effectId: \"\",\n        userIds: [],\n        focusPointX: 0,\n        focusPointY: 0,\n        focusPointWidth: 0,\n        replyType: SnappableMessage_ReplyType.NOT_APPLICABLE,\n        snap3dData: undefined,\n        usesCameraRollData: undefined,\n        assetBatchId: \"\",\n    };\n}\nexport const SnappableMessage = {\n    encode(message: SnappableMessage, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.snappable !== undefined) {\n            Snappable.encode(message.snappable, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.media) {\n            SnappableMedia.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.effectId !== \"\") {\n            writer.uint32(26).string(message.effectId);\n        }\n        for (const v of message.userIds) {\n            writer.uint32(34).string(v!);\n        }\n        if (message.focusPointX !== 0) {\n            writer.uint32(45).float(message.focusPointX);\n        }\n        if (message.focusPointY !== 0) {\n            writer.uint32(53).float(message.focusPointY);\n        }\n        if (message.focusPointWidth !== 0) {\n            writer.uint32(61).float(message.focusPointWidth);\n        }\n        if (message.replyType !== SnappableMessage_ReplyType.NOT_APPLICABLE) {\n            writer.uint32(64).int32(snappableMessage_ReplyTypeToNumber(message.replyType));\n        }\n        if (message.snap3dData !== undefined) {\n            Snap3DData.encode(message.snap3dData, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.usesCameraRollData !== undefined) {\n            UsesCameraRoll.encode(message.usesCameraRollData, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.assetBatchId !== \"\") {\n            writer.uint32(4002).string(message.assetBatchId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SnappableMessage {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnappableMessage();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snappable = Snappable.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.media.push(SnappableMedia.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.effectId = reader.string();\n                    break;\n                case 4:\n                    message.userIds.push(reader.string());\n                    break;\n                case 5:\n                    message.focusPointX = reader.float();\n                    break;\n                case 6:\n                    message.focusPointY = reader.float();\n                    break;\n                case 7:\n                    message.focusPointWidth = reader.float();\n                    break;\n                case 8:\n                    message.replyType = snappableMessage_ReplyTypeFromJSON(reader.int32());\n                    break;\n                case 9:\n                    message.snap3dData = Snap3DData.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.usesCameraRollData = UsesCameraRoll.decode(reader, reader.uint32());\n                    break;\n                case 500:\n                    message.assetBatchId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<SnappableMessage>, I>>(object: I): SnappableMessage {\n        const message = createBaseSnappableMessage();\n        message.snappable =\n            object.snappable !== undefined && object.snappable !== null ? Snappable.fromPartial(object.snappable) : undefined;\n        message.media = object.media?.map((e) => SnappableMedia.fromPartial(e)) || [];\n        message.effectId = object.effectId ?? \"\";\n        message.userIds = object.userIds?.map((e) => e) || [];\n        message.focusPointX = object.focusPointX ?? 0;\n        message.focusPointY = object.focusPointY ?? 0;\n        message.focusPointWidth = object.focusPointWidth ?? 0;\n        message.replyType = object.replyType ?? SnappableMessage_ReplyType.NOT_APPLICABLE;\n        message.snap3dData =\n            object.snap3dData !== undefined && object.snap3dData !== null\n                ? Snap3DData.fromPartial(object.snap3dData)\n                : undefined;\n        message.usesCameraRollData =\n            object.usesCameraRollData !== undefined && object.usesCameraRollData !== null\n                ? UsesCameraRoll.fromPartial(object.usesCameraRollData)\n                : undefined;\n        message.assetBatchId = object.assetBatchId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseSnappable(): Snappable {\n    return {\n        id: \"\",\n        sessionId: \"\",\n        playerId: \"\",\n        sessionData: undefined,\n        createdTime: 0,\n        expireTime: 0,\n        version: 0,\n        encryptionData: undefined,\n        sessionDepth: 0,\n    };\n}\nexport const Snappable = {\n    encode(message: Snappable, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sessionId !== \"\") {\n            writer.uint32(18).string(message.sessionId);\n        }\n        if (message.playerId !== \"\") {\n            writer.uint32(26).string(message.playerId);\n        }\n        if (message.sessionData !== undefined) {\n            SessionData.encode(message.sessionData, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createdTime !== 0) {\n            writer.uint32(40).int64(message.createdTime);\n        }\n        if (message.expireTime !== 0) {\n            writer.uint32(48).int64(message.expireTime);\n        }\n        if (message.version !== 0) {\n            writer.uint32(56).int32(message.version);\n        }\n        if (message.encryptionData !== undefined) {\n            EncryptionData.encode(message.encryptionData, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.sessionDepth !== 0) {\n            writer.uint32(72).int32(message.sessionDepth);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Snappable {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnappable();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sessionId = reader.string();\n                    break;\n                case 3:\n                    message.playerId = reader.string();\n                    break;\n                case 4:\n                    message.sessionData = SessionData.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createdTime = longToNumber(reader.int64() as Long);\n                    break;\n                case 6:\n                    message.expireTime = longToNumber(reader.int64() as Long);\n                    break;\n                case 7:\n                    message.version = reader.int32();\n                    break;\n                case 8:\n                    message.encryptionData = EncryptionData.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.sessionDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Snappable>, I>>(object: I): Snappable {\n        const message = createBaseSnappable();\n        message.id = object.id ?? \"\";\n        message.sessionId = object.sessionId ?? \"\";\n        message.playerId = object.playerId ?? \"\";\n        message.sessionData =\n            object.sessionData !== undefined && object.sessionData !== null\n                ? SessionData.fromPartial(object.sessionData)\n                : undefined;\n        message.createdTime = object.createdTime ?? 0;\n        message.expireTime = object.expireTime ?? 0;\n        message.version = object.version ?? 0;\n        message.encryptionData =\n            object.encryptionData !== undefined && object.encryptionData !== null\n                ? EncryptionData.fromPartial(object.encryptionData)\n                : undefined;\n        message.sessionDepth = object.sessionDepth ?? 0;\n        return message;\n    },\n};\nfunction createBasePutSnappableRequest(): PutSnappableRequest {\n    return { snappable: undefined, media: [] };\n}\nexport const PutSnappableRequest = {\n    encode(message: PutSnappableRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.snappable !== undefined) {\n            Snappable.encode(message.snappable, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.media) {\n            SnappableMedia.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PutSnappableRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePutSnappableRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snappable = Snappable.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.media.push(SnappableMedia.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PutSnappableRequest>, I>>(object: I): PutSnappableRequest {\n        const message = createBasePutSnappableRequest();\n        message.snappable =\n            object.snappable !== undefined && object.snappable !== null ? Snappable.fromPartial(object.snappable) : undefined;\n        message.media = object.media?.map((e) => SnappableMedia.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBasePutSnappableResponse(): PutSnappableResponse {\n    return { id: \"\" };\n}\nexport const PutSnappableResponse = {\n    encode(message: PutSnappableResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PutSnappableResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePutSnappableResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PutSnappableResponse>, I>>(object: I): PutSnappableResponse {\n        const message = createBasePutSnappableResponse();\n        message.id = object.id ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetSnappableRequest(): GetSnappableRequest {\n    return { id: \"\" };\n}\nexport const GetSnappableRequest = {\n    encode(message: GetSnappableRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetSnappableRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetSnappableRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetSnappableRequest>, I>>(object: I): GetSnappableRequest {\n        const message = createBaseGetSnappableRequest();\n        message.id = object.id ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetSnappableResponse(): GetSnappableResponse {\n    return { data: undefined, media: [] };\n}\nexport const GetSnappableResponse = {\n    encode(message: GetSnappableResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.data !== undefined) {\n            Snappable.encode(message.data, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.media) {\n            SnappableMedia.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetSnappableResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetSnappableResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = Snappable.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.media.push(SnappableMedia.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetSnappableResponse>, I>>(object: I): GetSnappableResponse {\n        const message = createBaseGetSnappableResponse();\n        message.data = object.data !== undefined && object.data !== null ? Snappable.fromPartial(object.data) : undefined;\n        message.media = object.media?.map((e) => SnappableMedia.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseSnappableEncryptedKey(): SnappableEncryptedKey {\n    return { encryptedKey: new Uint8Array(), encryptionKeyId: \"\", encryptionKeyIv: new Uint8Array() };\n}\nexport const SnappableEncryptedKey = {\n    encode(message: SnappableEncryptedKey, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.encryptedKey.length !== 0) {\n            writer.uint32(10).bytes(message.encryptedKey);\n        }\n        if (message.encryptionKeyId !== \"\") {\n            writer.uint32(18).string(message.encryptionKeyId);\n        }\n        if (message.encryptionKeyIv.length !== 0) {\n            writer.uint32(26).bytes(message.encryptionKeyIv);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): SnappableEncryptedKey {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnappableEncryptedKey();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.encryptedKey = reader.bytes();\n                    break;\n                case 2:\n                    message.encryptionKeyId = reader.string();\n                    break;\n                case 3:\n                    message.encryptionKeyIv = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<SnappableEncryptedKey>, I>>(object: I): SnappableEncryptedKey {\n        const message = createBaseSnappableEncryptedKey();\n        message.encryptedKey = object.encryptedKey ?? new Uint8Array();\n        message.encryptionKeyId = object.encryptionKeyId ?? \"\";\n        message.encryptionKeyIv = object.encryptionKeyIv ?? new Uint8Array();\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface Geopoint {\n    latitude: number;\n    longitude: number;\n}\nfunction createBaseGeopoint(): Geopoint {\n    return { latitude: 0, longitude: 0 };\n}\nexport const Geopoint = {\n    encode(message: Geopoint, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.latitude !== 0) {\n            writer.uint32(9).double(message.latitude);\n        }\n        if (message.longitude !== 0) {\n            writer.uint32(17).double(message.longitude);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Geopoint {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGeopoint();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.latitude = reader.double();\n                    break;\n                case 2:\n                    message.longitude = reader.double();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Geopoint>, I>>(object: I): Geopoint {\n        const message = createBaseGeopoint();\n        message.latitude = object.latitude ?? 0;\n        message.longitude = object.longitude ?? 0;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Geopoint } from \"./geopoint\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface Geocircle {\n    radius: number;\n    center: Geopoint | undefined;\n}\nfunction createBaseGeocircle(): Geocircle {\n    return { radius: 0, center: undefined };\n}\nexport const Geocircle = {\n    encode(message: Geocircle, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.radius !== 0) {\n            writer.uint32(9).double(message.radius);\n        }\n        if (message.center !== undefined) {\n            Geopoint.encode(message.center, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Geocircle {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGeocircle();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.radius = reader.double();\n                    break;\n                case 2:\n                    message.center = Geopoint.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Geocircle>, I>>(object: I): Geocircle {\n        const message = createBaseGeocircle();\n        message.radius = object.radius ?? 0;\n        message.center =\n            object.center !== undefined && object.center !== null ? Geopoint.fromPartial(object.center) : undefined;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Geocircle } from \"./geocircle\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface Lures {\n    locations: Geocircle[];\n    activeLure: Geocircle | undefined;\n    closestLure: Geocircle | undefined;\n}\nfunction createBaseLures(): Lures {\n    return { locations: [], activeLure: undefined, closestLure: undefined };\n}\nexport const Lures = {\n    encode(message: Lures, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.locations) {\n            Geocircle.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.activeLure !== undefined) {\n            Geocircle.encode(message.activeLure, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.closestLure !== undefined) {\n            Geocircle.encode(message.closestLure, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): Lures {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLures();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.locations.push(Geocircle.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.activeLure = Geocircle.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.closestLure = Geocircle.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<Lures>, I>>(object: I): Lures {\n        const message = createBaseLures();\n        message.locations = object.locations?.map((e) => Geocircle.fromPartial(e)) || [];\n        message.activeLure =\n            object.activeLure !== undefined && object.activeLure !== null\n                ? Geocircle.fromPartial(object.activeLure)\n                : undefined;\n        message.closestLure =\n            object.closestLure !== undefined && object.closestLure !== null\n                ? Geocircle.fromPartial(object.closestLure)\n                : undefined;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Timestamp } from \"../google/protobuf/timestamp\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface BitmojiUserInfo {\n    avatarId: string;\n    selfieId: string;\n}\nexport interface FriendUserInfo {\n    friendshipStart: Date | undefined;\n    lastInteraction: Date | undefined;\n    streak: number;\n}\nexport interface UserData {\n    userId: string;\n    username: string;\n    birthdate: string;\n    displayName: string;\n    countrycode: string;\n    score: number;\n    bitmojiInfo: BitmojiUserInfo | undefined;\n    friendInfo: FriendUserInfo | undefined;\n    zodiac: UserData_Zodiac;\n}\nexport enum UserData_Zodiac {\n    Invalid = \"Invalid\",\n    Aquarius = \"Aquarius\",\n    Aries = \"Aries\",\n    Cancer = \"Cancer\",\n    Capricorn = \"Capricorn\",\n    Gemini = \"Gemini\",\n    Leo = \"Leo\",\n    Libra = \"Libra\",\n    Pisces = \"Pisces\",\n    Sagittarius = \"Sagittarius\",\n    Scorpio = \"Scorpio\",\n    Taurus = \"Taurus\",\n    Virgo = \"Virgo\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function userData_ZodiacFromJSON(object: any): UserData_Zodiac {\n    switch (object) {\n        case 0:\n        case \"Invalid\":\n            return UserData_Zodiac.Invalid;\n        case 1:\n        case \"Aquarius\":\n            return UserData_Zodiac.Aquarius;\n        case 2:\n        case \"Aries\":\n            return UserData_Zodiac.Aries;\n        case 3:\n        case \"Cancer\":\n            return UserData_Zodiac.Cancer;\n        case 4:\n        case \"Capricorn\":\n            return UserData_Zodiac.Capricorn;\n        case 5:\n        case \"Gemini\":\n            return UserData_Zodiac.Gemini;\n        case 6:\n        case \"Leo\":\n            return UserData_Zodiac.Leo;\n        case 7:\n        case \"Libra\":\n            return UserData_Zodiac.Libra;\n        case 8:\n        case \"Pisces\":\n            return UserData_Zodiac.Pisces;\n        case 9:\n        case \"Sagittarius\":\n            return UserData_Zodiac.Sagittarius;\n        case 10:\n        case \"Scorpio\":\n            return UserData_Zodiac.Scorpio;\n        case 11:\n        case \"Taurus\":\n            return UserData_Zodiac.Taurus;\n        case 12:\n        case \"Virgo\":\n            return UserData_Zodiac.Virgo;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return UserData_Zodiac.UNRECOGNIZED;\n    }\n}\nexport function userData_ZodiacToNumber(object: UserData_Zodiac): number {\n    switch (object) {\n        case UserData_Zodiac.Invalid:\n            return 0;\n        case UserData_Zodiac.Aquarius:\n            return 1;\n        case UserData_Zodiac.Aries:\n            return 2;\n        case UserData_Zodiac.Cancer:\n            return 3;\n        case UserData_Zodiac.Capricorn:\n            return 4;\n        case UserData_Zodiac.Gemini:\n            return 5;\n        case UserData_Zodiac.Leo:\n            return 6;\n        case UserData_Zodiac.Libra:\n            return 7;\n        case UserData_Zodiac.Pisces:\n            return 8;\n        case UserData_Zodiac.Sagittarius:\n            return 9;\n        case UserData_Zodiac.Scorpio:\n            return 10;\n        case UserData_Zodiac.Taurus:\n            return 11;\n        case UserData_Zodiac.Virgo:\n            return 12;\n        default:\n            return 0;\n    }\n}\nexport interface UserDataList {\n    userData: UserData[];\n}\nfunction createBaseBitmojiUserInfo(): BitmojiUserInfo {\n    return { avatarId: \"\", selfieId: \"\" };\n}\nexport const BitmojiUserInfo = {\n    encode(message: BitmojiUserInfo, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.avatarId !== \"\") {\n            writer.uint32(10).string(message.avatarId);\n        }\n        if (message.selfieId !== \"\") {\n            writer.uint32(18).string(message.selfieId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): BitmojiUserInfo {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBitmojiUserInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.avatarId = reader.string();\n                    break;\n                case 2:\n                    message.selfieId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<BitmojiUserInfo>, I>>(object: I): BitmojiUserInfo {\n        const message = createBaseBitmojiUserInfo();\n        message.avatarId = object.avatarId ?? \"\";\n        message.selfieId = object.selfieId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseFriendUserInfo(): FriendUserInfo {\n    return { friendshipStart: undefined, lastInteraction: undefined, streak: 0 };\n}\nexport const FriendUserInfo = {\n    encode(message: FriendUserInfo, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.friendshipStart !== undefined) {\n            Timestamp.encode(toTimestamp(message.friendshipStart), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastInteraction !== undefined) {\n            Timestamp.encode(toTimestamp(message.lastInteraction), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.streak !== 0) {\n            writer.uint32(24).uint32(message.streak);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): FriendUserInfo {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFriendUserInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.friendshipStart = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lastInteraction = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.streak = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<FriendUserInfo>, I>>(object: I): FriendUserInfo {\n        const message = createBaseFriendUserInfo();\n        message.friendshipStart = object.friendshipStart ?? undefined;\n        message.lastInteraction = object.lastInteraction ?? undefined;\n        message.streak = object.streak ?? 0;\n        return message;\n    },\n};\nfunction createBaseUserData(): UserData {\n    return {\n        userId: \"\",\n        username: \"\",\n        birthdate: \"\",\n        displayName: \"\",\n        countrycode: \"\",\n        score: 0,\n        bitmojiInfo: undefined,\n        friendInfo: undefined,\n        zodiac: UserData_Zodiac.Invalid,\n    };\n}\nexport const UserData = {\n    encode(message: UserData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.userId !== \"\") {\n            writer.uint32(10).string(message.userId);\n        }\n        if (message.username !== \"\") {\n            writer.uint32(18).string(message.username);\n        }\n        if (message.birthdate !== \"\") {\n            writer.uint32(26).string(message.birthdate);\n        }\n        if (message.displayName !== \"\") {\n            writer.uint32(34).string(message.displayName);\n        }\n        if (message.countrycode !== \"\") {\n            writer.uint32(42).string(message.countrycode);\n        }\n        if (message.score !== 0) {\n            writer.uint32(56).uint64(message.score);\n        }\n        if (message.bitmojiInfo !== undefined) {\n            BitmojiUserInfo.encode(message.bitmojiInfo, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.friendInfo !== undefined) {\n            FriendUserInfo.encode(message.friendInfo, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.zodiac !== UserData_Zodiac.Invalid) {\n            writer.uint32(80).int32(userData_ZodiacToNumber(message.zodiac));\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UserData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUserData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.userId = reader.string();\n                    break;\n                case 2:\n                    message.username = reader.string();\n                    break;\n                case 3:\n                    message.birthdate = reader.string();\n                    break;\n                case 4:\n                    message.displayName = reader.string();\n                    break;\n                case 5:\n                    message.countrycode = reader.string();\n                    break;\n                case 7:\n                    message.score = longToNumber(reader.uint64() as Long);\n                    break;\n                case 8:\n                    message.bitmojiInfo = BitmojiUserInfo.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.friendInfo = FriendUserInfo.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.zodiac = userData_ZodiacFromJSON(reader.int32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UserData>, I>>(object: I): UserData {\n        const message = createBaseUserData();\n        message.userId = object.userId ?? \"\";\n        message.username = object.username ?? \"\";\n        message.birthdate = object.birthdate ?? \"\";\n        message.displayName = object.displayName ?? \"\";\n        message.countrycode = object.countrycode ?? \"\";\n        message.score = object.score ?? 0;\n        message.bitmojiInfo =\n            object.bitmojiInfo !== undefined && object.bitmojiInfo !== null\n                ? BitmojiUserInfo.fromPartial(object.bitmojiInfo)\n                : undefined;\n        message.friendInfo =\n            object.friendInfo !== undefined && object.friendInfo !== null\n                ? FriendUserInfo.fromPartial(object.friendInfo)\n                : undefined;\n        message.zodiac = object.zodiac ?? UserData_Zodiac.Invalid;\n        return message;\n    },\n};\nfunction createBaseUserDataList(): UserDataList {\n    return { userData: [] };\n}\nexport const UserDataList = {\n    encode(message: UserDataList, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.userData) {\n            UserData.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): UserDataList {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUserDataList();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.userData.push(UserData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<UserDataList>, I>>(object: I): UserDataList {\n        const message = createBaseUserDataList();\n        message.userData = object.userData?.map((e) => UserData.fromPartial(e)) || [];\n        return message;\n    },\n};\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction toTimestamp(date: Date): Timestamp {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t: Timestamp): Date {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface PersistentStore {\n    store: Uint8Array;\n}\nfunction createBasePersistentStore(): PersistentStore {\n    return { store: new Uint8Array() };\n}\nexport const PersistentStore = {\n    encode(message: PersistentStore, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.store.length !== 0) {\n            writer.uint32(10).bytes(message.store);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PersistentStore {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePersistentStore();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.store = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PersistentStore>, I>>(object: I): PersistentStore {\n        const message = createBasePersistentStore();\n        message.store = object.store ?? new Uint8Array();\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface LaunchParams {\n    data: Uint8Array;\n}\nfunction createBaseLaunchParams(): LaunchParams {\n    return { data: new Uint8Array() };\n}\nexport const LaunchParams = {\n    encode(message: LaunchParams, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): LaunchParams {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLaunchParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<LaunchParams>, I>>(object: I): LaunchParams {\n        const message = createBaseLaunchParams();\n        message.data = object.data ?? new Uint8Array();\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Snappable } from \"./snappable\";\nimport { Lures } from \"./lures\";\nimport { UserData } from \"./user_data\";\nimport { PersistentStore } from \"./persistent_store\";\nimport { LaunchParams } from \"./launch_params\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface LaunchData {\n    snappable: Snappable | undefined;\n    lures: Lures | undefined;\n    userId: string;\n    entryPoint: LaunchData_EntryPoint;\n    userData: UserData | undefined;\n    persistentStore: PersistentStore | undefined;\n    launchParams: LaunchParams | undefined;\n    apiDescriptors: LaunchData_ApiDescriptor[];\n    renderConfig: LaunchData_RenderConfig;\n    activationSource: LaunchData_ActivationSource;\n}\nexport enum LaunchData_EntryPoint {\n    LIVE_CAMERA = \"LIVE_CAMERA\",\n    STORY_REPLY = \"STORY_REPLY\",\n    CHAT_REPLY = \"CHAT_REPLY\",\n    RESTART = \"RESTART\",\n    PREVIEW_CANCEL = \"PREVIEW_CANCEL\",\n    MAP = \"MAP\",\n    BITMOJI_STICKERS = \"BITMOJI_STICKERS\",\n    POST_CAPTURE_PREVIEW = \"POST_CAPTURE_PREVIEW\",\n    POST_CAPTURE_TRANSCODING = \"POST_CAPTURE_TRANSCODING\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function launchData_EntryPointFromJSON(object: any): LaunchData_EntryPoint {\n    switch (object) {\n        case 0:\n        case \"LIVE_CAMERA\":\n            return LaunchData_EntryPoint.LIVE_CAMERA;\n        case 1:\n        case \"STORY_REPLY\":\n            return LaunchData_EntryPoint.STORY_REPLY;\n        case 2:\n        case \"CHAT_REPLY\":\n            return LaunchData_EntryPoint.CHAT_REPLY;\n        case 3:\n        case \"RESTART\":\n            return LaunchData_EntryPoint.RESTART;\n        case 4:\n        case \"PREVIEW_CANCEL\":\n            return LaunchData_EntryPoint.PREVIEW_CANCEL;\n        case 5:\n        case \"MAP\":\n            return LaunchData_EntryPoint.MAP;\n        case 6:\n        case \"BITMOJI_STICKERS\":\n            return LaunchData_EntryPoint.BITMOJI_STICKERS;\n        case 7:\n        case \"POST_CAPTURE_PREVIEW\":\n            return LaunchData_EntryPoint.POST_CAPTURE_PREVIEW;\n        case 8:\n        case \"POST_CAPTURE_TRANSCODING\":\n            return LaunchData_EntryPoint.POST_CAPTURE_TRANSCODING;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LaunchData_EntryPoint.UNRECOGNIZED;\n    }\n}\nexport function launchData_EntryPointToNumber(object: LaunchData_EntryPoint): number {\n    switch (object) {\n        case LaunchData_EntryPoint.LIVE_CAMERA:\n            return 0;\n        case LaunchData_EntryPoint.STORY_REPLY:\n            return 1;\n        case LaunchData_EntryPoint.CHAT_REPLY:\n            return 2;\n        case LaunchData_EntryPoint.RESTART:\n            return 3;\n        case LaunchData_EntryPoint.PREVIEW_CANCEL:\n            return 4;\n        case LaunchData_EntryPoint.MAP:\n            return 5;\n        case LaunchData_EntryPoint.BITMOJI_STICKERS:\n            return 6;\n        case LaunchData_EntryPoint.POST_CAPTURE_PREVIEW:\n            return 7;\n        case LaunchData_EntryPoint.POST_CAPTURE_TRANSCODING:\n            return 8;\n        default:\n            return 0;\n    }\n}\nexport enum LaunchData_ApiDescriptor {\n    NONE = \"NONE\",\n    EXPERIMENTAL = \"EXPERIMENTAL\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function launchData_ApiDescriptorFromJSON(object: any): LaunchData_ApiDescriptor {\n    switch (object) {\n        case 0:\n        case \"NONE\":\n            return LaunchData_ApiDescriptor.NONE;\n        case 1:\n        case \"EXPERIMENTAL\":\n            return LaunchData_ApiDescriptor.EXPERIMENTAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LaunchData_ApiDescriptor.UNRECOGNIZED;\n    }\n}\nexport function launchData_ApiDescriptorToNumber(object: LaunchData_ApiDescriptor): number {\n    switch (object) {\n        case LaunchData_ApiDescriptor.NONE:\n            return 0;\n        case LaunchData_ApiDescriptor.EXPERIMENTAL:\n            return 1;\n        default:\n            return 0;\n    }\n}\nexport enum LaunchData_RenderConfig {\n    DEFAULT = \"DEFAULT\",\n    REPLAY_STREAM = \"REPLAY_STREAM\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function launchData_RenderConfigFromJSON(object: any): LaunchData_RenderConfig {\n    switch (object) {\n        case 0:\n        case \"DEFAULT\":\n            return LaunchData_RenderConfig.DEFAULT;\n        case 1:\n        case \"REPLAY_STREAM\":\n            return LaunchData_RenderConfig.REPLAY_STREAM;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LaunchData_RenderConfig.UNRECOGNIZED;\n    }\n}\nexport function launchData_RenderConfigToNumber(object: LaunchData_RenderConfig): number {\n    switch (object) {\n        case LaunchData_RenderConfig.DEFAULT:\n            return 0;\n        case LaunchData_RenderConfig.REPLAY_STREAM:\n            return 1;\n        default:\n            return 0;\n    }\n}\nexport enum LaunchData_ActivationSource {\n    ACTIVATION_SOURCE_UNSET = \"ACTIVATION_SOURCE_UNSET\",\n    ACTIVATION_SOURCE_DEFAULT = \"ACTIVATION_SOURCE_DEFAULT\",\n    CREATIVE = \"CREATIVE\",\n    SCAN = \"SCAN\",\n    SCAN_HISTORY = \"SCAN_HISTORY\",\n    CHAT_FEED_PSA = \"CHAT_FEED_PSA\",\n    GROWTH_NOTIFICATION = \"GROWTH_NOTIFICATION\",\n    MASS_SNAP = \"MASS_SNAP\",\n    SMART_CTA = \"SMART_CTA\",\n    MASS_CHAT = \"MASS_CHAT\",\n    BILLBOARD_FHP = \"BILLBOARD_FHP\",\n    LENS_ACTIVITY_CENTER = \"LENS_ACTIVITY_CENTER\",\n    AR_BAR = \"AR_BAR\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function launchData_ActivationSourceFromJSON(object: any): LaunchData_ActivationSource {\n    switch (object) {\n        case 0:\n        case \"ACTIVATION_SOURCE_UNSET\":\n            return LaunchData_ActivationSource.ACTIVATION_SOURCE_UNSET;\n        case 1:\n        case \"ACTIVATION_SOURCE_DEFAULT\":\n            return LaunchData_ActivationSource.ACTIVATION_SOURCE_DEFAULT;\n        case 2:\n        case \"CREATIVE\":\n            return LaunchData_ActivationSource.CREATIVE;\n        case 3:\n        case \"SCAN\":\n            return LaunchData_ActivationSource.SCAN;\n        case 4:\n        case \"SCAN_HISTORY\":\n            return LaunchData_ActivationSource.SCAN_HISTORY;\n        case 5:\n        case \"CHAT_FEED_PSA\":\n            return LaunchData_ActivationSource.CHAT_FEED_PSA;\n        case 6:\n        case \"GROWTH_NOTIFICATION\":\n            return LaunchData_ActivationSource.GROWTH_NOTIFICATION;\n        case 7:\n        case \"MASS_SNAP\":\n            return LaunchData_ActivationSource.MASS_SNAP;\n        case 8:\n        case \"SMART_CTA\":\n            return LaunchData_ActivationSource.SMART_CTA;\n        case 9:\n        case \"MASS_CHAT\":\n            return LaunchData_ActivationSource.MASS_CHAT;\n        case 10:\n        case \"BILLBOARD_FHP\":\n            return LaunchData_ActivationSource.BILLBOARD_FHP;\n        case 11:\n        case \"LENS_ACTIVITY_CENTER\":\n            return LaunchData_ActivationSource.LENS_ACTIVITY_CENTER;\n        case 12:\n        case \"AR_BAR\":\n            return LaunchData_ActivationSource.AR_BAR;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LaunchData_ActivationSource.UNRECOGNIZED;\n    }\n}\nexport function launchData_ActivationSourceToNumber(object: LaunchData_ActivationSource): number {\n    switch (object) {\n        case LaunchData_ActivationSource.ACTIVATION_SOURCE_UNSET:\n            return 0;\n        case LaunchData_ActivationSource.ACTIVATION_SOURCE_DEFAULT:\n            return 1;\n        case LaunchData_ActivationSource.CREATIVE:\n            return 2;\n        case LaunchData_ActivationSource.SCAN:\n            return 3;\n        case LaunchData_ActivationSource.SCAN_HISTORY:\n            return 4;\n        case LaunchData_ActivationSource.CHAT_FEED_PSA:\n            return 5;\n        case LaunchData_ActivationSource.GROWTH_NOTIFICATION:\n            return 6;\n        case LaunchData_ActivationSource.MASS_SNAP:\n            return 7;\n        case LaunchData_ActivationSource.SMART_CTA:\n            return 8;\n        case LaunchData_ActivationSource.MASS_CHAT:\n            return 9;\n        case LaunchData_ActivationSource.BILLBOARD_FHP:\n            return 10;\n        case LaunchData_ActivationSource.LENS_ACTIVITY_CENTER:\n            return 11;\n        case LaunchData_ActivationSource.AR_BAR:\n            return 12;\n        default:\n            return 0;\n    }\n}\nfunction createBaseLaunchData(): LaunchData {\n    return {\n        snappable: undefined,\n        lures: undefined,\n        userId: \"\",\n        entryPoint: LaunchData_EntryPoint.LIVE_CAMERA,\n        userData: undefined,\n        persistentStore: undefined,\n        launchParams: undefined,\n        apiDescriptors: [],\n        renderConfig: LaunchData_RenderConfig.DEFAULT,\n        activationSource: LaunchData_ActivationSource.ACTIVATION_SOURCE_UNSET,\n    };\n}\nexport const LaunchData = {\n    encode(message: LaunchData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.snappable !== undefined) {\n            Snappable.encode(message.snappable, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lures !== undefined) {\n            Lures.encode(message.lures, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.userId !== \"\") {\n            writer.uint32(26).string(message.userId);\n        }\n        if (message.entryPoint !== LaunchData_EntryPoint.LIVE_CAMERA) {\n            writer.uint32(32).int32(launchData_EntryPointToNumber(message.entryPoint));\n        }\n        if (message.userData !== undefined) {\n            UserData.encode(message.userData, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.persistentStore !== undefined) {\n            PersistentStore.encode(message.persistentStore, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.launchParams !== undefined) {\n            LaunchParams.encode(message.launchParams, writer.uint32(58).fork()).ldelim();\n        }\n        writer.uint32(66).fork();\n        for (const v of message.apiDescriptors) {\n            writer.int32(launchData_ApiDescriptorToNumber(v));\n        }\n        writer.ldelim();\n        if (message.renderConfig !== LaunchData_RenderConfig.DEFAULT) {\n            writer.uint32(72).int32(launchData_RenderConfigToNumber(message.renderConfig));\n        }\n        if (message.activationSource !== LaunchData_ActivationSource.ACTIVATION_SOURCE_UNSET) {\n            writer.uint32(80).int32(launchData_ActivationSourceToNumber(message.activationSource));\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): LaunchData {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLaunchData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snappable = Snappable.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lures = Lures.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.userId = reader.string();\n                    break;\n                case 4:\n                    message.entryPoint = launchData_EntryPointFromJSON(reader.int32());\n                    break;\n                case 5:\n                    message.userData = UserData.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.persistentStore = PersistentStore.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.launchParams = LaunchParams.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.apiDescriptors.push(launchData_ApiDescriptorFromJSON(reader.int32()));\n                        }\n                    }\n                    else {\n                        message.apiDescriptors.push(launchData_ApiDescriptorFromJSON(reader.int32()));\n                    }\n                    break;\n                case 9:\n                    message.renderConfig = launchData_RenderConfigFromJSON(reader.int32());\n                    break;\n                case 10:\n                    message.activationSource = launchData_ActivationSourceFromJSON(reader.int32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<LaunchData>, I>>(object: I): LaunchData {\n        const message = createBaseLaunchData();\n        message.snappable =\n            object.snappable !== undefined && object.snappable !== null ? Snappable.fromPartial(object.snappable) : undefined;\n        message.lures = object.lures !== undefined && object.lures !== null ? Lures.fromPartial(object.lures) : undefined;\n        message.userId = object.userId ?? \"\";\n        message.entryPoint = object.entryPoint ?? LaunchData_EntryPoint.LIVE_CAMERA;\n        message.userData =\n            object.userData !== undefined && object.userData !== null ? UserData.fromPartial(object.userData) : undefined;\n        message.persistentStore =\n            object.persistentStore !== undefined && object.persistentStore !== null\n                ? PersistentStore.fromPartial(object.persistentStore)\n                : undefined;\n        message.launchParams =\n            object.launchParams !== undefined && object.launchParams !== null\n                ? LaunchParams.fromPartial(object.launchParams)\n                : undefined;\n        message.apiDescriptors = object.apiDescriptors?.map((e) => e) || [];\n        message.renderConfig = object.renderConfig ?? LaunchData_RenderConfig.DEFAULT;\n        message.activationSource = object.activationSource ?? LaunchData_ActivationSource.ACTIVATION_SOURCE_UNSET;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import { LaunchData } from \"../generated-proto/pb_schema/lenses/launchdata\";\nimport { isNumber, isRecord, isString } from \"../common/typeguards\";\nimport { LaunchParams } from \"../generated-proto/pb_schema/lenses/launch_params\";\nimport { UserData_Zodiac } from \"../generated-proto/pb_schema/lenses/user_data\";\n\nconst isValidNumber = (value: unknown): value is number => {\n    return isNumber(value) && !Number.isNaN(value) && Number.isFinite(value);\n};\nconst isValidLaunchParam = (value: unknown): boolean => {\n    if (Array.isArray(value)) return value.every(isString) || value.every(isValidNumber);\n    return isString(value) || isValidNumber(value);\n};\n\ntype LensLaunchParams = Record<string, string | number | string[] | number[]>;\n\n/**\n * Some Lenses may accept (or require) certain data provided to them when the Lens is applied.\n *\n * This data may include things like user info (to render the user's name, for example, or perform some task based on\n * their birth date), or arbitrary `launchParams` defined by the Lens.\n *\n * @category Lenses\n */\nexport interface LensLaunchData {\n    userId?: string;\n    userData?: {\n        userId: string;\n        username: string;\n        birthdate: string;\n        displayName: string;\n        countrycode: string;\n        score: number;\n        bitmojiInfo?: {\n            avatarId: string;\n            selfieId: string;\n        };\n        friendInfo?: {\n            friendshipStart?: Date;\n            lastInteraction?: Date;\n            streak: number;\n        };\n        zodiac: UserData_Zodiac;\n    };\n    launchParams?: LensLaunchParams;\n}\n\n/**\n * @internal\n */\nexport const encodeLensLaunchData = (launchData: LensLaunchData, persistentStore: ArrayBuffer): Uint8Array => {\n    // finish() protobufjs method returns UInt8Array with shared ArrayBuffer\n    // to avoid of detached buffer error when passing data to Lens Core\n    // data should be copied using slice() method\n    return LaunchData.encode(\n        LaunchData.fromPartial({\n            ...launchData,\n            launchParams: launchData.launchParams ? encodeLensLaunchParams(launchData.launchParams) : undefined,\n            persistentStore: { store: new Uint8Array(persistentStore) },\n        })\n    )\n        .finish()\n        .slice();\n};\n\nfunction encodeLensLaunchParams(launchParams?: LensLaunchParams): LaunchParams {\n    const newError = (message: string) => new Error(`Failed to encode lens launchParams. ${message}`);\n\n    if (!isRecord(launchParams) || launchParams instanceof Date) {\n        throw newError(`Expected a plain object, got ${typeof launchParams} instead.`);\n    }\n\n    for (const [key, value] of Object.entries(launchParams)) {\n        if (!isValidLaunchParam(value)) {\n            throw newError(\n                `Values must be strings, numbers, or arrays of strings or numbers. Field ${key} is ` +\n                    `a ${typeof value} instead, with value: ${JSON.stringify(value)}`\n            );\n        }\n    }\n\n    return { data: new TextEncoder().encode(JSON.stringify(launchParams)) };\n}\n","import { getPlatformInfo } from \"../platform/platformInfo\";\n\n/**\n * This implementation is limited by how TypeScript currently implements tag function for template literals.\n *\n * The way tag functions are typed by the TypeScript compiler limits their usefulness, for two reasons:\n *\n * 1. Specific literal types are not inferred from interpolation expressions -- the following does not work:\n * ```ts\n * function tag<K extends readonly string[]>(strings: readonly string[], ...keys: K): string { ... }\n * tag`This is a ${\"test\"} template.` // the K type parameter is not correctly inferred as `readonly ['test']`\n * ```\n * 2. The return type of a function used as a tag function will always be `string` -- the following does not work:\n * ```ts\n * function tag<K extends readonly string[]>(\n *   strings: readonly string[],\n *   ...keys: K\n * ): (values: {[k in K[number]]: string}) => string { ... }\n *\n * const template = tag`This is a ${\"test\"} template` // TS infers the type of `template` as `string` -- clearly wrong.\n * ```\n *\n * An attempt is made here to work around those limitations and still provide a reasonably amount of type safety without\n * adding too much verbosity.\n *\n * See https://github.com/microsoft/TypeScript/pull/49552\n */\ntype TemplateFunction<K extends readonly string[], V extends { [key in K[number]]: string }> = (values: V) => string;\n\nfunction makeTemplate<const K extends readonly string[], V extends { [key in K[number]]: string }>(\n    keys: K\n): (template: (tag: (strings: readonly string[], ...keys: 0[]) => string) => string) => TemplateFunction<K, V> {\n    return (template) => (values: V) => {\n        const tag = (readonlyStrings: readonly string[]) => {\n            const strings = readonlyStrings.slice();\n            return [strings.shift()]\n                .concat(keys.map((key: keyof V) => `${values[key] ?? \"\"}${strings.shift()}`))\n                .concat(strings)\n                .join(\"\");\n        };\n        return template(tag);\n    };\n}\n\n/**\n * Any strings which are templated (i.e. require runtime values) are defined below.\n */\nconst legalPromptMessage = makeTemplate([\"privacyPolicyUrl\", \"termsOfServiceUrl\", \"learnMoreUrl\"]);\n\ninterface LocalizableStrings {\n    legalPromptMessage: TemplateFunction<\n        readonly [\"privacyPolicyUrl\", \"termsOfServiceUrl\", \"learnMoreUrl\"],\n        {\n            privacyPolicyUrl: string;\n            termsOfServiceUrl: string;\n            learnMoreUrl: string;\n        }\n    >;\n    legalPromptAccept: string;\n    legalPromptReject: string;\n    legalPromptTermsOfService: string;\n    legalPromptVariantGMessage: string;\n    legalPromptVariantGAdultOrChild: string;\n    legalPromptVariantGFindYourParent: string;\n    legalPromptVariantGIAmGuardian: string;\n    legalPromptVariantGCancel: string;\n    legalPromptVariantGAdult: string;\n    legalPromptVariantGChild: string;\n}\n\n/**\n * Strings for each language are defined below.\n */\n\n/* eslint-disable max-len */\n\n/**\n * Translations for supported locales.\n * https://wiki.sc-corp.net/display/Engineering/Consumer+Product+Localization\n */\nconst allStrings = {\n    \"en-US\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`By using Lenses, you acknowledge reading Snap’s <a href=\"${0}\" target=\"_blank\">Privacy Policy</a> and agree to Snap’s <a href=\"${0}\" target=\"_blank\">Terms of Service</a>. Some lenses use information about your face, hands and voice to work. <a href=\"${0}\" target=\"_blank\">Learn More</a>, and if you want to agree and continue, tap below.`\n        ),\n        legalPromptAccept: `I Agree`,\n        legalPromptReject: `Dismiss`,\n        legalPromptTermsOfService: `Terms of Service`,\n        legalPromptVariantGMessage: `This feature uses information about face(s), hands and voice(s) detected by the camera and microphone to work. With this feature, you can apply fun and useful augmented reality effects on top of selfies and images. Our camera uses technology to locate certain features (like where your hands, eyes, and nose are) and uses that information to accurately position the feature with the image sensed by the camera. Any information that is collected will be deleted as soon as possible (typically soon after the app is closed) and always within no more than three years.<br/><br/>If you want to agree and continue, tap below.`,\n        legalPromptVariantGAdultOrChild: `Are you an adult or child?`,\n        legalPromptVariantGFindYourParent: `Please find your parent or legal guardian.`,\n        legalPromptVariantGIAmGuardian: `I am the child\\'s guardian`,\n        legalPromptVariantGCancel: `Cancel`,\n        legalPromptVariantGAdult: `Adult`,\n        legalPromptVariantGChild: `Child`,\n    },\n\n    ar: {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`باستخدامك للعدسات، فأنت تقر بقراءتك <a href=\"${0}\" target=\"_blank\">لسياسة الخصوصية</a> وتوافق على <a href=\"${0}\" target=\"_blank\">شروط الخدمة</a> الخاصة بسناب. تستخدم بعض العدسات معلومات عن وجهك ويديك وصوتك لكي تعمل. <a href=\"${0}\" target=\"_blank\">تعرّف على مزيد من المعلومات</a>، وإذا أردت الموافقة والاستمرار فالمس أدناه.`\n        ),\n        legalPromptAccept: `أنا أوافق`,\n        legalPromptReject: `تجاهل`,\n        legalPromptTermsOfService: `شروط الخدمة`,\n        legalPromptVariantGMessage: `تستخدم هذه الميزة معلومات تتعلق بالوجه(الوجوه) واليدين والصوت(الأصوات) تكتشفها الكاميرا والميكروفون للعمل. وباستخدام هذه الميزة، يمكنك تطبيق تأثيرات الواقع المُعزّز الممتعة والمفيدة على صور السيلفي والصور. تستخدم الكاميرا لدينا التكنولوجيا لتحديد مكان ملامح معيَّنة (مثل مكان وجود يديك وعينيك وأنفك) وتستخدم هذه المعلومات لتحديد مكان الملامح بدقة مع الصورة التي تستشعرها الكاميرا. سيتم حذف أي معلومات يتم جمعها في أقرب وقت ممكن (عادةً بعد إغلاق التطبيق بفترة وجيزة) وخلال فترة لا تزيد عن ثلاث سنوات دائمًا.<br/><br/>إذا كنت تريد الموافقة والمتابعة، فالمس أدناه.`,\n        legalPromptVariantGAdultOrChild: `هل أنت شخص بالغ أم طفل؟`,\n        legalPromptVariantGFindYourParent: `يُرجى البحث عن وليّ أمرك أو الوصي القانوني.`,\n        legalPromptVariantGIAmGuardian: `أنا الوصي على الطفل`,\n        legalPromptVariantGCancel: `إلغاء`,\n        legalPromptVariantGAdult: `شخص بالغ`,\n        legalPromptVariantGChild: `طفل`,\n    },\n\n    \"bn-BD\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`লেন্সগুলি ব্যবহার করার মাধ্যমে আপনি Snap-এর <a href=\"${0}\" target=\"_blank\">গোপনীয়তা নীতি</a> পড়েছেন এবং Snap-এর <a href=\"${0}\" target=\"_blank\">পরিষেবার শর্তাবলী</a>-তে সম্মত হচ্ছেন বলে স্বীকার করছেন। কিছু কিছু লেন্স কাজ করার জন্য আপনার মুখ, হাত ও কন্ঠস্বর ব্যবহার করে। <a href=\"${0}\" target=\"_blank\">আরো জানুন</a> এবং আপনি যদি সম্মত হতে ও চালিয়ে যেতে চান তবে নিচে ট্যাপ করুন।`\n        ),\n        legalPromptAccept: `আমি সম্মতি দিচ্ছি`,\n        legalPromptReject: `খারিজ করুন`,\n        legalPromptTermsOfService: `পরিষেবার শর্তাবলী`,\n        legalPromptVariantGMessage: `কাজ করতে এই বৈশিষ্ট্যটি ক্যামেরা এবং মাইক্রোফোন দ্বারা শনাক্ত করা মুখ, হাত এবং কণ্ঠস্বর সম্পর্কে তথ্য ব্যবহার করে। এই বৈশিষ্ট্যটি দিয়ে আপনি সেলফি এবং ছবির উপর মজার এবং উপযোগী অগমেন্টেড রিয়ালিটির ইফেক্ট প্রয়োগ করতে পারবেন। আমাদের ক্যামেরা নির্দিষ্ট বৈশিষ্ট্যগুলি (যেমন আপনার হাত, চোখ এবং নাক কোথায়) শনাক্ত করতে প্রযুক্তি ব্যবহার করে এবং ক্যামেরা দ্বারা আঁচ করা ছবির সাথে বৈশিষ্ট্যটিকে সঠিকভাবে অবস্থান করতে সেই তথ্য ব্যবহার করে। সংগৃহীত যেকোনো তথ্য যত তাড়াতাড়ি সম্ভব মুছে ফেলা হবে (সাধারণত অ্যাপটি বন্ধ হওয়ার পরেই) এবং কোনো সময়েই তা তিন বছরের বেশি রাখা হবে না।<br/><br/>আপনি যদি সম্মত হতে চান এবং চালিয়ে যেতে চান তাহলে নিচে ট্যাপ করুন।`,\n        legalPromptVariantGAdultOrChild: `আপনি একজন প্রাপ্তবয়স্ক না শিশু?`,\n        legalPromptVariantGFindYourParent: `অনুগ্রহ করে আপনার পিতামাতা বা আইনি অভিভাবককে খুঁজুন।`,\n        legalPromptVariantGIAmGuardian: `আমি শিশুটির অভিভাবক`,\n        legalPromptVariantGCancel: `বাতিল করুন`,\n        legalPromptVariantGAdult: `প্রাপ্তবয়স্ক`,\n        legalPromptVariantGChild: `শিশু`,\n    },\n\n    \"bn-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`লেন্স ব্যবহার করে, আপনি Snap\\'এর \\\"<a href=\"${0}\" target=\"_blank\">\\\"গোপনীয়তার নীতি</a> পড়েছেন এবং Snap\\'এর <a href=\"${0}\" target=\"_blank\">পরিষেবার শর্তাবলী</a>-তে সম্মত হচ্ছেন বলে স্বীকার করছেন। কিছু কিছু লেন্স কাজ করার জন্য আপনার মুখ, হাত ও কন্ঠস্বরের তথ্য ব্যবহার করে। <a href=\"${0}\" target=\"_blank\">আরও জানুন</a> এবং আপনি সম্মত হলে ও চালিয়ে যেতে চাইলে নিচে ট্যাপ করুন।`\n        ),\n        legalPromptAccept: `আমি সম্মত`,\n        legalPromptReject: `খারিজ করুন`,\n        legalPromptTermsOfService: `পরিষেবার শর্তাবলী`,\n        legalPromptVariantGMessage: `কাজ করার জন্য এই বৈশিষ্ট্যটি ক্যামেরা এবং মাইক্রোফোন দ্বারা শনাক্ত করা মুখ(গুলি), হাত এবং ভয়েস(গুলি) সম্পর্কিত তথ্য ব্যবহার করে৷ এই বৈশিষ্ট্যটির সাহায্যে, আপনি সেলফি এবং ছবিগুলির উপরে মজাদার এবং দরকারী অগমেন্টেড রিয়েলিটি প্রভাব প্রয়োগ করতে পারেন। আমাদের ক্যামেরা নির্দিষ্ট কিছু বৈশিষ্ট্য শনাক্ত করতে প্রযুক্তি ব্যবহার করে (যেমন আপনার হাত, চোখ এবং নাক কোথায়) এবং ক্যামেরা দ্বারা সংবেদিত ছবির সাথে বৈশিষ্ট্যটিকে ঠিক জায়গায় বসাতে সেই তথ্য ব্যবহার সবসময়ই তিন বছরের কম সময়ের মধ্যে। <br/><br/>আপনি যদি সম্মত থাকেন এবং চালিয়ে যেতে চান, নিচে ট্যাপ করুন।`,\n        legalPromptVariantGAdultOrChild: `আপনি কি একজন প্রাপ্তবয়স্ক না শিশু?`,\n        legalPromptVariantGFindYourParent: `অনুগ্রহ করে আপনার মা-বাবা বা আইনী অভিভাবককে খুঁজুন।`,\n        legalPromptVariantGIAmGuardian: `আমি শিশুটির অভিভাবক`,\n        legalPromptVariantGCancel: `বাতিল করুন`,\n        legalPromptVariantGAdult: `প্রাপ্তবয়স্ক`,\n        legalPromptVariantGChild: `শিশু`,\n    },\n\n    \"da-DK\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Når du anvender Linser, bekræfter du, at du har læst Snaps <a href=\"${0}\" target=\"_blank\">privatlivspolitik</a> og accepterer Snaps <a href=\"${0}\" target=\"_blank\">servicevilkår</a>. Nogle Linser bruger information om dit ansigt, dine hænder og din stemme for at fungere. <a href=\"${0}\" target=\"_blank\">Få mere at vide</a>, og tryk nedenfor, hvis du vil acceptere og fortsætte.`\n        ),\n        legalPromptAccept: `Jeg er enig`,\n        legalPromptReject: `Afvis`,\n        legalPromptTermsOfService: `Servicevilkår`,\n        legalPromptVariantGMessage: `Denne funktion bruger oplysninger om ansigt(er), hænder og stemme(r), der registreres af kameraet og mikrofonen, for at kunne fungere. Med denne funktion kan du anvende sjove og nyttige augmented reality-effekter på selfies og billeder. Vores kamera bruger teknologi til at finde bestemte træk (f.eks. hvor dine hænder, øjne og næse er) og bruger disse oplysninger til nøjagtigt at placere trækket i billedet, der opfanges af kameraet. Alle oplysninger, der indsamles, slettes så hurtigst som muligt (typisk kort efter, at appen lukkes) og altid inden for højst tre år.<br/><br/>Tryk herunder, hvis du accepterer og vil fortsætte.`,\n        legalPromptVariantGAdultOrChild: `Er du voksen eller barn?`,\n        legalPromptVariantGFindYourParent: `Find din forælder eller værge.`,\n        legalPromptVariantGIAmGuardian: `Jeg er barnets værge`,\n        legalPromptVariantGCancel: `Annuller`,\n        legalPromptVariantGAdult: `Voksen`,\n        legalPromptVariantGChild: `Barn`,\n    },\n\n    \"de-DE\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Wenn du Linsen verwendet, versicherst du, dass du die <a href=\"${0}\" target=\"_blank\">Datenschutzbestimmungen</a> von Snap gelesen hast und den <a href=\"${0}\" target=\"_blank\">Servicebestimmungen</a> von Snap zustimmst. Manche Linsen verarbeiten Informationen zu deinem Gesicht, deinen Händen und deiner Stimme, um zu funktionieren. <a href=\"${0}\" target=\"_blank\">Hier erfährst du mehr.</a> Tippe unten, wenn du zustimmen und fortfahren möchtest.`\n        ),\n        legalPromptAccept: `Zustimmen`,\n        legalPromptReject: `Ablehnen`,\n        legalPromptTermsOfService: `Servicebestimmungen`,\n        legalPromptVariantGMessage: `Diese Funktion verwendet Informationen über Gesichter, Hände und Stimmen, die von der Kamera und dem Mikrofon erkannt werden. Mit dieser Funktion kannst du lustige und nützliche Augmented Reality-Effekte auf Selfies und Bilder anwenden. Unsere Kamera nutzt Technologien, um bestimmte Merkmale zu lokalisieren (z. B. wo sich deine Hände, Augen und Nase befinden), und verwendet diese Informationen, um dieses Merkmal dann exakt über das von der Kamera erfasste Bild zu positionieren. Alle gesammelten Informationen werden so schnell wie möglich gelöscht (in der Regel kurz nach dem Schließen der App), spätestens aber innerhalb von drei Jahren.<br/><br/>Tippe unten, um zuzustimmen und fortzufahren.`,\n        legalPromptVariantGAdultOrChild: `Bist du erwachsen oder minderjährig?`,\n        legalPromptVariantGFindYourParent: `Bitte hole ein Elternteil oder Erziehungsberechtigten.`,\n        legalPromptVariantGIAmGuardian: `Ich bin der Erziehungsberechtigte des Kindes.`,\n        legalPromptVariantGCancel: `Abbrechen`,\n        legalPromptVariantGAdult: `Erwachsen`,\n        legalPromptVariantGChild: `Minderjährig`,\n    },\n\n    \"el-GR\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Χρησιμοποιώντας τους Φακούς, αναγνωρίζεις ότι έχεις διαβάσει την <a href=\"${0}\" target=\"_blank\">Πολιτική απορρήτου</a> του Snap και ότι συμφωνείς με τους <a href=\"${0}\" target=\"_blank\">Όρους υπηρεσίας</a> του Snap. Ορισμένοι Φακοί χρησιμοποιούν πληροφορίες σχετικά με το πρόσωπο, τα χέρια και τη φωνή σου για να λειτουργήσουν. <a href=\"${0}\" target=\"_blank\">Μάθε περισσότερα</a> και αν θέλεις να συμφωνήσεις και να συνεχίσεις, άγγιξε παρακάτω.`\n        ),\n        legalPromptAccept: `Συμφωνώ`,\n        legalPromptReject: `Απόρριψη`,\n        legalPromptTermsOfService: `Όροι υπηρεσίας`,\n        legalPromptVariantGMessage: `Αυτή η λειτουργία χρησιμοποιεί πληροφορίες σχετικά με τα πρόσωπα, τα χέρια και τις φωνές που ανιχνεύονται από την κάμερα και το μικρόφωνο, προκειμένου να λειτουργήσει. Με αυτήν τη λειτουργία μπορείς να εφαρμόσεις διασκεδαστικά και χρήσιμα εφέ επαυξημένης πραγματικότητας σε σέλφι και εικόνες. Η κάμερά μας χρησιμοποιεί την τεχνολογία για να εντοπίσει ορισμένα χαρακτηριστικά (όπως που βρίσκονται τα χέρια, τα μάτια και η μύτη σου) και αξιοποιεί αυτές τις πληροφορίες για να τοποθετήσει με ακρίβεια τη λειτουργία στην εικόνα που καταγράφεται από την κάμερα. Όλες οι πληροφορίες που συλλέγονται διαγράφονται το συντομότερο δυνατό (συνήθως λίγο μετά το κλείσιμο της εφαρμογής) και σε κάθε περίπτωση σε όχι παραπάνω από τρία χρόνια.<br/><br/>Αν συμφωνείς και θέλεις να συνεχίσεις, άγγιξε παρακάτω.`,\n        legalPromptVariantGAdultOrChild: `Είσαι ενήλικας ή παιδί;`,\n        legalPromptVariantGFindYourParent: `Βρες τον γονέα ή τον νόμιμο κηδεμόνα σου.`,\n        legalPromptVariantGIAmGuardian: `Είμαι ο κηδεμόνας του παιδιού`,\n        legalPromptVariantGCancel: `Άκυρο`,\n        legalPromptVariantGAdult: `Ενήλικος`,\n        legalPromptVariantGChild: `Παιδί`,\n    },\n\n    \"en-GB\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`By using Lenses, you acknowledge reading Snap\\’s <a href=\"${0}\" target=\"_blank\">Privacy Policy</a> and agree to Snap\\’s <a href=\"${0}\" target=\"_blank\">Terms of Service</a>. Some Lenses use information about your face, hands and voice to work. <a href=\"${0}\" target=\"_blank\">Learn More</a>, and if you want to agree and continue, tap below.`\n        ),\n        legalPromptAccept: `I agree`,\n        legalPromptReject: `Dismiss`,\n        legalPromptTermsOfService: `Terms of Service`,\n        legalPromptVariantGMessage: `This feature uses information about face(s), hands and voice(s) detected by the camera and microphone to work. With this feature, you can apply fun and useful augmented reality effects on top of selfies and images. Our camera uses technology to locate certain features (like where your hands, eyes and nose are) and uses that information to accurately position the feature with the image sensed by the camera. Any information that is collected will be deleted as soon as possible (typically soon after the app is closed) and always within no more than three years.<br/><br/>If you want to agree and continue, tap below.`,\n        legalPromptVariantGAdultOrChild: `Are you an adult or child?`,\n        legalPromptVariantGFindYourParent: `Please find your parent or legal guardian.`,\n        legalPromptVariantGIAmGuardian: `I am the child\\’s guardian`,\n        legalPromptVariantGCancel: `Cancel`,\n        legalPromptVariantGAdult: `Adult`,\n        legalPromptVariantGChild: `Child`,\n    },\n\n    es: {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Al usar Lentes, confirmas que leíste la <a href=\"${0}\" target=\"_blank\">Política de privacidad</a> de Snap y aceptas las <a href=\"${0}\" target=\"_blank\">Condiciones de servicio</a>. Algunos Lentes funcionan usando información acerca de tu cara, tus manos y tu voz. <a href=\"${0}\" target=\"_blank\">Obtén más información</a> y, si quieres aceptar y continuar, toca a continuación.`\n        ),\n        legalPromptAccept: `Acepto`,\n        legalPromptReject: `Ignorar`,\n        legalPromptTermsOfService: `Condiciones de servicio`,\n        legalPromptVariantGMessage: `Esta función utiliza información sobre caras, manos y voces detectadas por la cámara y el micrófono para funcionar. Con esta función, puedes aplicar divertidos y útiles efectos de realidad aumentada sobre selfies e imágenes. Nuestra cámara utiliza tecnología para localizar ciertos rasgos (como dónde están las manos, los ojos y la nariz) y utiliza dicha información para posicionar correctamente el rasgo sobre la imagen detectada por la cámara. Toda la información recopilada se eliminará tan pronto como sea posible (por lo general, poco después de que se cierre la app), siempre en un plazo menor a tres años.<br/><br/>Para aceptar y continuar, toca a continuación.`,\n        legalPromptVariantGAdultOrChild: `¿Eres mayor o menor de edad?`,\n        legalPromptVariantGFindYourParent: `Busca a tu padre, madre o tutor legal.`,\n        legalPromptVariantGIAmGuardian: `Soy el tutor legal del menor`,\n        legalPromptVariantGCancel: `Cancelar`,\n        legalPromptVariantGAdult: `Mayor de edad`,\n        legalPromptVariantGChild: `Menor de edad`,\n    },\n\n    \"es-AR\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Al usar los Lentes, confirmás que leíste la <a href=\"${0}\" target=\"_blank\">Política de privacidad</a> de Snap y que aceptás sus <a href=\"${0}\" target=\"_blank\">Condiciones de servicio</a>. Algunos Lentes usan información sobre tu cara, tus manos y tu voz para funcionar. <a href=\"${0}\" target=\"_blank\">Obtené más información</a>, y si querés aceptar y continuar, tocá el botón que aparece más abajo.`\n        ),\n        legalPromptAccept: `Acepto`,\n        legalPromptReject: `Omitir`,\n        legalPromptTermsOfService: `Condiciones de servicio`,\n        legalPromptVariantGMessage: `Esta función utiliza la información sobre caras, manos y voces detectadas por la cámara y el micrófono. Con esta función, podés aplicar divertidos y útiles efectos de realidad aumentada sobre selfies e imágenes. Nuestra cámara utiliza tecnología para localizar ciertos rasgos (como dónde están las manos, los ojos y la nariz) y utiliza esa información para posicionar con precisión el rasgo con la imagen detectada por la cámara. Toda la información recopilada se eliminará lo antes posible (normalmente poco después de cerrar la aplicación) y siempre en un plazo máximo de tres años.<br/><br/>Si deseas aceptar y continuar, tocá a continuación.`,\n        legalPromptVariantGAdultOrChild: `¿Sos mayor o menor de edad?`,\n        legalPromptVariantGFindYourParent: `Buscá a tu padre, madre o tutor legal.`,\n        legalPromptVariantGIAmGuardian: `Soy el tutor legal del menor`,\n        legalPromptVariantGCancel: `Cancelar`,\n        legalPromptVariantGAdult: `Mayor de edad`,\n        legalPromptVariantGChild: `Menor de edad`,\n    },\n\n    \"es-ES\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Al usar las Lentes, reconoces haber leído la <a href=\"${0}\" target=\"_blank\">Política de privacidad</a> y aceptas los <a href=\"${0}\" target=\"_blank\">Términos del servicio</a> de Snap. Algunas Lentes funcionan utilizando información de tu cara, tus manos o tu voz. Puedes obtener <a href=\"${0}\" target=\"_blank\">más información</a>, y si quieres aceptar y continuar, toca el botón a continuación.`\n        ),\n        legalPromptAccept: `Acepto`,\n        legalPromptReject: `Descartar`,\n        legalPromptTermsOfService: `Términos del servicio`,\n        legalPromptVariantGMessage: `Para su funcionamiento, esta función hace uso de los datos sobre la cara, las manos y las voces detectados por la cámara y el micrófono. Con ella, puedes aplicar efectos de realidad aumentada, tanto útiles como divertidos, en selfies e imágenes. Nuestra cámara utiliza la tecnología para localizar determinados elementos (como la posición de las manos, los ojos o la nariz) y utiliza esta información para colocar el elemento sobre la imagen de forma fiel, según lo detectado por la cámara. Cualquier información que se recopile se eliminará lo antes posible (normalmente, al cerrar la aplicación) y nunca se almacenará durante más de tres años.<br/><br/>Si quieres aceptar y continuar, toca a continuación.`,\n        legalPromptVariantGAdultOrChild: `¿Eres una persona adulta o eres menor?`,\n        legalPromptVariantGFindYourParent: `Habla con tu padre, madre o tutor/a legal.`,\n        legalPromptVariantGIAmGuardian: `Soy el tutor o tutora legal del menor`,\n        legalPromptVariantGCancel: `Cancelar`,\n        legalPromptVariantGAdult: `Adulto`,\n        legalPromptVariantGChild: `Menor`,\n    },\n\n    \"es-MX\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Al usar Lentes, confirmas que leíste la <a href=\"${0}\" target=\"_blank\">Política de privacidad</a> y aceptas los <a href=\"${0}\" target=\"_blank\">Términos y condiciones de servicio</a> de Snap. Algunos lentes usan información sobre tu cara, manos o voz para funcionar. <a href=\"${0}\" target=\"_blank\">Obtén más información</a> y, si quieres aceptarlo, toca a continuación.`\n        ),\n        legalPromptAccept: `Acepto`,\n        legalPromptReject: `Ignorar`,\n        legalPromptTermsOfService: `Términos y condiciones de servicio`,\n        legalPromptVariantGMessage: `Esta característica utiliza información sobre la(s) cara(s), manos y voz o voces detectadas por la cámara y el micrófono para funcionar. Con ella, puedes aplicar efectos de realidad aumentada útiles y divertidos a selfies e imágenes. Nuestra cámara usa tecnología para localizar ciertos rasgos (como dónde están tus manos, ojos y nariz) y utiliza esa información para posicionar con precisión esta característica con la imagen que la cámara percibió. Toda la información que se recopile se eliminará lo más pronto posible (por lo general, poco después de cerrar la app) y nunca excederá los tres días.<br/><br/>Si quieres aceptar y proseguir, toca a continuación.`,\n        legalPromptVariantGAdultOrChild: `¿Eres mayor o menor de edad?`,\n        legalPromptVariantGFindYourParent: `Busca a tu madre, padre o quien tenga tu custodia legal.`,\n        legalPromptVariantGIAmGuardian: `Tengo la custodia de la persona menor`,\n        legalPromptVariantGCancel: `Cancelar`,\n        legalPromptVariantGAdult: `Persona adulta`,\n        legalPromptVariantGChild: `Persona menor`,\n    },\n\n    \"fi-FI\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Käyttämällä tehosteita ilmaiset lukeneesi Snapin <a href=\"${0}\" target=\"_blank\">tietosuojaselosteen</a> ja hyväksyväsi Snapin <a href=\"${0}\" target=\"_blank\">palveluehdot</a>. Jotkin tehosteet käyttävät toimintaan tietoja kasvoistasi, käsistäsi ja äänestäsi. <a href=\"${0}\" target=\"_blank\">Lisätietoja saat täältä</a>. Hyväksy ja jatka napauttamalla alla olevaa painiketta.`\n        ),\n        legalPromptAccept: `Hyväksyn`,\n        legalPromptReject: `Hylkää`,\n        legalPromptTermsOfService: `Palveluehdot`,\n        legalPromptVariantGMessage: `Tämä ominaisuus käyttää toimiakseen tietoja kameran ja mikrofonin havaitsemista kasvoista, käsistä ja äänistä. Ominaisuudella voit lisätä hauskoja ja hyödyllisiä lisätyn todellisuuden efektejä selfieiden ja kuvien päälle. Kameramme käyttää teknologiaa tiettyjen piirteiden paikallistamiseen (kuten käsiesi, silmiesi ja nenäsi sijaintiin) ja käyttää näitä tietoja ominaisuuden asettamiseen oikeaan kohtaan kameran havaitsemassa kuvassa. Kaikki kerätyt tiedot poistetaan mahdollisimman pian (yleensä pian sovelluksen sulkemisen jälkeen) ja aina viimeistään kolmen vuoden kuluttua.<br/><br/>Jos haluat hyväksyä ja jatkaa, napauta painiketta alla. `,\n        legalPromptVariantGAdultOrChild: `Oletko aikuinen vai lapsi?`,\n        legalPromptVariantGFindYourParent: `Etsi vanhempasi tai huoltajasi.`,\n        legalPromptVariantGIAmGuardian: `Olen lapsen huoltaja`,\n        legalPromptVariantGCancel: `Peruuta`,\n        legalPromptVariantGAdult: `Aikuinen`,\n        legalPromptVariantGChild: `Lapsi`,\n    },\n\n    \"fil-PH\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Sa pamamagitan ng paggamit sa Lenses, kinikilala mong binasa mo ang <a href=\"${0}\" target=\"_blank\">Privacy Policy</a> ng Snap at sumasang-ayon ka sa <a href=\"${0}\" target=\"_blank\">Terms of Service</a> ng Snap. Ang ilang lens ay gumagamit ng impormasyon tungkol sa iyong mukha , mga kamay at boses para gumana. <a href=\"${0}\" target=\"_blank\">Alamin Pa</a>, at kung gusto mong sumang-ayon at magpatuloy, mag-tap sa ibaba.`\n        ),\n        legalPromptAccept: `Sang-ayon Ako`,\n        legalPromptReject: `I-dismiss`,\n        legalPromptTermsOfService: `Terms of Service`,\n        legalPromptVariantGMessage: `Ang feature na ito ay gumagamit ng impormasyon tungkol sa (mga) mukha, mga kamay at (mga) boses na nade-detect ng camera at microphone para gumana ito. Gamit ang feature na ito, pwede kang mag-apply ng nakakatuwa at kapaki-pakinabang na augmented reality effects sa ibabaw ng mga selfie at image. Gumagamit ang camera namin ng technology para matukoy ang mga partikular na anyo (tulad ng kung nasaan ang iyong mga kamay, mga mata, at ilong) at ginagamit nito ang impormasyong iyon para eksaktong mapwesto ang anyong iyon sa image na nase-sense ng camera. Ang anumang impormasyong kinokolekta ay ide-delete sa lalong madaling panahon (karaniwan ay maikling panahon lang matapos isara ang app) at palaging hindi lalampas nang tatlong taon.<br/><br/>Kung gusto mong sumang-ayon at magpatuloy, mag-tap sa ibaba.`,\n        legalPromptVariantGAdultOrChild: `Isa ka bang adult o bata?`,\n        legalPromptVariantGFindYourParent: `Pakihanap ang iyong magulang o legal guardian.`,\n        legalPromptVariantGIAmGuardian: `Ako ang guardian ng bata`,\n        legalPromptVariantGCancel: `I-cancel`,\n        legalPromptVariantGAdult: `Adult`,\n        legalPromptVariantGChild: `Bata`,\n    },\n\n    \"fr-FR\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`En utilisant les Lenses, vous reconnaissez avoir lu la <a href=\"${0}\" target=\"_blank\">Politique de confidentialité</a> de Snap et vous acceptez les <a href=\"${0}\" target=\"_blank\">Conditions d\\'utilisation du service</a> de Snap. Le fonctionnement de certaines Lenses requiert l\\'utilisation d\\'informations sur votre visage, vos mains et votre voix. <a href=\"${0}\" target=\"_blank\">En savoir plus</a>. Si vous acceptez ces conditions et souhaitez continuer, appuyez ci-dessous.`\n        ),\n        legalPromptAccept: `J\\'accepte`,\n        legalPromptReject: `Ignorer`,\n        legalPromptTermsOfService: `Conditions d\\'utilisation du service`,\n        legalPromptVariantGMessage: `Pour fonctionner, cette fonctionnalité utilise des informations sur le ou les visages, les mains et la ou les voix détectés par l\\'appareil photo et le micro. Elle vous permet d\\'appliquer des effets en réalité augmentée amusants et utiles sur vos selfies et vos images. Notre appareil photo utilise une technologie qui localise certaines caractéristiques (comme l\\'emplacement de vos mains, de vos yeux et de votre nez) afin de positionner avec précision la fonctionnalité sur l\\'image détectée par l\\'appareil photo. Toutes les informations collectées sont supprimées dès que possible (généralement peu après la fermeture de l\\'application) et toujours dans un délai maximum de trois ans.<br/><br/>Si vous souhaitez accepter et continuer, appuyez ci-dessous.`,\n        legalPromptVariantGAdultOrChild: `Êtes-vous adulte ou mineur ?`,\n        legalPromptVariantGFindYourParent: `Veuillez appeler votre parent ou votre tuteur·rice.`,\n        legalPromptVariantGIAmGuardian: `Je suis le ou la tuteur·rice de l\\'enfant.`,\n        legalPromptVariantGCancel: `Annuler`,\n        legalPromptVariantGAdult: `Adulte`,\n        legalPromptVariantGChild: `Mineur`,\n    },\n\n    \"gu-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`લેન્સનો ઉપયોગ કરીને, તમે સ્વીકારો છો કે તમે Snapની <a href=\"${0}\" target=\"_blank\">પ્રાઇવસી પોલિસી</a> વાંચી છે અને Snapની <a href=\"${0}\" target=\"_blank\">સેવાની શરતો</a> સાથે સંમત છો. કેટલાક લેન્સ કામ કરી શકે તે માટે તે તમારા ચહેરા, હાથ અને અવાજનો ઉપયોગ કરે છે. <a href=\"${0}\" target=\"_blank\">વધુ જાણો</a>, અને જો તમે સંમત થવા માંગતા હો, તો નીચે ટૅપ કરો.`\n        ),\n        legalPromptAccept: `હું સંમત છું`,\n        legalPromptReject: `બરતરફ કરો`,\n        legalPromptTermsOfService: `સેવાની શરતો`,\n        legalPromptVariantGMessage: `આ સુવિધા કામ કરી શકે તે માટે કૅમેરા અને માઇક્રોફોન દ્વારા શોધાયેલા ચહેરા(ઓ), હાથ અને અવાજ(જો) વિશેની માહિતીનો ઉપયોગ કરે છે. આ સુવિધા સાથે તમે સેલ્ફી અને ઇમેજની ઉપર મજેદાર અને ઉપયોગી ઑગ્મેંટેડ રિયાલીટી ઇફેક્ટ લાગુ કરી શકો છો. અમારા કૅમેરા અમુક લક્ષણો (જેમ કે તમારા હાથ, આંખો અને નાક ક્યાં છે તે)નું સ્થાન જાણવા માટે ટેક્નોલોજીનો ઉપયોગ કરે છે અને તે માહિતીનો ઉપયોગ તે લક્ષણને કૅમેરા દ્વારા શોધાયેલ ઇમેજ સાથે સ્થિત કરવા માટે કરે છે. એકત્રિત કરેલી કોઈ પણ માહિતી શક્ય તેટલી વહેલી તકે (સામાન્ય રીતે ઍપ બંધ કરવામાં આવે પછી તરત) અને હંમેશાં ત્રણ દિવસની અંદર ડિલીટ કરવામાં આવશે.<br/><br/>જો તમે સંમત થવા અને ચાલુ રાખવા માંગતા હો, તો નીચે ટૅપ કરો.`,\n        legalPromptVariantGAdultOrChild: `તમે વયસ્ક છો કે બાળક?`,\n        legalPromptVariantGFindYourParent: `કૃપા કરીને તમારા માતા-પિતા અથવા કાનૂની વાલીને શોધો.`,\n        legalPromptVariantGIAmGuardian: `હું બાળકના વાલી છું.`,\n        legalPromptVariantGCancel: `રદ કરો`,\n        legalPromptVariantGAdult: `વયસ્ક`,\n        legalPromptVariantGChild: `બાળક`,\n    },\n\n    \"hi-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`लेंस का इस्तेमाल करके, आप स्वीकार करते हैं कि आपने Snap की <a href=\"${0}\" target=\"_blank\">गोपनीयता नीति</a> को पढ़ लिया है और आप Snap की <a href=\"${0}\" target=\"_blank\">सेवा शर्तों</a> से सहमत हैं। कुछ लेंस काम करने के लिए आपके चेहरे, हाथों और आवाज़ का इस्तेमाल करते हैं। <a href=\"${0}\" target=\"_blank\">और जानें</a>, और अगर आप सहमत होते हैं और जारी रखना चाहते हैं, तो नीचे टैप करें।`\n        ),\n        legalPromptAccept: `मैं सहमत हूं`,\n        legalPromptReject: `खारिज करें`,\n        legalPromptTermsOfService: `सेवा शर्तें`,\n        legalPromptVariantGMessage: `यह फ़ीचर काम करने के लिए कैमरा और माइक्रोफ़ोन द्वारा फ़ेस, हाथों और आवाज़(जों) के बारे में पहचानी गई जानकारी का इस्तेमाल करता है। इस फ़ीचर की मदद से आप सेल्फ़ी और इमेज के ऊपर मज़ेदार और उपयोगी ऑगमेंटेड रिएलिटी इफ़ेक्ट्स डाल सकते हैं। हमारा कैमरा कुछ फ़ीचर्स (जैसे कि, आपके हाथ, आंख और नाक की जगह) का पता लगाने के लिए टेक्नॉलॉजी का इस्तेमाल करता है और उस जानकारी के इस्तेमाल से खुद महसूस की गई इमेज पर फ़ीचर को सटीक जगह पर लाया जाता है। इकठ्ठा की गई किसी भी जानकारी को जल्द से जल्द (आमतौर पर ऐप बंद करते ही) और तीन सालों के अंदर हमेशा के लिए डिलीट कर दिया जाएगा।<br/><br/>अगर आप सहमत हैं और जारी रखना चाहते हैं, तो नीचे टैप करें।`,\n        legalPromptVariantGAdultOrChild: `क्या आप बच्चे हैं या व्यस्क?`,\n        legalPromptVariantGFindYourParent: `प्लीज़ अपने माता-पिता या कानूनी गार्जियन का पता लगाएं।`,\n        legalPromptVariantGIAmGuardian: `मैं बच्चे का गार्जियन हूं`,\n        legalPromptVariantGCancel: `रद्द करें`,\n        legalPromptVariantGAdult: `वयस्क`,\n        legalPromptVariantGChild: `बच्चा`,\n    },\n\n    \"id-ID\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Dengan menggunakan Lensa, kamu menyatakan bahwa kamu sudah membaca <a href=\"${0}\" target=\"_blank\">Kebijakan Privasi</a> Snap dan menyetujui <a href=\"${0}\" target=\"_blank\">Ketentuan Layanan</a> Snap. Beberapa lensa menggunakan informasi tentang wajah, tangan, dan suaramu agar bisa berfungsi dengan baik. <a href=\"${0}\" target=\"_blank\">Pelajari Selengkapnya</a>, dan silakan ketuk tombol di bawah jika kamu ingin menyetujuinya dan melanjutkan.`\n        ),\n        legalPromptAccept: `Saya setuju`,\n        legalPromptReject: `Tutup`,\n        legalPromptTermsOfService: `Ketentuan Layanan`,\n        legalPromptVariantGMessage: `Agar bisa berfungsi, fitur ini menggunakan informasi terkait wajah, tangan, dan suara yang dideteksi oleh kamera serta mikrofon. Dengan fitur ini, efek augmented reality yang menyenangkan dan berguna dapat diterapkan ke selfie dan gambar. Kamera kami menggunakan teknologi untuk menemukan lokasi fitur tertentu (misalnya menemukan bagian tangan, mata, dan hidung), lalu menggunakan informasi tersebut untuk menempatkan fitur secara akurat di gambar yang dideteksi oleh kamera. Informasi apa pun yang dikumpulkan akan segera dihapus (biasanya setelah aplikasi ditutup) dan selalu disimpan tidak lebih dari tiga tahun.<br/><br/>Jika ingin menyetujui dan melanjutkan, ketuk tombol di bawah ini.`,\n        legalPromptVariantGAdultOrChild: `Apakah kamu orang dewasa atau anak-anak?`,\n        legalPromptVariantGFindYourParent: `Panggil orang tua atau wali resmi.`,\n        legalPromptVariantGIAmGuardian: `Saya wali si anak`,\n        legalPromptVariantGCancel: `Batal`,\n        legalPromptVariantGAdult: `Orang Dewasa`,\n        legalPromptVariantGChild: `Anak-Anak`,\n    },\n\n    \"it-IT\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Usando le Lenti, confermi di aver letto l\\'<a href=\"${0}\" target=\"_blank\">Informativa sulla Privacy</a> di Snap Inc. e di accettare i <a href=\"${0}\" target=\"_blank\">Termini di Servizio</a> di Snap Inc. Alcune Lenti utilizzano informazioni sul tuo viso, le tue mani e la tua voce per funzionare. <a href=\"${0}\" target=\"_blank\">Scopri di più</a> e, se sei d\\'accordo e vuoi continuare, tocca qui sotto.`\n        ),\n        legalPromptAccept: `Accetto`,\n        legalPromptReject: `Ignora`,\n        legalPromptTermsOfService: `Termini di Servizio`,\n        legalPromptVariantGMessage: `Questa funzionalità utilizza le informazioni su viso, mani e voce rilevate dalla fotocamera e dal microfono per funzionare. Ti consente di applicare effetti in realtà aumentata divertenti e utili ai selfie e alle immagini. La nostra Fotocamera sfrutta una tecnologia specifica per individuare certe parti del corpo (ad esempio mani, occhi e naso) e usa questi dati per posizionarle in modo accurato sull\\'immagine rilevata. Qualsiasi informazione raccolta viene eliminata appena possibile (di solito poco dopo la chiusura dell\\'app) e, in ogni caso, entro 3 anni.<br/><br/>Se sei d\\'accordo e vuoi continuare, tocca qui sotto.`,\n        legalPromptVariantGAdultOrChild: `Sei un adulto o un minore?`,\n        legalPromptVariantGFindYourParent: `C\\'è bisogno di un genitore o tutore legale.`,\n        legalPromptVariantGIAmGuardian: `Sono il tutore del minore`,\n        legalPromptVariantGCancel: `Annulla`,\n        legalPromptVariantGAdult: `Adulto`,\n        legalPromptVariantGChild: `Minore`,\n    },\n\n    \"ja-JP\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`レンズを使用することにより、Snap社の<a href=\"${0}\" target=\"_blank\">プライバシーポリシー</a>を読み、<a href=\"${0}\" target=\"_blank\">利用規約</a>に同意したことになります。レンズの中には、あなたの顔や手、声の情報を利用するものがあります。<a href=\"${0}\" target=\"_blank\">詳細はこちらからご覧いただき</a>、同意して利用を継続する場合には下をタップしてください。`\n        ),\n        legalPromptAccept: `同意します`,\n        legalPromptReject: `閉じる`,\n        legalPromptTermsOfService: `利用規約`,\n        legalPromptVariantGMessage: `この機能はカメラとマイクを使って検知した顔や手、声の情報を利用します。この機能で、自撮りや画像に楽しく便利な拡張現実の効果を適用できます。Snapのカメラは特定の特徴（例えばあなたの手や目、鼻などの位置）をとらえるテクノロジーを使用し、その情報を利用してカメラによって感知した画像に特徴を適用します。収集した情報はいずれもすぐに消去され（通常アプリが閉じられてからすぐ）、3年を超えて保存されることはありません。<br/><br/>同意して続行するには下記をタップしてください。`,\n        legalPromptVariantGAdultOrChild: `大人ですか、子どもですか？`,\n        legalPromptVariantGFindYourParent: `親または保護者を探してください。`,\n        legalPromptVariantGIAmGuardian: `私はその子供の保護者です`,\n        legalPromptVariantGCancel: `キャンセル`,\n        legalPromptVariantGAdult: `大人`,\n        legalPromptVariantGChild: `子ども`,\n    },\n\n    \"kn-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`ಲೆನ್ಸ್‌ಗಳನ್ನು ಬಳಸುವ ಮೂಲಕ, Snap ನ <a href=\"${0}\" target=\"_blank\">ಗೌಪ್ಯತಾ ನೀತಿ</a> ಅನ್ನು ನೀವು ಓದಿದ್ದೀರಿ ಎಂದು ಅಂಗೀಕರಿಸುತ್ತೀರಿ ಮತ್ತು Snap ನ <a href=\"${0}\" target=\"_blank\">ಸೇವೆಯ ನಿಯಮಗಳು</a> ಅನ್ನು ಒಪ್ಪುತ್ತೀರಿ. ಕೆಲವು ಲೆನ್ಸ್‌ಗಳು ಕಾರ್ಯನಿರ್ವಹಿಸಲು ನಿಮ್ಮ ಮುಖ, ಕೈಗಳು ಮತ್ತು ಧ್ವನಿಯ ಮಾಹಿತಿಯನ್ನು ಬಳಸುತ್ತವೆ. <a href=\"${0}\" target=\"_blank\">ಇನ್ನಷ್ಟು ತಿಳಿಯಿರಿ</a>, ಹಾಗೂ ಒಂದು ವೇಳೆ ನೀವು ಒಪ್ಪಿ ಮುಂದುವರಿಯಲು ಬಯಸಿದರೆ, ಕೆಳಗೆ ಟ್ಯಾಪ್ ಮಾಡಿ.`\n        ),\n        legalPromptAccept: `ನಾನು ಒಪ್ಪುತ್ತೇನೆ`,\n        legalPromptReject: `ವಜಾಮಾಡಿ`,\n        legalPromptTermsOfService: `ಸೇವೆಯ ನಿಯಮಗಳು`,\n        legalPromptVariantGMessage: `ಈ ವೈಶಿಷ್ಟ್ಯವು ಕಾರ್ಯನಿರ್ವಹಿಸಲು ಕ್ಯಾಮರಾ ಮತ್ತು ಮೈಕ್ರೊಫೋನ್‌ನಿಂದ ಪತ್ತೆಯಾದ ಮುಖ(ಗಳು), ಕೈಗಳು ಮತ್ತು ಧ್ವನಿ(ಗಳು) ಕುರಿತು ಮಾಹಿತಿಯನ್ನು ಬಳಸುತ್ತದೆ. ಈ ವೈಶಿಷ್ಟ್ಯದೊಂದಿಗೆ, ನೀವು ಸೆಲ್ಫಿಗಳು ಮತ್ತು ಚಿತ್ರಗಳ ಮೇಲೆ ವಿನೋದ ಮತ್ತು ಉಪಯುಕ್ತ ಆಗ್ಮೆಂಟೆಡ್‌ ರಿಯಾಲಿಟಿ ಪರಿಣಾಮಗಳನ್ನು ಅನ್ವಯಿಸಬಹುದು. ನಮ್ಮ ಕ್ಯಾಮರಾ ಕೆಲವು ವೈಶಿಷ್ಟ್ಯಗಳನ್ನು (ನಿಮ್ಮ ಕೈಗಳು, ಕಣ್ಣುಗಳು ಮತ್ತು ಮೂಗು ಎಲ್ಲಿದೆ ಎಂದು) ಪತ್ತೆಹಚ್ಚಲು ತಂತ್ರಜ್ಞಾನವನ್ನು ಬಳಸುತ್ತದೆ ಮತ್ತು ಕ್ಯಾಮರಾದಿಂದ ಗ್ರಹಿಸಲ್ಪಟ್ಟ ಚಿತ್ರದೊಂದಿಗೆ ವೈಶಿಷ್ಟ್ಯವನ್ನು ನಿಖರವಾಗಿ ಇರಿಸಲು ಆ ಮಾಹಿತಿಯನ್ನು ಬಳಸುತ್ತದೆ. ಸಂಗ್ರಹಿಸಿದ ಯಾವುದೇ ಮಾಹಿತಿಯನ್ನು ಸಾಧ್ಯವಾದಷ್ಟು ಬೇಗ ಅಳಿಸಲಾಗುತ್ತದೆ (ಸಾಮಾನ್ಯವಾಗಿ ಆ್ಯಪ್‌ ಅನ್ನು ಮುಚ್ಚಿದ ನಂತರ) ಮತ್ತು ಎಂದಿಗೂ ಮೂರು ವರ್ಷಗಳ ನಂತರ ಇರಿಸಿಕೊಳ್ಳಲಾಗುವುದಿಲ್ಲ. <br/><br/> ನೀವು ಒಪ್ಪಿಕೊಳ್ಳಲು ಮತ್ತು ಮುಂದುವರಿಸಲು ಬಯಸಿದರೆ, ಕೆಳಗೆ ಟ್ಯಾಪ್ ಮಾಡಿ.`,\n        legalPromptVariantGAdultOrChild: `ನೀವು ವಯಸ್ಕರೇ ಅಥವಾ ಮಗುವೇ?`,\n        legalPromptVariantGFindYourParent: `ದಯವಿಟ್ಟು ನಿಮ್ಮ ಪೋಷಕರು ಅಥವಾ ಕಾನೂನು ಪಾಲಕರನ್ನು ಹುಡುಕಿ.`,\n        legalPromptVariantGIAmGuardian: `ನಾನು ಮಗುವಿನ ಪೋಷಕ`,\n        legalPromptVariantGCancel: `ರದ್ದುಮಾಡಿ`,\n        legalPromptVariantGAdult: `ವಯಸ್ಕ`,\n        legalPromptVariantGChild: `ಮಗು`,\n    },\n\n    \"ko-KR\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`렌즈를 사용하면 Snap의 <a href=\"${0}\" target=\"_blank\">개인정보 보호정책</a>을 읽고 Snap의 <a href=\"${0}\" target=\"_blank\">이용 약관</a>에 동의하는 것으로 간주됩니다. 일부 렌즈는 회원님의 얼굴, 손 및 목소리 정보를 사용합니다. <a href=\"${0}\" target=\"_blank\">자세히 알아보고</a>, 동의 및 계속하려면 아래를 누르세요.`\n        ),\n        legalPromptAccept: `동의함`,\n        legalPromptReject: `취소`,\n        legalPromptTermsOfService: `이용 약관`,\n        legalPromptVariantGMessage: `이 기능은 카메라와 마이크가 감지한 얼굴, 손, 음성에 대한 정보를 사용하여 작동합니다. 이 기능을 사용하면 셀카 및 이미지에 재미있고 유용한 증강 현실 효과를 적용할 수 있습니다. Snapchat 카메라는 특정 특징(예: 손, 눈 및 코의 위치)을 찾아내는 기술을 사용하며, 해당 정보를 바탕으로 카메라가 감지한 이미지에서 특징의 위치를 정확하게 파악합니다. 수집된 모든 정보는 가능한 한 빨리(일반적으로 앱 종료 직후) 삭제되며, 항상 3년 이내에 삭제됩니다.<br/><br/>동의하고 계속하려면 아래를 누르세요.`,\n        legalPromptVariantGAdultOrChild: `성인인가요, 아동인가요?`,\n        legalPromptVariantGFindYourParent: `부모님 또는 법적 보호자와 함께 진행하세요.`,\n        legalPromptVariantGIAmGuardian: `아동의 보호자입니다`,\n        legalPromptVariantGCancel: `취소`,\n        legalPromptVariantGAdult: `성인`,\n        legalPromptVariantGChild: `아동`,\n    },\n\n    \"ml-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`ലെൻസുകൾ ഉപയോഗിക്കുന്നതിലൂടെ നിങ്ങൾ Snap-ന്റെ <a href=\"${0}\" target=\"_blank\">സ്വകാര്യതാ നയം</a> വായിച്ചുവെന്ന് സമ്മതിക്കുകയും Snap-ന്റെ <a href=\"${0}\" target=\"_blank\">സേവന നിബന്ധനകൾ</a> അംഗീകരിക്കുകയും ചെയ്യുന്നു. പ്രവർത്തിക്കുന്നതിന് ചില ലെൻസുകൾ നിങ്ങളുടെ മുഖം, കൈകൾ, ശബ്ദം എന്നിവയേക്കുറിച്ചുള്ള വിവരങ്ങൾ ഉപയോഗിക്കുന്നു. <a href=\"${0}\" target=\"_blank\">കൂടുതലറിയുക</a>, അംഗീകരിച്ച് തുടരണമെങ്കിൽ ചുവടെ ടാപ്പ് ചെയ്യുക.`\n        ),\n        legalPromptAccept: `ഞാൻ അംഗീകരിക്കുന്നു`,\n        legalPromptReject: `ഡിസ്‌മിസ് ചെയ്യുക`,\n        legalPromptTermsOfService: `സേവന വ്യവസ്ഥകൾ`,\n        legalPromptVariantGMessage: `ഈ ആപ്പ് അതിന്റെ പ്രവർത്തനത്തിന്, ക്യാമറയും മൈക്രോഫോണും കണ്ടെത്തുന്ന മുഖം(ങ്ങൾ), കൈകളും ശബ്ദവും(ങ്ങളും) എന്നിവയുമായി ബന്ധപ്പെട്ട വിവരങ്ങൾ ഉപയോഗിക്കുന്നു. ഈ ഫീച്ചർ ഉപയോഗിച്ച് നിങ്ങളുടെ സെൽഫികൾക്കും ചിത്രങ്ങൾക്കും മുകളിൽ, ഉപയോഗപ്രദമായ ഓഗ്‌മെന്റഡ് റിയാലിറ്റി ഇഫക്റ്റുകൾ നൽകാനാകും. ഞങ്ങളുടെ ക്യാമറ ചില ഫീച്ചറുകൾ ലൊക്കേറ്റ് ചെയ്യാൻ (ഉദാഹരണത്തിന് നിങ്ങളുടെ കൈകൾ, കണ്ണുകൾ, മൂക്ക് എന്നിവ എവിടെയാണ്) സാങ്കേതികവിദ്യ ഉപയോഗിക്കുന്നു, ക്യാമറ സെൻസ് ചെയ്ത ചിത്രത്തിൽ ഈ ഫീച്ചർ കൃത്യമായി പൊസിഷൻ ചെയ്യാൻ ഈ വിവരങ്ങൾ ഉപയോഗിക്കുകയും ചെയ്യുന്നു. ശേഖരിക്കുന്ന എല്ലാ വിവരങ്ങളും എത്രയും വേഗവും (സാധാരണയായി ആപ്പ് അടച്ചാൽ ഉടൻ) മൂന്ന് വർഷത്തിനുള്ളിലും (എല്ലായ്‌പ്പോഴും) ഇല്ലാതാക്കുന്നു.<br/><br/>അംഗീകരിച്ച് തുടരണമെന്നുണ്ടെങ്കിൽ ചുവടെ ടാപ്പ് ചെയ്യുക.`,\n        legalPromptVariantGAdultOrChild: `നിങ്ങൾ ഒരു കുട്ടിയാണോ അതോ മുതിർന്ന വ്യക്തിയാണോ?`,\n        legalPromptVariantGFindYourParent: `നിങ്ങളുടെ രക്ഷിതാവിനെയോ നിയമപരമായ രക്ഷിതാവിനെയോ കണ്ടെത്തുക.`,\n        legalPromptVariantGIAmGuardian: `ഞാൻ കുട്ടിയുടെ നിയമപരമായ രക്ഷിതാവാണ്`,\n        legalPromptVariantGCancel: `റദ്ദാക്കുക`,\n        legalPromptVariantGAdult: `മുതിർന്നവ്യക്തി`,\n        legalPromptVariantGChild: `കുട്ടി`,\n    },\n\n    \"mr-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`लेन्सेस वापरून, तुम्ही मान्य करता की तुम्ही Snap चे <a href=\"${0}\" target=\"_blank\">गोपनीयता धोरण</a> वाचले आहे आणि Snap च्या <a href=\"${0}\" target=\"_blank\">सेवा अटींना</a> सहमती देता. काही लेन्सेस कार्य करण्यासाठी तुमचा चेहरा, हात आणि आवाज याविषयी माहिती वापरतात. <a href=\"${0}\" target=\"_blank\">अधिक जाणून घ्या</a> आणि तुम्हाला सहमती देऊन चालू ठेवायचे असल्यास खाली टॅप करा.`\n        ),\n        legalPromptAccept: `मी सहमत आहे`,\n        legalPromptReject: `दुर्लक्ष करा`,\n        legalPromptTermsOfService: `सेवा अटी`,\n        legalPromptVariantGMessage: `हे वैशिष्ट्य कार्य करण्यासाठी कॅमेरा आणि मायक्रोफोनद्वारे तपासलेली चेहरा(चेहरे), हात आणि आवाजाची माहिती वापरते. या वैशिष्ट्यासह, तुम्ही सेल्फी आणि इमेजवर मजेशीर आणि उपयोगी ऑग्मेंटेड रिॲलिटी प्रभाव लागू करू शकता. आमचा कॅमेरा काही फीचर्स (जसे की तुमचे हात, डोळे आणि नाक कुठे आहेत) शोधण्यासाठी तंत्रज्ञान वापरतो आणि कॅमेऱ्याद्वारे ओळखलेल्या इमेजसह फीचर नेमक्या ठिकाणी दाखवण्यासाठी ती माहिती वापरतो. गोळा केलेली कोणतीही माहिती शक्य तितक्या लवकर (सहसा ॲप बंद केल्यावर लगेच) आणि नेहमी तीन वर्षांच्या आत हटवली जाईल.<br/><br/>तुम्हाला सहमती देऊन पुढे चालू ठेवायचे असेल तर, खाली टॅप करा.`,\n        legalPromptVariantGAdultOrChild: `तुम्ही प्रौढ आहात किंवा लहान मूल आहात?`,\n        legalPromptVariantGFindYourParent: `कृपया तुमचे आईवडील किंवा कायदेशीर पालकांना शोधा.`,\n        legalPromptVariantGIAmGuardian: `मी मुलाचा पालक आहे`,\n        legalPromptVariantGCancel: `रद्द करा`,\n        legalPromptVariantGAdult: `प्रौढ`,\n        legalPromptVariantGChild: `मूल`,\n    },\n\n    \"ms-MY\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Dengan menggunakan Lensa, anda mengakui membaca <a href=\"${0}\" target=\"_blank\">Dasar Privasi</a> Snap dan bersetuju dengan <a href=\"${0}\" target=\"_blank\">Syarat Perkhidmatan</a> Snap. Sesetengan lensa menggunakan maklumat tentang muka anda, tangan dan suara untuk berfungsi. <a href=\"${0}\" target=\"_blank\">Ketahui Lebih Lanjut</a>, dan jika anda mahu bersetuju dan teruskan, ketik di bawah.`\n        ),\n        legalPromptAccept: `Saya Setuju`,\n        legalPromptReject: `Abaikan`,\n        legalPromptTermsOfService: `Syarat Perkhidmatan`,\n        legalPromptVariantGMessage: `Ciri ini menggunakan maklumat muka, tangan dan suara yang dikesan oleh kamera dan mikrofon untuk berfungsi. Dengan ciri ini, anda boleh menggunakan kesan realiti tambahan yang menyeronokkan dan berguna selain swafoto dan gambar. Kamera kami menggunakan teknologi untuk mengesan ciri tertentu (seperti di mana tangan, mata dan hidung anda) dan menggunakan maklumat tersebut untuk meletakkan ciri dengan tepat dengan imej yang dikesan oleh kamera. Sebarang maklumat yang dikumpul akan dipadamkan dengan segera (kebiasaannya sejurus aplikasi ditutup) dan sentiasa dalam tempoh tidak lebih daripada tiga tahun.<br/><br/>Jika anda bersetuju dan ingin teruskan, ketik dibawah.`,\n        legalPromptVariantGAdultOrChild: `Adakah anda seorang dewasa atau kanak-kanak?`,\n        legalPromptVariantGFindYourParent: `Sila cari ibu bapa atau penjaga anda yang sah.`,\n        legalPromptVariantGIAmGuardian: `Saya penjaga kanak-kanak ini`,\n        legalPromptVariantGCancel: `Batal`,\n        legalPromptVariantGAdult: `Dewasa`,\n        legalPromptVariantGChild: `Kanak-kanak`,\n    },\n\n    \"nb-NO\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Ved å ta i bruk Linser bekrefter du at du har lest <a href=\"${0}\" target=\"_blank\">personvernbetingelsene</a> og at du godtar <a href=\"${0}\" target=\"_blank\">tjenestevilkårene</a> til Snap. Noen Linser bruker informasjon om ansiktet ditt, hendene dine og stemmen din for å fungere. <a href=\"${0}\" target=\"_blank\">Finn ut mer</a>. Hvis du godtar dette og vil gå videre, klikker du nedenfor.`\n        ),\n        legalPromptAccept: `Jeg godtar`,\n        legalPromptReject: `Avvis`,\n        legalPromptTermsOfService: `Tjenestevilkår`,\n        legalPromptVariantGMessage: `Denne funksjonen bruker informasjon om ansikter, hender og stemmer som oppdages av kameraet og mikrofonen, for å fungere. Med denne funksjonen kan du legge til artige og nyttige effekter i utvidet virkelighet på selfier og bilder. Kameraet vårt bruker teknologi for å oppdage visse trekk (som hvor hendene, øynene og nesen er), og bruker denne informasjonen til å plassere funksjonen oppå bildet som kameraet har fanget opp. All informasjon som samles inn, blir slettet så snart som mulig (vanligvis rett etter at appen lukkes) og alltid innen maks tre år.<br/><br/>Hvis du ønsker å godta og fortsette, trykker du nedenfor.`,\n        legalPromptVariantGAdultOrChild: `Er du en voksen eller et barn?`,\n        legalPromptVariantGFindYourParent: `Finn en forelder eller foresatt.`,\n        legalPromptVariantGIAmGuardian: `Jeg er barnets foresatt`,\n        legalPromptVariantGCancel: `Avbryt`,\n        legalPromptVariantGAdult: `Voksen`,\n        legalPromptVariantGChild: `Barn`,\n    },\n\n    \"nl-NL\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Door Lenzen te gebruiken, geef je aan dat je het <a href=\"${0}\" target=\"_blank\">Privacybeleid</a> van Snap hebt gelezen en dat je akkoord gaat met de <a href=\"${0}\" target=\"_blank\">Servicevoorwaarden</a> van Snap. Sommige Lenzen gebruiken informatie over je gezicht, handen en stem om te functioneren. Lees <a href=\"${0}\" target=\"_blank\">meer informatie</a> en tik hieronder als je akkoord gaat en wilt doorgaan.`\n        ),\n        legalPromptAccept: `Ik ga akkoord`,\n        legalPromptReject: `Annuleren`,\n        legalPromptTermsOfService: `Servicevoorwaarden`,\n        legalPromptVariantGMessage: `Voor de werking van deze functie wordt informatie over gezicht(en), handen en stem(men) gebruikt die door camera en microfoon worden gedetecteerd. Je kunt met deze functie leuke en nuttige augmented reality-effecten op selfies en afbeeldingen plaatsen. Onze camera gebruikt technologie om de locatie te bepalen van bepaalde kenmerken (bijvoorbeeld waar je handen, ogen en neus zich bevinden) en gebruikt die informatie om het kenmerk nauwkeurig te positioneren in de afbeelding die is gedetecteerd met de camera. De verzamelde informatie wordt zo snel mogelijk verwijderd (gewoonlijk kort nadat de app is gesloten) en altijd binnen een periode van maximaal drie jaar.<br/><br/>Tik hieronder als je hiermee akkoord gaat en wilt doorgaan.`,\n        legalPromptVariantGAdultOrChild: `Ben je een volwassene of een kind?`,\n        legalPromptVariantGFindYourParent: `Vraag toestemming aan een ouder of wettelijke voogd.`,\n        legalPromptVariantGIAmGuardian: `Ik ben de voogd van het kind`,\n        legalPromptVariantGCancel: `Annuleren`,\n        legalPromptVariantGAdult: `Volwassene`,\n        legalPromptVariantGChild: `Kind`,\n    },\n\n    pa: {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`ਲੈਂਜ਼ਾਂ ਦੀ ਵਰਤੋਂ ਕਰਕੇ, ਤੁਸੀਂ ਇਸ ਗੱਲ ਨੂੰ ਸਵੀਕਾਰ ਕਰਦੇ ਹੋ ਕਿ ਤੁਸੀਂ Snap ਦੀ <a href=\"${0}\" target=\"_blank\">ਪਰਦੇਦਾਰੀ ਬਾਰੇ ਨੀਤੀ</a> ਨੂੰ ਪੜ੍ਹ ਲਿਆ ਹੈ ਅਤੇ ਤੁਸੀਂ Snap ਦੀਆਂ <a href=\"${0}\" target=\"_blank\">ਸੇਵਾ ਦੀਆਂ ਮਦਾਂ</a> ਨਾਲ ਸਹਿਮਤ ਹੋ। ਕੁਝ ਲੈਂਜ਼ ਕੰਮ ਕਰਨ ਲਈ ਤੁਹਾਡੇ ਚਿਹਰੇ, ਹੱਥਾਂ ਅਤੇ ਆਵਾਜ਼ ਨਾਲ ਸੰਬੰਧਿਤ ਜਾਣਕਾਰੀ ਦੀ ਵਰਤੋਂ ਕਰਦੇ ਹਨ। <a href=\"${0}\" target=\"_blank\">ਹੋਰ ਜਾਣੋ</a> ਅਤੇ ਜੇਕਰ ਤੁਸੀਂ ਸਹਿਮਤ ਹੋ ਅਤੇ ਜਾਰੀ ਰੱਖਣਾ ਚਾਹੁੰਦੇ ਹੋ, ਤਾਂ ਹੇਠਾਂ ਟੈਪ ਕਰੋ।`\n        ),\n        legalPromptAccept: `ਮੈਂ ਸਹਿਮਤ ਹਾਂ`,\n        legalPromptReject: `ਖ਼ਾਰਜ ਕਰੋ`,\n        legalPromptTermsOfService: `ਸੇਵਾ ਦੀਆਂ ਮਦਾਂ`,\n        legalPromptVariantGMessage: `ਕੰਮ ਕਰਨ ਲਈ ਇਹ ਸੁਵਿਧਾ ਕੈਮਰੇ ਅਤੇ ਮਾਈਕ੍ਰੋਫ਼ੋਨ ਨਾਲ ਚਿਹਰੇ(ਚਿਹਰਿਆਂ), ਹੱਥਾਂ ਅਤੇ ਆਵਾਜ਼(ਆਵਾਜ਼ਾਂ) ਬਾਰੇ ਲਈ ਗਈ ਜਾਣਕਾਰੀ ਦੀ ਵਰਤੋਂ ਕਰਦੀ ਹੈ। ਇਸ ਸੁਵਿਧਾ ਨਾਲ, ਤੁਸੀਂ ਸੈਲਫ਼ੀਆਂ ਅਤੇ ਚਿੱਤਰਾਂ ਉੱਪਰ ਮਜ਼ੇਦਾਰ ਅਤੇ ਲਾਭਕਾਰੀ ਵਧਾਈ ਗਈ ਹਕੀਕਤ ਵਾਲੇ ਪ੍ਰਭਾਵ ਲਾਗੂ ਕਰ ਸਕਦੇ ਹੋ। ਸਾਡਾ ਕੈਮਰਾ ਕੁਝ ਸੁਵਿਧਾਵਾਂ (ਜਿਵੇਂ ਕਿ ਤੁਹਾਡੇ ਹੱਥ, ਅੱਖਾਂ ਅਤੇ ਨੱਕ ਕਿੱਥੇ ਹਨ) ਦਾ ਪਤਾ ਲਗਾਉਣ ਲਈ ਤਕਨਾਲੋਜੀ ਦੀ ਵਰਤੋਂ ਕਰਦਾ ਹੈ ਅਤੇ ਕੈਮਰੇ ਦੁਆਰਾ ਸੰਵੇਦਿਤ ਚਿੱਤਰ ਦੇ ਨਾਲ ਸੁਵਿਧਾ ਦੀ ਸਹੀ ਸਥਿਤੀ ਲਈ ਉਸ ਜਾਣਕਾਰੀ ਦੀ ਵਰਤੋਂ ਕਰਦਾ ਹੈ। ਇਕੱਠੀ ਕੀਤੀ ਜਾਣ ਵਾਲੀ ਕੋਈ ਵੀ ਜਾਣਕਾਰੀ ਜਿੰਨੀ ਜਲਦੀ ਹੋ ਸਕੇ ਮਿਟਾ ਦਿੱਤੀ ਜਾਵੇਗੀ (ਆਮ ਤੌਰ \\'ਤੇ ਐਪ ਬੰਦ ਹੋਣ ਤੋਂ ਤੁਰੰਤ ਬਾਅਦ) ਅਤੇ ਹਮੇਸ਼ਾ ਤਿੰਨ ਸਾਲਾਂ ਦੇ ਅੰਦਰ।<br/><br/>ਜੇਕਰ ਤੁਸੀਂ ਸਹਿਮਤ ਹੋਣਾ ਅਤੇ ਜਾਰੀ ਰੱਖਣਾ ਚਾਹੁੰਦੇ ਹੋ, ਤਾਂ ਹੇਠਾਂ ਟੈਪ ਕਰੋ।`,\n        legalPromptVariantGAdultOrChild: `ਕੀ ਤੁਸੀਂ ਬਾਲਗ ਹੋ ਜਾਂ ਬੱਚਾ ਹੋ?`,\n        legalPromptVariantGFindYourParent: `ਕਿਰਪਾ ਕਰਕੇ ਆਪਣੇ ਮਾਤਾ-ਪਿਤਾ ਜਾਂ ਕਾਨੂੰਨੀ ਸਰਪ੍ਰਸਤ ਲੱਭੋ।`,\n        legalPromptVariantGIAmGuardian: `ਮੈਂ ਬੱਚੇ ਦਾ ਸਰਪ੍ਰਸਤ ਹਾਂ`,\n        legalPromptVariantGCancel: `ਰੱਦ ਕਰੋ`,\n        legalPromptVariantGAdult: `ਬਾਲਗ`,\n        legalPromptVariantGChild: `ਬੱਚਾ`,\n    },\n\n    \"pl-PL\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Korzystając z nakładek, potwierdzasz zapoznanie się z <a href=\"${0}\" target=\"_blank\">Polityką prywatności</a> i akceptujesz <a href=\"${0}\" target=\"_blank\">Regulamin usługi</a>. Niektóre nakładki wykorzystują informacje o Twojej twarzy, dłoniach i głosie, aby działać poprawnie. <a href=\"${0}\" target=\"_blank\">Dowiedz się więcej</a>, a jeśli chcesz wyrazić zgodę i kontynuować, stuknij poniżej.`\n        ),\n        legalPromptAccept: `Zgadzam się`,\n        legalPromptReject: `Odrzuć`,\n        legalPromptTermsOfService: `Regulamin`,\n        legalPromptVariantGMessage: `Ta funkcja wykorzystuje do działania informacje o twarzy (twarzach), rękach i głosie (głosach) wykrytych przez kamerę i mikrofon. Dzięki niej możesz nakładać na selfie i zdjęcia zabawne i przydatne efekty rozszerzonej rzeczywistości. Nasza kamera wykorzystuje technologię do lokalizowania określonych cech (takich jak miejsce, w którym znajdują się Twoje ręce, oczy i nos) i wykorzystuje te informacje do dokładnego umiejscowienia danej cechy na obrazie wykrywanym przez kamerę. Wszelkie zebrane informacje zostaną usunięte możliwie jak najszybciej (zazwyczaj wkrótce po zamknięciu aplikacji) i zawsze nie później niż w ciągu trzech lat.<br/><br/>Jeśli chcesz wyrazić zgodę i kontynuować, stuknij poniżej.`,\n        legalPromptVariantGAdultOrChild: `Jesteś osobą dorosłą czy dzieckiem?`,\n        legalPromptVariantGFindYourParent: `Zwróć się do swojego rodzica lub opiekuna prawnego.`,\n        legalPromptVariantGIAmGuardian: `Jestem opiekunem prawnym dziecka`,\n        legalPromptVariantGCancel: `Anuluj`,\n        legalPromptVariantGAdult: `Osoba dorosła`,\n        legalPromptVariantGChild: `Dziecko`,\n    },\n\n    \"pt-BR\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Ao usar as Lentes, você reconhece ter lido a <a href=\"${0}\" target=\"_blank\">Política de Privacidade</a> da Snap e concorda com os <a href=\"${0}\" target=\"_blank\">Termos de Serviço</a> da Snap. Algumas Lentes usam informações sobre seu rosto, mãos e voz para funcionar. <a href=\"${0}\" target=\"_blank\">Saiba mais</a> e, se quiser concordar e continuar, toque abaixo.`\n        ),\n        legalPromptAccept: `Eu concordo`,\n        legalPromptReject: `Recusar`,\n        legalPromptTermsOfService: `Termos de Serviço`,\n        legalPromptVariantGMessage: `Este recurso usa informações sobre rosto(s), mãos e voz(es) detectados pela câmera e pelo microfone para funcionar. Com este recurso, você pode aplicar efeitos divertidos e úteis de realidade aumentada em selfies e imagens. Nossa câmera usa tecnologia para localizar certos recursos (como onde estão suas mãos, olhos e nariz) e usa esta informação para posicionar corretamente o recurso na imagem detectada pela câmera. Qualquer informação coletada será apagada o mais rápido possível (geralmente logo depois que o aplicativo é fechado) e sempre antes de três dias.<br/><br/>Se você quiser concordar e continuar, toque abaixo.`,\n        legalPromptVariantGAdultOrChild: `Você é adulto ou criança?`,\n        legalPromptVariantGFindYourParent: `Localize seu pai/mãe ou representante legal.`,\n        legalPromptVariantGIAmGuardian: `Sou representante da criança`,\n        legalPromptVariantGCancel: `Cancelar`,\n        legalPromptVariantGAdult: `Adulto`,\n        legalPromptVariantGChild: `Criança`,\n    },\n\n    \"pt-PT\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Ao utilizares as Lentes, confirmas a leitura da <a href=\"${0}\" target=\"_blank\">Política de Privacidade</a> da Snap e aceitas as <a href=\"${0}\" target=\"_blank\">Condições de Serviço</a> da Snap. Algumas Lentes utilizam informações sobre a tua cara, mãos e voz para funcionarem. <a href=\"${0}\" target=\"_blank\">Obtém mais informações</a> e, se quiseres aceitar e continuar, toca abaixo.`\n        ),\n        legalPromptAccept: `Aceito`,\n        legalPromptReject: `Fechar`,\n        legalPromptTermsOfService: `Condições de Serviço`,\n        legalPromptVariantGMessage: `Esta funcionalidade utiliza informações relacionadas com caras, mãos e vozes detetadas pela câmara e o microfone para poder funcionar. Com esta funcionalidade, pode aplicar efeitos de realidade aumentada de forma divertida e útil a selfies e imagens. A nossa câmara recorre a tecnologia para localizar determinadas caraterísticas (como a localização das tuas mãos, dos olhos e do nariz) e utiliza essas informações para posicionar de forma precisa a caraterística na imagem captada pela câmara. Quaisquer informações recolhidas serão eliminadas logo que possível (normalmente pouco depois de a app ser fechada) e nunca após um máximo de três anos. <br/><br/>Se quiser aceitar e continuar, toque abaixo.`,\n        legalPromptVariantGAdultOrChild: `És um adulto ou uma criança?`,\n        legalPromptVariantGFindYourParent: `Recorre ao teus pais ou ao(à) teu(tua) representante legal`,\n        legalPromptVariantGIAmGuardian: `Sou o(a) representante da criança`,\n        legalPromptVariantGCancel: `Cancelar`,\n        legalPromptVariantGAdult: `Adulto`,\n        legalPromptVariantGChild: `Criança`,\n    },\n\n    \"ro-RO\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Dacă folosești lentile, confirmi că ai citit <a href=\"${0}\" target=\"_blank\">Politica de confidențialitate</a> Snap și că ești de acord cu <a href=\"${0}\" target=\"_blank\">Condițiile de utilizare</a> Snap. Unele lentile folosesc informații despre fața ta, despre mâinile tale și despre vocea ta pentru a funcționa. <a href=\"${0}\" target=\"_blank\">Află mai multe</a>, iar dacă dorești să accepți și să continui, atinge dedesubt.`\n        ),\n        legalPromptAccept: `Accept`,\n        legalPromptReject: `Respinge`,\n        legalPromptTermsOfService: `Termeni de utilizare`,\n        legalPromptVariantGMessage: `Pentru a rula, funcția utilizează informații despre chipul tău, mâinile tale și vocea ta detectate de cameră și microfon. Cu ajutorul acestei funcții, poți să aplici efecte de realitate augumentată amuzante și utile peste selfie-uri și imagini. Camera noastră folosește tehnologia pentru a găsi anumite caracteristici (de exemplu, unde se află mâinile, ochii și nasul tău) și utilizează aceste informații pentru a poziționa corect funcția în imaginea detectată de cameră. Toate informațiile colectate sunt șterse cât mai curând posibil (de obicei, la scurt timp după ce se închide aplicația), limita maximă fiind de trei ani.<br/><br/>Dacă ești de acord și dorești să continui, atinge mai jos.`,\n        legalPromptVariantGAdultOrChild: `Ești adult sau copil?`,\n        legalPromptVariantGFindYourParent: `Este necesară prezența părintelui sau a tutorelui.`,\n        legalPromptVariantGIAmGuardian: `Sunt tutorele copilului`,\n        legalPromptVariantGCancel: `Anulează`,\n        legalPromptVariantGAdult: `Adult`,\n        legalPromptVariantGChild: `Copil`,\n    },\n\n    \"ru-RU\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Используя линзы, вы подтверждаете, что прочитали <a href=\"${0}\" target=\"_blank\">Политику конфиденциальности</a> Snap и принимаете <a href=\"${0}\" target=\"_blank\">Условия оказания услуг</a>. Для работы некоторых линз необходимы сведения о вашем лице, руках и голосе. <a href=\"${0}\" target=\"_blank\">Подробнее</a>. Если вы согласны продолжать, нажмите ниже.`\n        ),\n        legalPromptAccept: `Принимаю`,\n        legalPromptReject: `Закрыть`,\n        legalPromptTermsOfService: `Условия оказания услуг`,\n        legalPromptVariantGMessage: `Для работы этой функции используется регистрируемая камерой и микрофоном информация о лицах, руках и голосах. С её помощью к селфи и изображениям можно применять забавные и полезные эффекты дополненной реальности. Наша камера использует технологию, чтобы определять расположение конкретных элементов (например, ваших рук, глаз и носа), и использует эту информацию для точного наложения функции на изображение, которое уловила камера. Вся полученная информация удаляется в кратчайшие сроки (как правило, вскоре после закрытия приложения), но не позднее, чем через три года.<br/><br/>Если вы согласны и хотите продолжить, нажмите ниже.`,\n        legalPromptVariantGAdultOrChild: `Вы ― взрослый или ребёнок?`,\n        legalPromptVariantGFindYourParent: `Позовите родителя или законного опекуна.`,\n        legalPromptVariantGIAmGuardian: `Я ― законный опекун ребёнка`,\n        legalPromptVariantGCancel: `Отмена`,\n        legalPromptVariantGAdult: `Взрослый`,\n        legalPromptVariantGChild: `Ребёнок`,\n    },\n\n    \"sv-SE\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Genom att använda linser intygar du att du har läst Snaps <a href=\"${0}\" target=\"_blank\">sekretessvillkor</a> och godkänner Snaps <a href=\"${0}\" target=\"_blank\">användarvillkor</a>. Vissa linser använder information om ditt ansikte, dina händer och din röst för att fungera. <a href=\"${0}\" target=\"_blank\">Läs mer</a> och om du vill godkänna och fortsätta så trycker du nedan.`\n        ),\n        legalPromptAccept: `Jag godkänner`,\n        legalPromptReject: `Avvisa`,\n        legalPromptTermsOfService: `Användarvillkor`,\n        legalPromptVariantGMessage: `För att fungera använder funktionen information om ansikte(n), händer och röst(er) som upptäckts av kameran och mikrofonen. Funktionen gör att du kan tillämpa roliga och användbara AR-effekter över selfies och bilder. Med hjälp av teknik kan vår kamera lokalisera vissa särdrag (som dina händer, ögon och din näsa). Informationen används sedan för att korrekt positionera funktionen över bilden som kameran fångat upp. All information som samlats in raderas så snart som möjligt (vanligtvis inom kort efter att appen stängts) och alltid inom tre år.<br/><br/>Tryck nedan om du vill godkänna och fortsätta.`,\n        legalPromptVariantGAdultOrChild: `Är du vuxen eller ett barn?`,\n        legalPromptVariantGFindYourParent: `Leta upp din förälder eller vårdnadshavare`,\n        legalPromptVariantGIAmGuardian: `Jag är barnets vårdnadshavare`,\n        legalPromptVariantGCancel: `Avbryt`,\n        legalPromptVariantGAdult: `Vuxen`,\n        legalPromptVariantGChild: `Barn`,\n    },\n\n    \"ta-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`லென்ஸஸைப் பயன்படுத்துவதன் மூலம், நீங்கள் Snap இன் <a href=\"${0}\" target=\"_blank\">தனியுரிமைக் கொள்கையைப்</a> படித்துவிட்டதாக ஒப்புக்கொள்கிறீர்கள் மற்றும் Snap இன் <a href=\"${0}\" target=\"_blank\">சேவை நிபந்தனைகளை</a> ஏற்றுக்கொள்கிறீர்கள். சில லென்ஸஸ் வேலை செய்வதற்கு உங்கள் முகம், கைகள் மற்றும் குரலைப் பற்றிய தகவல்களைப் பயன்படுத்துகின்றன. <a href=\"${0}\" target=\"_blank\">மேலும் அறிக</a>, நீங்கள் ஒப்புக்கொண்டு தொடர விரும்பினால், கீழே தட்டுங்கள்.`\n        ),\n        legalPromptAccept: `ஏற்கிறேன்`,\n        legalPromptReject: `நிராகரி`,\n        legalPromptTermsOfService: `சேவை நிபந்தனைகள்`,\n        legalPromptVariantGMessage: `இந்த அம்சம் வேலை செய்ய கேமரா மற்றும் மைக்ரோஃபோனால் கண்டறியப்படும் முகம் (முகங்கள்), கைகள் மற்றும் குரல்(கள்) பற்றிய தகவல்களைப் பயன்படுத்துகிறது. இந்த அம்சத்தின் மூலம் நீங்கள் செல்ஃபிக்கள் மற்றும் படங்களில் வேடிக்கையான மற்றும் பயனுள்ள இணைப்பு நிஜமாக்கத்தைப் பயன்படுத்தலாம். எங்கள் கேமரா சில அம்சங்களைக் கண்டறிய (எடுத்துக்காட்டாக, உங்கள் கைகள், கண்கள், மூக்கு போன்றவை எங்கு உள்ளன என்று கண்டறிய) தொழில்நுட்பத்தைப் பயன்படுத்துகிறது, கேமராவால் கண்காணிக்கப்படும் படத்தில் அம்சத்தைத் துல்லியமாக வைக்க அந்தத் தகவல்களைப் பயன்படுத்துகிறது. திரட்டப்படும் எந்தத் தகவலும் இயன்றவரை விரைவாக நீக்கப்படும் (பொதுவாக, செயலி மூடப்பட்டவுடன்). மேலும், இது எப்போதும் மூன்று ஆண்டுகளுக்கு மேல் சேமிக்கப்படுவதில்லை.<br/><br/>நீங்கள் ஏற்றுக்கொண்டு தொடர விரும்பினால், கீழே தட்டுங்கள்.`,\n        legalPromptVariantGAdultOrChild: `நீங்கள் வயதுவந்தவரா அல்லது சிறுவரா?`,\n        legalPromptVariantGFindYourParent: `உங்கள் பெற்றோர் அல்லது சட்டப்பூர்வப் பாதுகாவலரைக் கண்டறியுங்கள்.`,\n        legalPromptVariantGIAmGuardian: `நான் குழந்தையின் பாதுகாவலர்`,\n        legalPromptVariantGCancel: `ரத்துசெய்`,\n        legalPromptVariantGAdult: `வயதுவந்தவர்`,\n        legalPromptVariantGChild: `சிறுவர்`,\n    },\n\n    \"te-IN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`లెన్సెస్‌ను ఉపయోగించడం ద్వారా, మీరు Snap యొక్క <a href=\"${0}\" target=\"_blank\">గోప్యతా విధానాన్ని</a> చదివినట్లు అంగీకరిస్తున్నారు మరియు Snap <a href=\"${0}\" target=\"_blank\">సేవా నిబంధనలకు</a> అంగీకరిస్తున్నారు. కొన్ని లెన్సెస్ పని చేయడానికి మీ ముఖం, చేతులు మరియు వాయిస్ గురించిన సమాచారాన్ని ఉపయోగిస్తాయి. <a href=\"${0}\" target=\"_blank\">మరింత తెలుసుకోండి</a>, మీరు అంగీకరించి కొనసాగించాలనుకుంటే, దిగువన ట్యాప్ చేయండి.`\n        ),\n        legalPromptAccept: `నేను అంగీకరిస్తున్నాను`,\n        legalPromptReject: `డిస్మిస్ చేయండి`,\n        legalPromptTermsOfService: `సేవా నిబంధనలు`,\n        legalPromptVariantGMessage: `ఈ ఫీచర్ పని చేయడానికి కెమెరా మరియు మైక్రోఫోన్ ద్వారా గుర్తించబడిన ముఖం(లు), చేతులు మరియు వాయిస్(ల) గురించిన సమాచారాన్ని ఉపయోగిస్తుంది. ఈ ఫీచర్‌తో, మీరు సెల్ఫీలు, చిత్రాల పైన ఆహ్లాదకరమైన మరియు ఉపయోగకరమైన ఆగ్మెంటేడ్ రియాలిటీ ప్రభావాలను వర్తింపజేసుకోవచ్చు. మా కెమెరా నిర్దిష్ట ఫీచర్‌లను (మీ చేతులు, కళ్ళు మరియు ముక్కు ఎక్కడ ఉన్నాయో) గుర్తించడానికి సాంకేతికతను ఉపయోగిస్తుంది మరియు కెమెరా ద్వారా గ్రహించబడిన చిత్రంతో ఫీచర్‌ను ఖచ్చితంగా ఉంచడానికి ఆ సమాచారాన్ని ఉపయోగిస్తుంది. సేకరించిన ఏదైనా సమాచారం వీలైనంత త్వరగా (సాధారణంగా యాప్ మూసివేయబడిన వెంటనే) మరియు ఎల్లప్పుడూ మూడు సంవత్సరాలలోపు డిలీట్ చేయబడుతుంది.<br/><br/>మీరు అంగీకరించి కొనసాగించాలనుకుంటే, దిగువున ట్యాప్ చేయండి.`,\n        legalPromptVariantGAdultOrChild: `మీరు పెద్దవారా లేదా చిన్నవారా?`,\n        legalPromptVariantGFindYourParent: `దయచేసి మీ తల్లిదండ్రులు లేదా చట్టపరమైన సంరక్షకుడిని కనుగొనండి.`,\n        legalPromptVariantGIAmGuardian: `నేను పిల్లవాడి సంరక్షకుడిని`,\n        legalPromptVariantGCancel: `రద్దు`,\n        legalPromptVariantGAdult: `వయోజనుడు`,\n        legalPromptVariantGChild: `పిల్లవాడు`,\n    },\n\n    \"th-TH\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`การใช้เลนส์แสดงว่าคุณยอมรับว่าคุณได้อ่าน <a href=\"${0}\" target=\"_blank\">นโยบายความเป็นส่วนตัว</a> ของ Snap และตกลงยอมรับ <a href=\"${0}\" target=\"_blank\">ข้อกำหนดการให้บริการ</a> ของ Snap เลนส์บางรายการต้องใช้ข้อมูลเกี่ยวกับใบหน้า มือ และเสียงของคุณจึงจะสามารถทำงานได้ <a href=\"${0}\" target=\"_blank\">เรียนรู้เพิ่มเติม</a> และหากคุณต้องการตกลงยอมรับและดำเนินการต่อ ให้แตะที่ด้านล่าง`\n        ),\n        legalPromptAccept: `ฉันตกลงยอมรับ`,\n        legalPromptReject: `เพิกเฉย`,\n        legalPromptTermsOfService: `ข้อกำหนดการให้บริการ`,\n        legalPromptVariantGMessage: `ฟีเจอร์นี้ใช้ข้อมูลเกี่ยวกับใบหน้า มือ และเสียงซึ่งตรวจจับโดยใช้กล้องและไมโครโฟน เมื่อใช้ฟีเจอร์นี้ คุณสามารถใช้เอฟเฟกต์ความเป็นจริงเสริม (AR) ที่ทั้งสนุกและมีประโยชน์เมื่อใช้กับภาพเซลฟีและรูปภาพ กล้องของเราใช้เทคโนโลยีเพื่อระบุตำแหน่งของฟีเจอร์บางอย่าง (เช่น ตำแหน่งของมือ ตา และจมูกของคุณ) และใช้ข้อมูลดังกล่าวเพื่อให้วางตำแหน่งฟีเจอร์ได้อย่างถูกต้องลงบนรูปภาพที่ตรวจจับโดยใช้กล้อง เราจะลบข้อมูลต่าง ๆ ที่รวบรวมไว้โดยเร็วที่สุดเท่าที่จะทำได้ (ส่วนใหญ่จะเป็นช่วงหลังจากที่ปิดแอปแล้วไม่นาน) และจะไม่เกินกว่าระยะเวลาสามปี<br/><br/>หากคุณต้องการตกลงยอมรับและดำเนินการต่อ ให้แตะที่ด้านล่างนี้`,\n        legalPromptVariantGAdultOrChild: `คุณเป็นผู้ใหญ่หรือเด็ก?`,\n        legalPromptVariantGFindYourParent: `โปรดค้นหาพ่อแม่หรือผู้ปกครองตามกฎหมายของคุณ`,\n        legalPromptVariantGIAmGuardian: `ฉันเป็นผู้ปกครองของเด็ก`,\n        legalPromptVariantGCancel: `ยกเลิก`,\n        legalPromptVariantGAdult: `ผู้ใหญ่`,\n        legalPromptVariantGChild: `เด็ก`,\n    },\n\n    \"tr-TR\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Lensleri kullanarak, Snap\\'in <a href=\"${0}\" target=\"_blank\">Gizlilik Politikası</a> içeriğini okuduğunu doğrulamış ve Snap\\'in <a href=\"${0}\" target=\"_blank\">Kullanım Şartları</a> içeriğini kabul etmiş olursun. Bazı lenslerin çalışması için yüzün, ellerin ve sesinle ilgili bilgiler kullanılır. <a href=\"${0}\" target=\"_blank\">Daha Fazlasını Öğren</a> ve kabul edip devam etmek istiyorsan aşağıya dokun.`\n        ),\n        legalPromptAccept: `Kabul Ediyorum`,\n        legalPromptReject: `Yoksay`,\n        legalPromptTermsOfService: `Kullanım Şartları`,\n        legalPromptVariantGMessage: `Bu özelliğin çalışması için kamera ve mikrofon tarafından algılanan yüzler, eller ve sesler hakkındaki bilgiler kullanılır. Bu özellik sayesinde selfie\\'lerin ve görüntülerin üzerine eğlenceli ve kullanışlı artırılmış gerçeklik efektleri uygulayabilirsin. Kameramız, belirli özellikleri (ellerinin, gözlerinin ve burnunun nerede olduğu gibi) bulmak için teknolojiden yararlanır ve bu bilgileri, kamera tarafından algılanan görüntüyle özelliği doğru şekilde konumlandırmak için kullanır. Toplanan tüm bilgiler mümkün olan en kısa sürede (genellikle uygulama kapatıldıktan kısa süre sonra) ve mutlaka en fazla üç yıl içinde silinir.<br/><br/>Kabul edip devam etmek istiyorsan aşağıya dokun.`,\n        legalPromptVariantGAdultOrChild: `Yetişkin mi yoksa çocuk musun?`,\n        legalPromptVariantGFindYourParent: `Lütfen ebeveynini veya yasal vasini bul.`,\n        legalPromptVariantGIAmGuardian: `Ben çocuğun vasisiyim`,\n        legalPromptVariantGCancel: `İptal Et`,\n        legalPromptVariantGAdult: `Yetişkin`,\n        legalPromptVariantGChild: `Çocuk`,\n    },\n\n    \"ur-PK\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`لینزز استعمال کرنے کا مطلب ہے کہ آپ Snap کی <a href=\"${0}\" target=\"_blank\">پرائیویسی پالیسی</a> پڑھنے کا اعتراف کرتے ہیں اور Snap کی <a href=\"${0}\" target=\"_blank\">سروس کی شرائط</a> سے متفق ہیں۔ کچھ لینزز کام کرنے کیلئے آپ کے چہرے، ہاتھوں اور آواز کے بارے میں معلومات استعمال کرتے ہیں۔ <a href=\"${0}\" target=\"_blank\">مزید جانیں</a> اور اگر آپ متفق ہیں اور جاری رکھنا چاہتے ہیں تو ذیل میں ٹیپ کریں۔`\n        ),\n        legalPromptAccept: `میں متفق ہوں`,\n        legalPromptReject: `برخاست کریں`,\n        legalPromptTermsOfService: `سروس کی شرائط`,\n        legalPromptVariantGMessage: `یہ خصوصیت کام کرنے کیلئے چہرہ (چہرے)، ہاتھوں اور آوازوں کے بارے میں معلومات استعمال کرتی ہے جن کا پتا کیمرے اور مائیکرو فون کے ذریعے لگایا جاتا ہے۔ اس خصوصیت کے ساتھ، آپ سیلفیز اور تصاویر پر دلچسپ اور کارآمد افزودہ حقیقت کے ایفیکٹس کا اطلاق کر سکتے ہیں۔ ہمارا کیمرا مخصوص خصوصیات کے لوکیشن کا تعین کرنے (جیسے کہ آپ کے ہاتھ، آنکھیں اور ناک کہاں ہیں) کیلئے ٹیکنالوجی استعمال کرتا ہے اور ان معلومات کی مدد سے خصوصیت کو کیمرا کی جانب سے محسوس کی گئی تصویر کے ساتھ درست طور پر پوزیشن کرتا ہے۔ اکٹھی کی گئی کوئی بھی معلومات جلد از جلد ڈیلیٹ ہو جائیں گی (عموماً ایپ بند ہونے کے فوراً بعد) نیز ہر صورت میں تین سال کے اندر ڈیلیٹ ہو جائیں گی۔<br/><br/>اگر آپ اتفاق کرنا اور جاری رکھنا چاہتے ہیں تو ذیل میں ٹیپ کریں۔`,\n        legalPromptVariantGAdultOrChild: `کیا آپ ایک بالغ یا بچہ ہیں؟`,\n        legalPromptVariantGFindYourParent: `براہ کرم اپنے والد/والدہ یا قانونی سرپرست کو تلاش کریں۔`,\n        legalPromptVariantGIAmGuardian: `میں بچہ کا/کی سرپرست ہوں`,\n        legalPromptVariantGCancel: `منسوخ کریں`,\n        legalPromptVariantGAdult: `بالغ`,\n        legalPromptVariantGChild: `بچہ`,\n    },\n\n    \"vi-VN\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`Bằng cách sử dụng Ống Kính, bạn xác nhận đã đọc <a href=\"${0}\" target=\"_blank\">Chính Sách Bảo Mật</a> của Snap và đồng ý với <a href=\"${0}\" target=\"_blank\">Điều Khoản Dịch Vụ</a>của Snap. Một số ống kính sử dụng thông tin về khuôn mặt, bàn tay và giọng nói của bạn để hoạt động. Bạn có thể <a href=\"${0}\" target=\"_blank\">Tìm Hiểu Thêm</a>, còn nếu bạn muốn đồng ý và tiếp tục, hãy chạm vào bên dưới.`\n        ),\n        legalPromptAccept: `Tôi Đồng Ý`,\n        legalPromptReject: `Bỏ Qua`,\n        legalPromptTermsOfService: `Điều Khoản Dịch Vụ`,\n        legalPromptVariantGMessage: `Tính năng này hoạt động dựa trên việc sử dụng thông tin về khuôn mặt, bàn tay và giọng nói mà camera và micrô phát hiện được. Bạn có thể sử dụng tính năng này để áp dụng các hiệu ứng thực tế tăng cường thú vị và hữu ích lên ảnh tự sướng và hình ảnh. Camera của chúng tôi áp dụng công nghệ để tìm những đặc điểm nhất định (chẳng hạn như vị trí bàn tay, mắt và mũi của bạn), rồi sử dụng thông tin đó để xác định chính xác vị trí của đặc điểm trong hình ảnh mà camera chụp được. Chúng tôi sẽ xóa mọi thông tin được thu thập sớm nhất có thể (thường ngay sau khi bạn đóng ứng dụng) và luôn xóa trong khoảng thời gian không quá ba năm.<br/><br/>Nếu bạn muốn đồng ý và tiếp tục, hãy chạm vào bên dưới.`,\n        legalPromptVariantGAdultOrChild: `Bạn là người lớn hay trẻ em?`,\n        legalPromptVariantGFindYourParent: `Vui lòng tìm phụ huynh hoặc người giám hộ hợp pháp.`,\n        legalPromptVariantGIAmGuardian: `Tôi là người giám hộ của trẻ`,\n        legalPromptVariantGCancel: `Hủy Bỏ`,\n        legalPromptVariantGAdult: `Người lớn`,\n        legalPromptVariantGChild: `Trẻ em`,\n    },\n\n    \"zh-Hans\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`使用特效镜头，即表示你确认已经阅读 Snap 的<a href=\"${0}\" target=\"_blank\">隐私政策</a>，并同意 Snap 的<a href=\"${0}\" target=\"_blank\">服务条款</a>。一些特效镜头需要使用有关你的脸、手和声音的信息才能正常工作。<a href=\"${0}\" target=\"_blank\">了解更多</a>，如果你同意并继续，请点击下面。`\n        ),\n        legalPromptAccept: `我同意`,\n        legalPromptReject: `忽略`,\n        legalPromptTermsOfService: `服务条款`,\n        legalPromptVariantGMessage: `此功能会使用相机和麦克风检测到的面部、手部和声音信息。使用此功能，你可以对自拍照和图片应用有趣和有用的增强现实效果。我们的相机会使用技术，定位某些特征信息（例如：你的手、眼睛和鼻子的位置），并使用这些信息和相机感知到的图像来准确定位这些特征。收集的所有信息都将尽快删除（通常在应用关闭后不久），最久不会超过三年。<br/><br/>如果你同意并想继续，请点击下方。`,\n        legalPromptVariantGAdultOrChild: `你是成人还是儿童？`,\n        legalPromptVariantGFindYourParent: `请通知你的家长或法定监护人。`,\n        legalPromptVariantGIAmGuardian: `我是这名儿童的监护人`,\n        legalPromptVariantGCancel: `取消`,\n        legalPromptVariantGAdult: `成人`,\n        legalPromptVariantGChild: `儿童`,\n    },\n\n    \"zh-Hant\": {\n        legalPromptMessage: legalPromptMessage(\n            (tag) =>\n                tag`使用特效鏡頭，代表你已閱讀 Snap 的<a href=\"${0}\" target=\"_blank\">隱私政策</a>並同意 Snap 的<a href=\"${0}\" target=\"_blank\">服務條款</a>。有些特效鏡頭需使用你的臉部、手部和聲音資訊才能運作。<a href=\"${0}\" target=\"_blank\">請按這裡以了解更多資訊</a>，如果你同意並想繼續使用功能，請點按下方。`\n        ),\n        legalPromptAccept: `我同意`,\n        legalPromptReject: `略過`,\n        legalPromptTermsOfService: `服務條款`,\n        legalPromptVariantGMessage: `這個功能會使用相機和麥克風偵測到的臉部、手部和聲音資訊來進行運作。使用這個功能，你可以針對自拍照和圖片套用好玩和有作用的擴增實境效果。我們的相機會使用科技技術，定位某些特徵資訊 (例如：你的手、眼睛和鼻子的位置)，並使用這些資訊和相機感應到的影像來正確地定位這些特徵。所收集的資訊將盡快刪除 (通常會在應用程式關閉後)，最久不會超過三年。<br/><br/>如果你同意並想繼續使用此功能，請點按下方。`,\n        legalPromptVariantGAdultOrChild: `你是成人或兒童？`,\n        legalPromptVariantGFindYourParent: `請通知你的父母或法定監護人。`,\n        legalPromptVariantGIAmGuardian: `我是這個兒童的監護人`,\n        legalPromptVariantGCancel: `取消`,\n        legalPromptVariantGAdult: `成人`,\n        legalPromptVariantGChild: `兒童`,\n    },\n} satisfies Record<string, LocalizableStrings>;\n\n/**\n * --- end of string definitions ---\n */\n\n/**\n * Language codes with a mapping to a corresponding default locale.\n */\nconst languageDefaultLocale: Record<string, Locale | undefined> = {\n    bn: \"bn-BD\",\n    da: \"da-DK\",\n    de: \"de-DE\",\n    el: \"el-GR\",\n    en: \"en-US\",\n    es: \"es-ES\",\n    fi: \"fi-FI\",\n    fil: \"fil-PH\",\n    fr: \"fr-FR\",\n    gu: \"gu-IN\",\n    hi: \"hi-IN\",\n    id: \"id-ID\",\n    it: \"it-IT\",\n    ja: \"ja-JP\",\n    kn: \"kn-IN\",\n    ko: \"ko-KR\",\n    ml: \"ml-IN\",\n    mr: \"mr-IN\",\n    ms: \"ms-MY\",\n    nb: \"nb-NO\",\n    nl: \"nl-NL\",\n    pl: \"pl-PL\",\n    pt: \"pt-BR\",\n    ro: \"ro-RO\",\n    ru: \"ru-RU\",\n    sv: \"sv-SE\",\n    ta: \"ta-IN\",\n    te: \"te-IN\",\n    th: \"th-TH\",\n    tr: \"tr-TR\",\n    ur: \"ur-PK\",\n    vi: \"vi-VN\",\n    zh: \"zh-Hans\",\n};\n\n/**\n * Some locale synonyms that require mapping.\n */\nconst synonyms: Record<string, Locale | undefined> = {\n    \"zh-TW\": \"zh-Hant\",\n    \"zh-CN\": \"zh-Hans\",\n};\n\ntype Locale = keyof typeof allStrings;\nconst isLocaleString = (value: string): value is Locale => value in allStrings;\n\n// Default locale in case a user locale cannot be found.\nconst defaultLocale = \"en-US\" satisfies Locale;\n\n/**\n * Gets browser locale and maps it to the closest locale that has a translation.\n */\nfunction getSupportedLocale() {\n    const locale = getPlatformInfo().locale;\n    if (isLocaleString(locale)) return locale;\n\n    const synonym = synonyms[locale];\n    if (synonym && synonym in allStrings) return synonym;\n\n    const langCode = locale.split(\"-\")[0];\n    // Safety: \"in\" operator ensures that langCode is in allStrings, i.e. is of Locale type.\n    if (langCode && langCode in allStrings) return langCode as Locale;\n    // Safety: \"in\" operator ensures that langCode is in languageDefaultLocale.\n    if (langCode && langCode in languageDefaultLocale) return languageDefaultLocale[langCode]!;\n\n    return defaultLocale;\n}\n\n/**\n * The most closest locale with a translation.\n */\nexport const supportedLocale = getSupportedLocale();\n\n/**\n * Returns localized string by its ID.\n */\nexport function localizedString<ID extends keyof LocalizableStrings>(stringId: ID): LocalizableStrings[ID] {\n    return allStrings[supportedLocale][stringId];\n}\n","import { fromEvent, map, merge, take } from \"rxjs\";\n\n/**\n * Dialog options.\n */\ninterface DialogOptions<Keys extends string> {\n    /**\n     * Element to attach the dialgo to.\n     */\n    container: HTMLElement;\n    /**\n     * Body content string. Can be HTML string.\n     */\n    body?: string;\n    /**\n     * Title string to render. Can be HTML string.\n     */\n    title?: string;\n    /**\n     * Accessible dialog title text,\n     * especially useful for voice-over features when the title field is an image.\n     */\n    titleText?: string;\n    /**\n     * \"data-testid\" attribute for testing purposes.\n     */\n    dataTestId?: string;\n    /**\n     * Use the lang field to set \"lang\" attribute on the dialog if that should be different from the parent page.\n     */\n    lang?: string;\n    /**\n     * Accessbile text of dismiss (X) button,\n     * especially useful for voice-over features when the title field is an image.\n     */\n    dismissButtonText?: string;\n    /**\n     * Buttons to display at the bottom of the dialog.\n     */\n    buttons?: DialogButton<Keys>[];\n}\n\n/**\n * Dialog button.\n */\ninterface DialogButton<Key extends string> {\n    /**\n     * Button text.\n     */\n    text: string;\n    /**\n     * Value returned by the {@link showDialog} function after the button is clicked.\n     */\n    key: Key;\n    /**\n     * Whether to apply \"secondary\" styles on the button.\n     */\n    isSecondary?: boolean;\n}\n\ntype DismissKey = \"dismiss\";\n\nconst stylesCss = `\ndialog {\n    display: flex;\n    flex-direction: column;\n\n    background-color: #fff;\n    border: #efefef 1px solid;\n    border-radius: 20px;\n    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.3);\n\n    max-width: 80vw;\n    max-height: 80vh;\n    padding: 44px 0 24px 0;\n\n    font-size: 16px;\n    font-family: sans-serif;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px;\n}\n\ndialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.4);\n}\n\n.title {\n    color: #16191C;\n    padding: 0 32px;\n    text-align: center;\n}\n\n.body {\n    color: #656D78;\n    font-size: 14px;\n    font-weight: 500;\n    margin-top: 16px;\n    max-width: 350px;\n    padding: 0 32px;\n    overflow: auto;\n}\n\na {\n    color: rgb(78, 171, 248);\n}\n\nbutton {\n    cursor: pointer;\n}\n\nbutton.dismiss {\n    position: absolute;\n    top: 7px;\n    right: 7px;\n    padding: 0;\n    height: 36px;\n    width: 36px;\n    margin: 0;\n    background-color: transparent;\n    border: 0;\n}\n\nbutton.dismiss svg {\n    fill: black;\n}\n\n.buttons {\n    margin-top: 8px;\n    padding: 0 32px;\n}\n\n.buttons button {\n    background: #0FADFF;\n    border: 0;\n    border-radius: 25px;\n\n    width: 100%;\n    padding: 1rem;\n    margin-top: 8px;\n\n    color: #fff;\n    font-weight: inherit;\n    font-family: inherit;\n    font-size: inherit;\n    font-style: inherit;\n}\n\n.buttons button.secondary {\n    background-color: transparent;\n    color: #656D78;\n}\n\n// Proper filling of X button in High Contrast themes\n@media (forced-colors: active) {\n    button.dismiss svg {\n        fill: ButtonText;\n    }\n}\n`;\n\nfunction getDismissButtonHtml(button: DialogButton<DismissKey>) {\n    /* eslint-disable max-len */\n    return `\n        <button class=\"dismiss\" autofocus data-key=${button.key}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\n                <title>${button.text}</title>\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.6763 11.2621C12.2858 10.8716 11.6527 10.8716 11.2621 11.2621C10.8716 11.6527 10.8716 12.2858 11.2621 12.6763L16.5858 18L11.2621 23.3237C10.8716 23.7142 10.8716 24.3474 11.2621 24.7379C11.6527 25.1284 12.2858 25.1284 12.6764 24.7379L18 19.4142L23.3237 24.7379C23.7142 25.1284 24.3474 25.1284 24.7379 24.7379C25.1284 24.3474 25.1284 23.7142 24.7379 23.3237L19.4142 18L24.7379 12.6763C25.1284 12.2858 25.1284 11.6527 24.7379 11.2621C24.3474 10.8716 23.7142 10.8716 23.3237 11.2621L18 16.5858L12.6763 11.2621Z\" fill-opacity=\"0.4\"/>\n            </svg>\n        </button>`;\n    /* eslint-enable */\n}\n\nfunction getTitleHtml(title: string | undefined) {\n    return title ? `<div class=\"title\" role=\"heading\">${title}</div>` : \"\";\n}\n\nfunction getBodyHtml(body: string | undefined) {\n    return body ? `<div class=\"body\">${body}</div>` : \"\";\n}\n\nfunction getButtonHtml<Key extends string>(button: DialogButton<Key>) {\n    return `<button data-key=\"${button.key}\"${button.isSecondary ? ` class=\"secondary\"` : \"\"}>${button.text}</button>`;\n}\n\nfunction getButtonsHtml<Key extends string>(buttons: DialogButton<Key>[]) {\n    if (buttons.length === 0) return \"\";\n    return `\n        <div class=\"buttons\">\n        ${buttons.map((b) => getButtonHtml(b)).join(\"\\n\")}\n        </div>`;\n}\n\nfunction setAttribute(element: HTMLElement, attr: string, value: string | undefined) {\n    if (value) element.setAttribute(attr, value);\n}\n\nexport function showDialog<Keys extends string>(options: DialogOptions<Keys>): Promise<Keys | DismissKey> {\n    return new Promise((res) => {\n        const element = document.createElement(\"div\");\n        setAttribute(element, \"data-testid\", options.dataTestId);\n        const shadow = element.attachShadow({ mode: \"open\" });\n\n        const style = document.createElement(\"style\");\n        shadow.appendChild(style);\n        style.innerHTML = stylesCss;\n\n        const prompt = document.createElement(\"dialog\");\n        setAttribute(prompt, \"aria-label\", options.titleText ?? options.title);\n        setAttribute(prompt, \"lang\", options.lang);\n        setAttribute(prompt, \"dir\", \"auto\");\n        shadow.appendChild(prompt);\n\n        prompt.innerHTML = `\n            ${getDismissButtonHtml({ key: \"dismiss\", text: options.dismissButtonText ?? \"Dismiss\" })}\n            ${getTitleHtml(options.title)}\n            ${getBodyHtml(options.body)}\n            ${getButtonsHtml(options.buttons ?? [])}\n        `;\n\n        const buttonsElements = Array.from(prompt.querySelectorAll(\"button\"));\n        merge(\n            ...buttonsElements.map((b) => fromEvent(b, \"click\").pipe(map(() => b.dataset.key as Keys))),\n            fromEvent(prompt, \"cancel\").pipe(map(() => \"dismiss\" as const))\n        )\n            .pipe(take(1))\n            .subscribe({ next: res, complete: () => element.remove() });\n        options.container.appendChild(element);\n        prompt.showModal();\n    });\n}\n","/**\n * Fast, simple hashing function from github.com/bryc\n * https://github.com/bryc/code/blob/master/jshash/experimental/cyrb53.js\n */\nexport const computeHash = (str: string): string => {\n    let h1 = 0xdeadbeef;\n    let h2 = 0x41c6ce57;\n    for (let i = 0; i < str.length; i++) {\n        const ch = str.charCodeAt(i);\n        h1 = Math.imul(h1 ^ ch, 2654435761);\n        h2 = Math.imul(h2 ^ ch, 1597334677);\n    }\n    h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n    h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n    return (4294967296 * (2097151 & h2) + (h1 >>> 0)).toString(16);\n};\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { LegalDocument, LegalDocument_Type } from \"../generated-proto/pb_schema/camera_kit/v3/legal_prompt\";\nimport { supportedLocale, localizedString } from \"../common/localization\";\nimport { showDialog } from \"../common/dialog\";\nimport { assertUnreachable } from \"../common/assertions\";\nimport { computeHash } from \"../common/hash\";\n\n/* eslint-disable max-len */\nconst snapIcon = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 32 32\" height=\"48px\">\n    <g>\n        <path\n            d=\"M 30.898 23.477 C 30.77 23.045 30.148 22.743 30.148 22.743 C 30.092 22.71 30.039 22.684 29.994 22.663 C 28.962 22.161 28.048 21.561 27.277 20.876 C 26.659 20.325 26.128 19.719 25.701 19.074 C 25.182 18.288 24.937 17.632 24.831 17.275 C 24.773 17.043 24.782 16.951 24.831 16.832 C 24.873 16.731 24.99 16.632 25.049 16.588 C 25.397 16.341 25.96 15.976 26.303 15.75 C 26.602 15.556 26.859 15.389 27.009 15.283 C 27.494 14.944 27.824 14.596 28.02 14.223 C 28.275 13.74 28.303 13.208 28.107 12.684 C 27.84 11.978 27.184 11.556 26.35 11.556 C 26.163 11.556 25.974 11.577 25.785 11.62 C 25.308 11.723 24.852 11.894 24.474 12.042 C 24.446 12.054 24.416 12.032 24.418 12.002 C 24.457 11.059 24.502 9.79 24.399 8.584 C 24.306 7.493 24.082 6.576 23.717 5.776 C 23.351 4.972 22.874 4.376 22.5 3.947 C 22.143 3.536 21.519 2.936 20.577 2.394 C 19.251 1.631 17.742 1.244 16.09 1.244 C 14.443 1.244 12.934 1.631 11.605 2.394 C 10.607 2.966 9.97 3.614 9.678 3.947 C 9.304 4.376 8.827 4.972 8.46 5.776 C 8.096 6.576 7.872 7.496 7.778 8.584 C 7.673 9.792 7.715 10.96 7.76 11.999 C 7.762 12.03 7.732 12.051 7.704 12.039 C 7.325 11.892 6.87 11.72 6.393 11.617 C 6.204 11.575 6.012 11.554 5.828 11.554 C 4.994 11.554 4.337 11.976 4.071 12.682 C 3.875 13.205 3.903 13.738 4.157 14.221 C 4.354 14.594 4.685 14.941 5.169 15.281 C 5.318 15.387 5.575 15.553 5.874 15.748 C 6.211 15.968 6.758 16.323 7.108 16.569 C 7.152 16.599 7.299 16.712 7.346 16.827 C 7.397 16.951 7.404 17.045 7.341 17.289 C 7.234 17.648 6.989 18.298 6.479 19.069 C 6.052 19.715 5.522 20.32 4.902 20.871 C 4.132 21.556 3.218 22.157 2.186 22.658 C 2.137 22.682 2.078 22.712 2.015 22.748 C 2.015 22.748 1.399 23.064 1.282 23.472 C 1.109 24.075 1.567 24.64 2.036 24.943 C 2.8 25.438 3.732 25.703 4.272 25.849 C 4.421 25.889 4.559 25.926 4.683 25.964 C 4.76 25.989 4.956 26.062 5.038 26.17 C 5.143 26.306 5.155 26.473 5.192 26.66 C 5.253 26.977 5.384 27.373 5.774 27.643 C 6.204 27.941 6.75 27.962 7.444 27.99 C 8.168 28.018 9.07 28.054 10.1 28.394 C 10.579 28.553 11.011 28.818 11.514 29.128 C 12.56 29.773 13.864 30.578 16.09 30.578 C 18.318 30.578 19.629 29.768 20.685 29.119 C 21.183 28.811 21.612 28.546 22.08 28.391 C 23.11 28.049 24.011 28.014 24.735 27.988 C 25.427 27.962 25.974 27.941 26.404 27.641 C 26.822 27.35 26.943 26.918 26.997 26.59 C 27.027 26.428 27.046 26.285 27.14 26.165 C 27.219 26.064 27.399 25.992 27.483 25.964 C 27.609 25.924 27.751 25.886 27.906 25.844 C 28.445 25.698 29.123 25.527 29.945 25.061 C 30.933 24.511 31.001 23.82 30.898 23.477\"\n            fill=\"#ffffff\"\n            stroke=\"#00000000\"\n            stroke-width=\"1\"\n        />\n    </g>\n    <g>\n        <path\n            d=\"M 29.56 24.299 C 28.21 25.045 27.312 24.965 26.613 25.414 C 26.021 25.795 26.37 26.618 25.939 26.915 C 25.411 27.279 23.843 26.889 21.822 27.555 C 20.155 28.107 19.09 29.689 16.089 29.689 C 13.081 29.689 12.047 28.114 10.357 27.555 C 8.335 26.889 6.768 27.279 6.24 26.915 C 5.809 26.618 6.16 25.795 5.566 25.414 C 4.869 24.965 3.969 25.045 2.619 24.299 C 1.758 23.825 2.247 23.53 2.532 23.393 C 7.426 21.027 8.204 17.372 8.24 17.096 C 8.282 16.769 8.328 16.509 7.966 16.175 C 7.615 15.853 6.066 14.895 5.636 14.593 C 4.925 14.098 4.612 13.6 4.841 12.99 C 5 12.569 5.395 12.41 5.812 12.41 C 5.94 12.41 6.071 12.426 6.2 12.452 C 6.981 12.623 7.741 13.013 8.179 13.118 C 8.24 13.132 8.293 13.139 8.34 13.139 C 8.574 13.139 8.656 13.022 8.639 12.754 C 8.59 11.9 8.469 10.234 8.602 8.677 C 8.787 6.536 9.477 5.476 10.298 4.538 C 10.693 4.087 12.543 2.133 16.082 2.133 C 19.633 2.133 21.474 4.087 21.867 4.538 C 22.688 5.478 23.378 6.536 23.563 8.677 C 23.698 10.234 23.581 11.898 23.525 12.754 C 23.506 13.034 23.591 13.139 23.825 13.139 C 23.872 13.139 23.925 13.132 23.986 13.118 C 24.426 13.013 25.184 12.62 25.965 12.452 C 26.091 12.424 26.222 12.41 26.353 12.41 C 26.77 12.41 27.165 12.569 27.324 12.99 C 27.555 13.6 27.242 14.095 26.529 14.593 C 26.098 14.892 24.547 15.85 24.199 16.175 C 23.836 16.509 23.883 16.767 23.925 17.096 C 23.96 17.372 24.739 21.025 29.633 23.393 C 29.932 23.53 30.421 23.825 29.56 24.299 M 31.709 23.12 C 31.489 22.523 31.07 22.203 30.594 21.939 C 30.505 21.887 30.423 21.845 30.355 21.812 C 30.212 21.74 30.067 21.667 29.922 21.592 C 28.435 20.806 27.275 19.812 26.469 18.635 C 26.198 18.238 26.008 17.88 25.877 17.587 C 25.809 17.391 25.811 17.281 25.86 17.178 C 25.898 17.101 25.996 17.019 26.05 16.979 C 26.305 16.811 26.57 16.64 26.748 16.525 C 27.067 16.319 27.317 16.156 27.481 16.043 C 28.093 15.617 28.519 15.164 28.786 14.658 C 29.163 13.945 29.21 13.131 28.919 12.363 C 28.517 11.301 27.509 10.642 26.291 10.642 C 26.038 10.642 25.783 10.67 25.527 10.726 C 25.46 10.74 25.394 10.756 25.328 10.773 C 25.34 10.05 25.324 9.278 25.258 8.524 C 25.029 5.872 24.099 4.48 23.129 3.371 C 22.724 2.908 22.021 2.232 20.964 1.628 C 19.491 0.781 17.821 0.356 16 0.356 C 14.185 0.356 12.518 0.781 11.044 1.623 C 9.983 2.229 9.278 2.905 8.875 3.366 C 7.905 4.475 6.975 5.867 6.746 8.52 C 6.68 9.273 6.663 10.045 6.675 10.768 C 6.61 10.752 6.544 10.735 6.476 10.721 C 6.221 10.665 5.965 10.637 5.713 10.637 C 4.494 10.637 3.487 11.297 3.084 12.359 C 2.794 13.126 2.841 13.94 3.218 14.654 C 3.485 15.159 3.911 15.613 4.522 16.039 C 4.686 16.153 4.937 16.314 5.256 16.52 C 5.427 16.633 5.68 16.794 5.926 16.958 C 5.963 16.984 6.097 17.082 6.141 17.173 C 6.193 17.279 6.195 17.393 6.118 17.604 C 5.987 17.891 5.801 18.242 5.535 18.631 C 4.747 19.782 3.62 20.757 2.18 21.536 C 1.419 21.941 0.54 22.355 0.29 23.118 C 0.039 23.88 0.203 24.582 0.842 25.239 C 1.053 25.466 1.318 25.665 1.653 25.85 C 2.438 26.283 3.105 26.496 3.63 26.641 C 3.721 26.669 3.937 26.736 4.031 26.819 C 4.265 27.022 4.23 27.331 4.543 27.78 C 4.731 28.061 4.949 28.25 5.129 28.374 C 5.783 28.826 6.516 28.854 7.294 28.881 C 7.997 28.908 8.793 28.94 9.702 29.24 C 10.079 29.364 10.47 29.605 10.922 29.883 C 12.011 30.552 13.501 31.467 15.998 31.467 C 18.493 31.467 19.995 30.547 21.091 29.876 C 21.541 29.6 21.93 29.361 22.297 29.242 C 23.206 28.942 24.003 28.912 24.706 28.884 C 25.483 28.854 26.216 28.826 26.87 28.377 C 27.076 28.234 27.331 28.004 27.535 27.651 C 27.76 27.272 27.753 27.003 27.964 26.821 C 28.05 26.746 28.238 26.68 28.338 26.65 C 28.868 26.505 29.545 26.292 30.344 25.852 C 30.697 25.658 30.976 25.443 31.192 25.2 C 31.194 25.197 31.196 25.192 31.199 25.19 C 31.805 24.544 31.955 23.787 31.709 23.12\"\n            fill=\"#000000\"\n            stroke=\"#00000000\"\n            stroke-width=\"1\"\n        />\n    </g>\n</svg>`;\n/* eslint-enable */\n\nasync function showTosDialog(title: string, titleText: string, body: string) {\n    const result = await showDialog({\n        container: document.body,\n        dataTestId: \"tos-dialog\",\n        lang: supportedLocale,\n        title,\n        titleText,\n        body,\n        dismissButtonText: localizedString(\"legalPromptReject\"),\n        buttons: [\n            {\n                text: localizedString(\"legalPromptAccept\"),\n                key: \"accept\",\n            },\n        ],\n    });\n    return result === \"accept\";\n}\n\nfunction showAdultOrChildDialog() {\n    return showDialog({\n        container: document.body,\n        dataTestId: \"adult-or-child-dialog\",\n        lang: supportedLocale,\n        title: localizedString(\"legalPromptVariantGAdultOrChild\"),\n        buttons: [\n            {\n                text: localizedString(\"legalPromptVariantGAdult\"),\n                key: \"adult\",\n            },\n            {\n                text: localizedString(\"legalPromptVariantGChild\"),\n                key: \"child\",\n            },\n        ],\n    });\n}\n\nfunction showFindGuardianDialog() {\n    return showDialog({\n        container: document.body,\n        dataTestId: \"find-guardian-dialog\",\n        lang: supportedLocale,\n        title: localizedString(\"legalPromptVariantGFindYourParent\"),\n        buttons: [\n            {\n                text: localizedString(\"legalPromptVariantGIAmGuardian\"),\n                key: \"guardian\",\n            },\n            {\n                text: localizedString(\"legalPromptVariantGCancel\"),\n                key: \"cancel\",\n                isSecondary: true,\n            },\n        ],\n    });\n}\n\nexport type LegalPromptFactory = (\n    privacyPolicy: LegalDocument & { type: LegalDocument_Type.PRIVACY_POLICY },\n    termsOfService: LegalDocument & { type: LegalDocument_Type.TERMS_OF_SERVICE },\n    learnMore: LegalDocument & { type: LegalDocument_Type.LEARN_MORE },\n    childrenProtectionActRestricted: boolean\n) => LegalPrompt;\n\nexport type LegalPrompt = {\n    contentHash: string;\n    show: () => Promise<boolean>;\n};\n\n/**\n * @internal\n */\nexport const legalPromptFactory = Injectable(\"legalPrompt\", (): LegalPromptFactory => {\n    return function legalPrompt(\n        privacyPolicy: LegalDocument & { type: LegalDocument_Type.PRIVACY_POLICY },\n        termsOfService: LegalDocument & { type: LegalDocument_Type.TERMS_OF_SERVICE },\n        learnMore: LegalDocument & { type: LegalDocument_Type.LEARN_MORE },\n        childrenProtectionActRestricted: boolean\n    ) {\n        const legalMessage = childrenProtectionActRestricted\n            ? localizedString(\"legalPromptVariantGMessage\")\n            : localizedString(\"legalPromptMessage\")({\n                  privacyPolicyUrl: privacyPolicy.webUrl,\n                  termsOfServiceUrl: termsOfService.webUrl,\n                  learnMoreUrl: learnMore.webUrl,\n              });\n        const legalTitleText = localizedString(\"legalPromptTermsOfService\");\n        const legalTitle = childrenProtectionActRestricted ? legalTitleText : snapIcon;\n\n        return {\n            contentHash: computeHash(legalMessage),\n\n            async show() {\n                if (!childrenProtectionActRestricted) {\n                    return showTosDialog(legalTitle, legalTitleText, legalMessage);\n                }\n\n                while (true) {\n                    const adultOrChild = await showAdultOrChildDialog();\n                    switch (adultOrChild) {\n                        case \"child\": {\n                            const findGuardian = await showFindGuardianDialog();\n                            switch (findGuardian) {\n                                case \"cancel\":\n                                    continue;\n                                case \"guardian\":\n                                    return showTosDialog(legalTitle, legalTitleText, legalMessage);\n                                case \"dismiss\":\n                                    return false;\n                                default:\n                                    assertUnreachable(findGuardian);\n                            }\n                        }\n                        case \"adult\":\n                            return showTosDialog(legalTitle, legalTitleText, legalMessage);\n                        case \"dismiss\":\n                            return false;\n                        default:\n                            assertUnreachable(adultOrChild);\n                    }\n                }\n            },\n        };\n    };\n});\n","import {\n    defineAction,\n    defineActions,\n    defineState,\n    defineStates,\n    dispatch,\n    forActions,\n    inStates,\n    StateMachine,\n} from \"@snap/state-management\";\nimport { catchError, forkJoin, from, map, merge, of, switchMap } from \"rxjs\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport {\n    LegalDocument,\n    LegalDocument_Type,\n    LegalPrompt as LegalPromptProto,\n} from \"../generated-proto/pb_schema/camera_kit/v3/legal_prompt\";\nimport { ConfigResult } from \"../generated-proto/pb_schema/cdp/cof/config_result\";\nimport { getLogger } from \"../logger/logger\";\nimport { ExpiringPersistence } from \"../persistence/ExpiringPersistence\";\nimport { IndexedDBPersistence } from \"../persistence/IndexedDBPersistence\";\nimport { RemoteConfiguration, remoteConfigurationFactory } from \"../remote-configuration/remoteConfiguration\";\nimport { GetInitializationConfigResponse } from \"../generated-proto/pb_schema/camera_kit/v3/service\";\nimport { LegalPromptFactory, legalPromptFactory } from \"./legalPrompt\";\n\nconst logger = getLogger(\"LegalState\");\n\ntype SupportedDocumentType =\n    | LegalDocument_Type.PRIVACY_POLICY\n    | LegalDocument_Type.TERMS_OF_SERVICE\n    | LegalDocument_Type.LEARN_MORE;\n\n/**\n * We store a hash of the last accepted ToS content. This is how we determine if the user previously accepted the\n * relevant ToS.\n *\n * ToS acceptance is only valid for 12 hours. That is, if legal status is checked and the last acceptance occurred more\n * than 12 hours ago, the user must be prompted to accept again.\n */\nconst tosContentHashExpiry = 12 * 60 * 60;\nconst tosContentHashKey = \"lastAcceptedTosContentHash\";\n\nconst createLegalState = () => {\n    const states = defineStates(defineState(\"unknown\")(), defineState(\"accepted\")(), defineState(\"rejected\")());\n\n    const actions = defineActions(\n        defineAction(\"requestLegalPrompt\")(),\n        defineAction(\"accept\")<string>(),\n        defineAction(\"reject\")<string>()\n    );\n\n    return new StateMachine(actions, states, states.unknown(), (actions) => {\n        return merge(\n            actions.pipe(\n                inStates(\"unknown\"),\n                forActions(\"accept\"),\n                map(() => states.accepted())\n            ),\n            actions.pipe(\n                inStates(\"unknown\"),\n                forActions(\"reject\"),\n                map(() => states.rejected())\n            ),\n\n            // We don't treat \"rejected\" as a terminal state -- if we get another request to display the legal prompt,\n            // even though we're in the rejected state, we'll transition back to unknown and the prompt will be shown.\n            //\n            // Conversely, we do treat \"accepted\" as a terminal state -- we will not transition back to unknown or\n            // show the legal prompt if we're already in accepted state, even if we get a request to display the prompt.\n            actions.pipe(\n                inStates(\"rejected\"),\n                forActions(\"requestLegalPrompt\"),\n                map(() => states.unknown())\n            )\n        );\n    });\n};\n\nconst defaultLegalDocumentDate = new Date(\"2021-09-30T00:00:00+00:00\");\nconst defaultLegalPrompt = LegalPromptProto.fromPartial({\n    documents: [\n        LegalDocument.fromPartial({\n            type: LegalDocument_Type.PRIVACY_POLICY,\n            webUrl: \"https://values.snap.com/privacy/privacy-policy\",\n            version: \"1\",\n            timestamp: defaultLegalDocumentDate,\n        }),\n        LegalDocument.fromPartial({\n            type: LegalDocument_Type.TERMS_OF_SERVICE,\n            webUrl: \"https://snap.com/terms\",\n            version: \"1\",\n            timestamp: defaultLegalDocumentDate,\n        }),\n        LegalDocument.fromPartial({\n            type: LegalDocument_Type.LEARN_MORE,\n            webUrl: \"https://support.snapchat.com/article/camera-information-use\",\n            version: \"1\",\n            timestamp: defaultLegalDocumentDate,\n        }),\n    ],\n    // By default, we adopt a fail-open approach, which means that if COF fails,\n    // we do not display ToS for the following reasons:\n    // 1. It provides better experince for big partners with ToS disabled\n    // 2. It has minimal risk\n    disabled: true,\n});\n\nconst defaultInitConfig = GetInitializationConfigResponse.fromPartial({});\n\nconst hasAnyValue = (c: ConfigResult): c is ConfigResult & { value: { anyValue: { value: Uint8Array } } } => {\n    return c.value?.anyValue?.value instanceof Uint8Array;\n};\n\nconst getDocumentOrDefault =\n    (documents: LegalDocument[]) =>\n    <T extends SupportedDocumentType>(type: T): LegalDocument & { type: T } => {\n        return (documents.find((d) => d.type === type) ??\n            defaultLegalPrompt.documents.find((d) => d.type === type)!) as LegalDocument & { type: T };\n    };\n\nexport type LegalState = ReturnType<typeof createLegalState>;\n\n/**\n * We maintain the state of the user's acceptance of Snap's various legal documents. Other components may require that\n * the legal state be \"accepted\" before proceeding (e.g. to apply a lens).\n *\n * On page load, the legal state starts as \"unknown.\" If a request is made to determine the legal state, the following\n * business logic is implemented:\n *\n * 1. Download remote COF config value containing the legal documents + a `disabled` field to optionally skip the legal\n * requirement.\n * 2. Check for a `lastAcceptedTosContentHash` stored in IndexedDB.\n * 3. Prompt the user to accept/reject the legal documents.\n *\n *                     ┌────────────────────────────────────────────────────────┐\n *                     │       COF config value includes \"disabled: true\"       │\n *                     └────────────────────────────────────────────────────────┘\n *                                                  │\n *                                                  │\n *                           ┌────────No────────────┴────────────Yes──────────────────┐\n *                           │                                                        │\n *                           ▼                                                        │\n *        ┌────────────────────────────────────┐                                      ▼\n *        │\"lastAcceptedTosContentHash\" exists │                               ┌────────────┐\n *        └────────────────────────────────────┘                               │  Skip ToS  │\n *                           │                                                 └────────────┘\n *                           │                                                        ▲\n *        ┌─────────────No───┴───────Yes────────────┐                                 │\n *        │                                         │                                 │\n *        │                                         │                                 │\n *        ▼                                         ▼                                 │\n * ┌────────────┐              ┌────────────────────────────────────────┐             │\n * │  Show ToS  │              │  Hash of ToS content from COF matches  │             │\n * └────────────┘              │      \"lastAcceptedTosContentHash\"      │             │\n *        ▲                    └────────────────────────────────────────┘             │\n *        │                                         │                                 │\n *        │                                         │                                 │\n *        └──────────────────No─────────────────────┴───────────────────Yes───────────┘\n *\n * @internal\n */\nexport const legalStateFactory = Injectable(\n    \"legalState\",\n    [remoteConfigurationFactory.token, legalPromptFactory.token] as const,\n    (remoteConfig: RemoteConfiguration, legalPrompt: LegalPromptFactory): LegalState => {\n        const persistance = new ExpiringPersistence<string>(\n            () => tosContentHashExpiry,\n            new IndexedDBPersistence({ databaseName: \"Legal\" })\n        );\n        const getLastAcceptedTosContentHash = () =>\n            from(persistance.retrieve(tosContentHashKey).catch((error) => logger.warn(error)));\n\n        const setLastAcceptedTosContentHash = (hash: string) =>\n            persistance.store(tosContentHashKey, hash).catch((error) => logger.warn(error));\n\n        const legalState = createLegalState();\n\n        legalState.events\n            .pipe(\n                inStates(\"unknown\"),\n                forActions(\"requestLegalPrompt\"),\n                switchMap(() =>\n                    forkJoin({\n                        cofConfig: remoteConfig.get(\"CAMERA_KIT_LEGAL_PROMPT\").pipe(\n                            map((configResults) => {\n                                const config = configResults.find(hasAnyValue);\n                                if (!config) return defaultLegalPrompt;\n                                return LegalPromptProto.decode(config.value.anyValue.value);\n                            }),\n                            catchError((error) => {\n                                logger.error(error);\n                                return of(defaultLegalPrompt);\n                            })\n                        ),\n                        initConfig: remoteConfig.getInitializationConfig().pipe(\n                            catchError((error) => {\n                                logger.error(error);\n                                return of(defaultInitConfig);\n                            })\n                        ),\n                    })\n                ),\n                switchMap(({ cofConfig, initConfig }) => {\n                    // NOTE: Currently, we check two sources to determine whether ToS is disabled or not:\n                    // COF and initConfig. Legal document links are pulled only from COF (or defaults),\n                    // because initConfig has not been implemented yet. In the future, we may choose\n                    // to exclusively use initConfig, which could incorporate the COF call internally:\n                    // https://jira.sc-corp.net/browse/CAMKIT-4791\n\n                    if (initConfig.legalPrompt?.disabled) {\n                        return of(legalState.actions.accept(\"disabled\"));\n                    }\n\n                    if (cofConfig.disabled) {\n                        return of(legalState.actions.accept(\"disabled\"));\n                    }\n\n                    const documentOfType = getDocumentOrDefault(cofConfig.documents);\n                    const prompt = legalPrompt(\n                        documentOfType(LegalDocument_Type.PRIVACY_POLICY),\n                        documentOfType(LegalDocument_Type.TERMS_OF_SERVICE),\n                        documentOfType(LegalDocument_Type.LEARN_MORE),\n                        initConfig.childrenProtectionActRestricted\n                    );\n\n                    return getLastAcceptedTosContentHash().pipe(\n                        switchMap((lastAcceptedTosContentHash) => {\n                            if (prompt.contentHash === lastAcceptedTosContentHash) return of(true);\n\n                            // Delegate prompting the end-user to accept/reject the legal documents. This returns with\n                            // a Promise<boolean> indicating accept/reject.\n                            return prompt.show();\n                        }),\n                        map((didAccept) => {\n                            if (!didAccept) return legalState.actions.reject(prompt.contentHash);\n                            setLastAcceptedTosContentHash(prompt.contentHash);\n                            return legalState.actions.accept(prompt.contentHash);\n                        })\n                    );\n                }),\n                dispatch(legalState)\n            )\n            .subscribe({\n                error: logger.error,\n            });\n\n        return legalState;\n    }\n);\n","import { OperationalMetric } from \"../../generated-proto/pb_schema/camera_kit/v3/operational_metrics\";\n\ntype MetricConstructor<T> = new (name: string, dimensions: MetricDimensions) => T;\n\nconst nameDelimiter = \"_\";\nconst dimensionDelimiter = \".\";\nconst delimiterRegex = new RegExp(`^${nameDelimiter}+|${nameDelimiter}+$`, \"g\");\n\n/** @internal */\nexport type MetricDimensions = Record<string, string | number>;\n\n/** @internal */\nexport abstract class Metric {\n    constructor(readonly name: string, readonly dimensions: MetricDimensions = {}) {}\n\n    child<ChildName extends string, T extends Metric>(\n        constructor: MetricConstructor<T>,\n        name: ChildName,\n        dimensions: MetricDimensions = {}\n    ): T {\n        return new constructor(`${this.name}${nameDelimiter}${name}`, dimensions);\n    }\n\n    abstract toOperationalMetric(): Required<OperationalMetric>[];\n}\n\n/** @internal */\nexport type JoinMetricNames<Parent extends string, Child extends string> = `${Parent}${typeof nameDelimiter}${Child}`;\n\n/** @internal */\nexport function joinMetricNames(names: string[]): string {\n    return names.join(nameDelimiter).replace(delimiterRegex, \"\");\n}\n\n/** @internal */\nexport function serializeMetricDimensions(dimensions: MetricDimensions): string {\n    if (Object.keys(dimensions).length === 0) return \"\";\n    return `${dimensionDelimiter}${Array.from(Object.entries(dimensions))\n        .map((d) => d.join(dimensionDelimiter))\n        .join(dimensionDelimiter)}`;\n}\n","import { getTimeMs } from \"../../common/time\";\nimport { OperationalMetric } from \"../../generated-proto/pb_schema/camera_kit/v3/operational_metrics\";\nimport { JoinMetricNames, Metric, MetricDimensions, joinMetricNames, serializeMetricDimensions } from \"./Metric\";\nimport { OperationalMetricsReporter } from \"./operationalMetricsReporter\";\n\ninterface Measure {\n    name: string;\n    duration: number;\n    dimensions: MetricDimensions;\n}\n\n/** @internal */\nexport type LatencyMetric = OperationalMetric & {\n    metric: Extract<OperationalMetric[\"metric\"], { $case: \"latencyMillis\" }>;\n};\n\n/** @internal */\nexport class Timer<Name extends string> extends Metric {\n    private readonly marks: Set<Timer<string>>;\n    private readonly measures: Set<Measure>;\n    private readonly startTime = getTimeMs();\n    private stopped = false;\n\n    constructor(readonly name: Name, dimensions: MetricDimensions = {}) {\n        super(name, dimensions);\n\n        this.marks = new Set();\n        this.measures = new Set();\n    }\n\n    /**\n     * Return all measures created by this Timer and any child timers.\n     */\n    getMeasures(): ReadonlyArray<Measure> {\n        return Array.from(this.measures.values()).concat(\n            ...Array.from(this.marks.values()).map((mark) => mark.getMeasures())\n        );\n    }\n\n    /**\n     * Create a child Timer, using this Timer's name as a prefix when naming the new Timer. Any measures made with the\n     * child Timer will be included when calling `getMeasures()` on this Timer, or when calling `toOperationalMetric`\n     * on this Timer.\n     *\n     * @example\n     * ```ts\n     * const parent = new Timer('parent')\n     * const child = parent.mark('child') // child metric name is parent_child.\n     *\n     * child.measure()\n     * const measures = parent.getMeasures() // has one element.\n     * ```\n     *\n     * @param name\n     * @param dimensions If omitted, the child timer will NOT inherit dimensions from the parent -- if the child timer\n     * should re-use the parent's dimensions, this must be done explicitly by passing the parent's dimensions as an\n     * argument here.\n     * @returns A child Timer.\n     */\n    mark<MarkName extends string>(\n        name: MarkName,\n        dimensions: MetricDimensions = {}\n    ): Timer<JoinMetricNames<Name, MarkName>> {\n        const mark = new Timer(joinMetricNames([this.name, name]) as JoinMetricNames<Name, MarkName>, dimensions);\n        if (this.stopped) mark.stop();\n        this.marks.add(mark);\n        return mark;\n    }\n\n    /**\n     * Measure the time (in milliseconds) since this Timer was created.\n     *\n     * If a name is provided, the measure's name will be prefixed with the name of this Timer. Otherwise the name of\n     * the measure will be the name of this Timer.\n     *\n     * @example\n     * ```ts\n     * const timer = new Timer('a')\n     * timer.measure('b')\n     * const measures = timer.getMeasures()\n     * // measure[0].name === 'a_b'\n     * ```\n     *\n     * @param name\n     * @returns\n     */\n    measure(name = \"\"): void {\n        if (this.stopped) return;\n        const fullName = joinMetricNames([this.name, name]);\n        const measure: Measure = {\n            name: fullName,\n            duration: getTimeMs() - this.startTime,\n            dimensions: this.dimensions,\n        };\n        this.measures.add(measure);\n    }\n\n    /**\n     * Remove all measures from this Timer and any child timers previously created by calls to `mark()`.\n     */\n    clear(): void {\n        this.measures.clear();\n        this.marks.forEach((mark) => mark.clear());\n    }\n\n    /**\n     * Prevent any future measures from being created by this Timer or any child timers.\n     */\n    stop(): void {\n        this.stopped = true;\n        this.marks.forEach((mark) => mark.stop());\n    }\n\n    /**\n     * Report this metric using {@link OperationalMetricsReporter}.\n     *\n     * After reporting, the Timer can longer be used. Its internal state is cleared and cannot be updated. Calling this\n     * method a second time will no-op.\n     *\n     * @param reporter All measurements will be reported using the given reporter.\n     */\n    async stopAndReport(reporter: OperationalMetricsReporter): Promise<void> {\n        reporter.report(this);\n        this.stop();\n        this.clear();\n    }\n\n    /**\n     * Convert all measures from this Timer and from any child timers into an array of {@link OperationalMeric} objects,\n     * which can be sent to the backend.\n     *\n     * @returns\n     */\n    toOperationalMetric(): LatencyMetric[] {\n        const timestamp = new Date();\n        return this.getMeasures().map((measure) => ({\n            name: `${measure.name}${serializeMetricDimensions(measure.dimensions)}`,\n            timestamp,\n            metric: {\n                $case: \"latencyMillis\",\n                latencyMillis: measure.duration,\n            },\n        }));\n    }\n}\n","import { MonoTypeOperatorFunction, defer, finalize, tap } from \"rxjs\";\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when the source has no\n * more subscribers.\n *\n * This is exactly like the `finalize` operator, exept that the specified function will be called only when the source\n * is explicitly unsubscribed.\n *\n * @param callback Called when the source Observable has no more subscribers.\n * @returns\n */\nexport function unsubscribed<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n    return (source) =>\n        defer(() => {\n            // We can tell if the source is completed or errored -- if neither has happened, we know the source is being\n            // finalized because all subscribers have left.\n            let completedOrErrored = false;\n            return source.pipe(\n                tap({\n                    complete: () => (completedOrErrored = true),\n                    error: () => (completedOrErrored = true),\n                }),\n                finalize(() => {\n                    if (completedOrErrored) return;\n                    callback();\n                })\n            );\n        });\n}\n","import {\n    Actions,\n    defineAction,\n    defineActions,\n    defineState,\n    defineStates,\n    dispatch,\n    forActions,\n    inStates,\n    StateMachine,\n} from \"@snap/state-management\";\nimport {\n    catchError,\n    exhaustMap,\n    from,\n    map,\n    merge,\n    mergeMap,\n    Observable,\n    of,\n    switchMap,\n    take,\n    takeUntil,\n    tap,\n} from \"rxjs\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { Lens } from \"../lens/Lens\";\nimport { LensRepository, lensRepositoryFactory } from \"../lens/LensRepository\";\nimport { lensCoreFactory, LensCore } from \"../lens-core-module\";\nimport { AddLensInput } from \"../lens-core-module/generated-types\";\nimport { IndexedDBPersistence } from \"../persistence/IndexedDBPersistence\";\nimport { lensPersistenceStoreFactory } from \"../lens/LensPersistenceStore\";\nimport { encodeLensLaunchData, LensLaunchData } from \"../lens/LensLaunchData\";\nimport { LegalState, legalStateFactory } from \"../legal/legalState\";\nimport { LensAssetRepository, lensAssetRepositoryFactory } from \"../lens/assets/LensAssetRepository\";\nimport {\n    legalError,\n    LegalError,\n    lensContentValidationError,\n    LensContentValidationError,\n    lensError,\n    LensError,\n} from \"../namedErrors\";\nimport { getLogger } from \"../logger/logger\";\nimport { Timer } from \"../metrics/operational/Timer\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../metrics/operational/operationalMetricsReporter\";\nimport { unsubscribed } from \"../observable-operators/unsubscribed\";\nimport { assertUnreachable } from \"../common/assertions\";\n\nconst logger = getLogger(\"LensState\");\n\nconst createLensState = () => {\n    const actions = defineActions(\n        defineAction(\"applyLens\")<{ lens: Lens; launchData?: LensLaunchData }>(),\n        defineAction(\"downloadComplete\")<Lens>(),\n        defineAction(\"turnedOn\")<Lens>(),\n        defineAction(\"resourcesLoaded\")<Lens>(),\n        defineAction(\"firstFrameProcessed\")<Lens>(),\n        defineAction(\"applyLensComplete\")<Lens>(),\n        defineAction(\"applyLensFailed\")<{ error: LensErrors; lens: Lens }>(),\n        defineAction(\"applyLensAborted\")<Lens>(),\n\n        defineAction(\"removeLens\")(),\n        defineAction(\"turnedOff\")<Lens>(),\n        defineAction(\"removeLensComplete\")(),\n        defineAction(\"removeLensFailed\")<Error>()\n    );\n\n    const states = defineStates(\n        defineState(\"noLensApplied\")(),\n        defineState(\"applyingLens\")<Lens>(),\n        defineState(\"lensApplied\")<Lens>()\n    );\n\n    return new StateMachine(actions, states, states.noLensApplied(), (events) =>\n        merge(\n            events.pipe(\n                // We allow a new lens to be applied at any time, no matter the state.\n                inStates(\"noLensApplied\", \"applyingLens\", \"lensApplied\"),\n                forActions(\"applyLens\"),\n                map(([a]) => states.applyingLens(a.data.lens))\n            ),\n            events.pipe(\n                inStates(\"applyingLens\"),\n                forActions(\"applyLensComplete\"),\n                map(([a]) => states.lensApplied(a.data))\n            ),\n            events.pipe(\n                inStates(\"applyingLens\"),\n                forActions(\"applyLensFailed\"),\n                map(() => states.noLensApplied())\n            ),\n            events.pipe(\n                inStates(\"lensApplied\"),\n                forActions(\"removeLensComplete\"),\n                map(() => states.noLensApplied())\n            )\n        )\n    );\n};\n\nexport type LensErrors = LegalError | LensContentValidationError | LensError;\n\nexport type LensState = ReturnType<typeof createLensState>;\n\nexport const lensStateFactory = Injectable(\n    \"lensState\",\n    [\n        lensCoreFactory.token,\n        lensRepositoryFactory.token,\n        lensAssetRepositoryFactory.token,\n        lensPersistenceStoreFactory.token,\n        legalStateFactory.token,\n        operationalMetricReporterFactory.token,\n    ] as const,\n    (\n        lensCore: LensCore,\n        lensRepository: LensRepository,\n        lensAssetRepository: LensAssetRepository,\n        lensPersistence: IndexedDBPersistence<ArrayBuffer>,\n        legalState: LegalState,\n        operationalMetricsReporter: OperationalMetricsReporter\n    ): LensState => {\n        const lensState = createLensState();\n        let firstLensApply = true;\n\n        /**\n         * Apply lens\n         */\n        lensState.events\n            .pipe(\n                forActions(\"applyLens\"),\n\n                // Determine the legal state (e.g. terms have been accepted). Using exhaustMap means while we are\n                // ascertaining legal status (which may include prompting the end user to accept terms), we will ignore\n                // any new applyLens actions.\n                exhaustMap(([a]) =>\n                    of(legalState.actions.requestLegalPrompt()).pipe(\n                        dispatch(legalState),\n                        inStates(\"accepted\", \"rejected\"),\n                        take(1),\n                        map(([, { name }]) => {\n                            if (name === \"accepted\") return a;\n                            return lensState.actions.applyLensFailed({\n                                error: legalError(\n                                    `Failed to apply lens ${a.data.lens.id}. Required legal terms were not accepted.`\n                                ),\n                                lens: a.data.lens,\n                            });\n                        })\n                    )\n                ),\n\n                // The use of switchMap is important so that if we get a new applyLens action while we're still\n                // downloading lens content for a previously-requested lens, we can cancel those requests and ensure\n                // that lenses are applied in the order they're requested.\n                switchMap((a) => {\n                    if (a.name === \"applyLensFailed\") return of(a);\n\n                    const { lens } = a.data;\n                    // Convenience method making dispatching an action with Lens data less verbose.\n                    const dispatch = (action: Extract<Actions<LensState>, { data: Lens }>[\"name\"]) => {\n                        lensState.dispatch(action, lens);\n                    };\n\n                    // We record if this was the first lens apply for this page load, since there may be additional\n                    // sources of latency (e.g. remote configuration that needs to be loaded) on the first apply that\n                    // are not present for subsequent applies.\n                    const applyTimer = new Timer(\"lens\").mark(\"apply\", { first: `${firstLensApply}` });\n                    firstLensApply = false;\n\n                    return of(a.data).pipe(\n                        mergeMap(({ lens, launchData }) => {\n                            // If retrieval throws an error, we still want to proceed with the lens\n                            // because persisted data is not a necessity.\n                            return from(lensPersistence.retrieve(lens.id).catch(() => undefined)).pipe(\n                                map((persistentStore) => ({ lens, launchData, persistentStore }))\n                            );\n                        }),\n\n                        map(({ lens, launchData, persistentStore }) => {\n                            const lensDetails = lensRepository.getLensMetadata(lens.id);\n                            if (!lensDetails) {\n                                throw new Error(\n                                    `Cannot apply lens ${lens.id}. It has not been loaded by the Lens ` +\n                                        `repository. Use CameraKit.lensRepository.loadLens (or loadLensGroups) ` +\n                                        `to load lens metadata before calling CameraKitSession.applyLens.`\n                                );\n                            }\n\n                            const { content } = lensDetails;\n                            if (!content) {\n                                throw new Error(\n                                    `Cannot apply lens ${lens.id}. Metadata retrieved for this lens does not ` +\n                                        `include the lens content URL.`\n                                );\n                            }\n\n                            return {\n                                lens,\n                                launchData: encodeLensLaunchData(\n                                    launchData ?? {},\n                                    persistentStore ?? new ArrayBuffer(0)\n                                ),\n                                content,\n                            };\n                        }),\n\n                        // Load lens assets and the lens itself in parallel. Both count toward lens download time.\n                        // TODO: use RxJS fetch utilities so that these requests can be cancelled on unsubscribe.\n                        mergeMap(({ lens, launchData, content }) => {\n                            const networkTimer = applyTimer.mark(\"network\");\n\n                            return from(\n                                Promise.all([\n                                    lensRepository.getLensContent(lens).finally(() => networkTimer.measure(\"lens\")),\n                                    content.assetManifest.length > 0\n                                        ? lensAssetRepository\n                                              .cacheAssets(content.assetManifest, lens)\n                                              .finally(() => networkTimer.measure(\"assets\"))\n                                        : Promise.resolve(),\n                                ])\n                            ).pipe(\n                                tap(() => {\n                                    networkTimer.measure();\n                                    lensState.dispatch(\"downloadComplete\", lens);\n                                }),\n                                map(([{ lensBuffer, lensChecksum }]): AddLensInput => {\n                                    // NOTE: cached array buffer has to be copied each time in order to be reused,\n                                    // otherwise the original cached copy would be detached by LensCore\n                                    // One optimization can be done here: do not copy the array if getLensContent()\n                                    // returned uncached buffer\n                                    const lensDataBuffer = lensBuffer.slice(0);\n                                    return { lensId: lens.id, lensDataBuffer, lensChecksum, launchData };\n                                })\n                            );\n                        }),\n\n                        // If removeLens is dispatched while downloading, cancel download, don't apply the lens.\n                        takeUntil(lensState.events.pipe(forActions(\"removeLens\"))),\n\n                        // Once the lens has downloaded, we can call replaceLenses. We're not concerned about\n                        // waiting for prior in-progress calls to replaceLenses to complete, because LensCore\n                        // guarantees that calls to replaceLenses will always be processed sequentially in the order\n                        // they are received.\n                        mergeMap(\n                            (lensInput) =>\n                                new Observable<Actions<LensState>>((subscriber) => {\n                                    const coreTimer = applyTimer.mark(\"core\");\n\n                                    // replaceLenses has the property that if it fails, LensCore guarantees that no\n                                    // lenses are active – so we can safely dispatch applyLensFailed and transition\n                                    // to noLensApplied state.\n                                    lensCore\n                                        .replaceLenses({\n                                            lenses: [\n                                                {\n                                                    ...lensInput,\n                                                    onTurnOn: () => dispatch(\"turnedOn\"),\n                                                    onResourcesLoaded: () => dispatch(\"resourcesLoaded\"),\n\n                                                    // onFirstFrameProcessed marks the end of the lens application for\n                                                    // the end-user -- this is when they see the newly applied lens\n                                                    // begin to render. As such, this is where we stop our overall\n                                                    // latency measurement and report latency metrics.\n                                                    onFirstFrameProcessed: () => {\n                                                        coreTimer.measure(\"first-frame\");\n                                                        applyTimer.measure(\"success\");\n                                                        applyTimer.stopAndReport(operationalMetricsReporter);\n                                                        dispatch(\"firstFrameProcessed\");\n                                                    },\n                                                    onTurnOff: () => dispatch(\"turnedOff\"),\n                                                },\n                                            ],\n                                        })\n                                        .then(() => {\n                                            coreTimer.measure(\"success\");\n\n                                            // We emit applyLensComplete (and applyLensFailed, below) on an\n                                            // Observable, which is piped to `dispatch` – this allows `switchMap` to\n                                            // properly cancel the dispatch of these actions if a new applyLens\n                                            // arrives while we're waiting for onSuccess/onFailure.\n                                            //\n                                            // That's desirable behavior, because we don't want the applyingLens\n                                            // state due to a *subsequent applyLens action* to be transitioned to\n                                            // lensApplied by this action.\n                                            subscriber.next(lensState.actions.applyLensComplete(lens));\n                                            subscriber.complete();\n                                        })\n                                        .catch((lensCoreError) => {\n                                            coreTimer.measure(\"failure\");\n                                            applyTimer.measure(\"failure\");\n                                            applyTimer.stopAndReport(operationalMetricsReporter);\n\n                                            const message = `Failed to apply lens ${lensInput.lensId}.`;\n                                            const error = /validation failed/.test(lensCoreError.message)\n                                                ? lensContentValidationError(message, lensCoreError)\n                                                : lensError(message, lensCoreError);\n\n                                            subscriber.next(lensState.actions.applyLensFailed({ error, lens }));\n                                            subscriber.complete();\n                                        });\n                                })\n                        ),\n                        catchError((error: LensErrors) => {\n                            applyTimer.measure(\"failure\");\n                            applyTimer.stopAndReport(operationalMetricsReporter);\n                            return of(lensState.actions.applyLensFailed({ error, lens }));\n                        }),\n\n                        // If a new applyLens is received, `switchMap` will unsubscribe from this inner observable,\n                        // which stops the current lens application. When this happens we can record a separate metric\n                        // to measure aborted lens applications.\n                        unsubscribed(() => {\n                            applyTimer.measure(\"abort\");\n                            applyTimer.stopAndReport(operationalMetricsReporter);\n                        })\n                    );\n                }),\n                dispatch(lensState)\n            )\n            .subscribe({\n                error: logger.error,\n            });\n\n        /**\n         * Remove lens\n         */\n        lensState.events\n            .pipe(\n                inStates(\"lensApplied\", \"noLensApplied\"),\n                forActions(\"removeLens\"),\n                mergeMap(\n                    () =>\n                        new Observable<Actions<LensState>>((subscriber) => {\n                            lensCore\n                                .clearAllLenses()\n                                .then(() => {\n                                    subscriber.next(lensState.actions.removeLensComplete());\n                                    subscriber.complete();\n                                })\n                                .catch((lensCoreError) => {\n                                    const error = new Error(\"Failed to remove lenses.\", { cause: lensCoreError });\n                                    subscriber.next(lensState.actions.removeLensFailed(error));\n                                    subscriber.complete();\n                                });\n                        })\n                ),\n                dispatch(lensState)\n            )\n            .subscribe({\n                error: logger.error,\n            });\n\n        lensState.events\n            .pipe(\n                inStates(\"applyingLens\"),\n                forActions(\"removeLens\"),\n                switchMap(([a]) =>\n                    lensState.events.pipe(\n                        // Wait to remove the lens until it has been applied.\n                        inStates(\"lensApplied\"),\n                        // But cancel the removal if a new applyLens supercedes the current lens. The goal here is to\n                        // make sure the latest apply/remove pre-empts any previous request to apply/remove.\n                        takeUntil(lensState.events.pipe(forActions(\"applyLens\"))),\n                        map(() => a)\n                    )\n                ),\n                dispatch(lensState)\n            )\n            .subscribe({\n                error: logger.error,\n            });\n\n        // Log transitions\n        lensState.events.subscribe(([a, s]) => {\n            const data = extractLoggableData(a);\n            logger.debug(`Action: \"${a.name}\", state: \"${s.name}\"${data ? \", data: \" + JSON.stringify(data) : \"\"}`);\n        });\n\n        return lensState;\n    }\n);\n\nfunction extractLoggableData(action: Actions<LensState>): Record<string, string> | undefined {\n    switch (action.name) {\n        case \"applyLens\":\n            return { lensId: action.data.lens.id };\n        case \"applyLensFailed\":\n            return { lensId: action.data.lens.id, error: action.data.error.message };\n        case \"downloadComplete\":\n        case \"turnedOn\":\n        case \"resourcesLoaded\":\n        case \"firstFrameProcessed\":\n        case \"applyLensComplete\":\n        case \"applyLensAborted\":\n        case \"turnedOff\":\n            return { lensId: action.data.id };\n        case \"removeLens\":\n        case \"removeLensComplete\":\n            return undefined;\n        case \"removeLensFailed\":\n            return { error: action.data.message };\n        default:\n            assertUnreachable(action);\n    }\n}\n","import {\n    defineAction,\n    defineActions,\n    defineState,\n    defineStates,\n    forActions,\n    StateMachine,\n} from \"@snap/state-management\";\nimport { map, merge } from \"rxjs\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { CameraKitSession } from \"./CameraKitSession\";\n\nconst createSessionState = () => {\n    const actions = defineActions(\n        defineAction(\"suspend\")<CameraKitSession>(),\n        defineAction(\"resume\")<CameraKitSession>(),\n        defineAction(\"destroy\")()\n    );\n\n    const states = defineStates(\n        defineState(\"inactive\")(),\n        defineState(\"active\")<CameraKitSession>(),\n        defineState(\"destroyed\")()\n    );\n\n    return new StateMachine(actions, states, defineState(\"inactive\")()(), (events) => {\n        return merge(\n            events.pipe(\n                forActions(\"resume\"),\n                map(([a]) => states.active(a.data))\n            ),\n            events.pipe(\n                forActions(\"suspend\"),\n                map(() => states.inactive())\n            ),\n            events.pipe(\n                forActions(\"destroy\"),\n                map(() => states.destroyed())\n            )\n        );\n    });\n};\n\nexport type SessionState = ReturnType<typeof createSessionState>;\n\nexport const sessionStateFactory = Injectable(\"sessionState\", (): SessionState => createSessionState());\n","import { isState, forActions } from \"@snap/state-management\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { TypedEventListener, TypedEventListenerOptions, TypedEventTarget } from \"../events/TypedEventTarget\";\nimport { UriHandler } from \"../extensions/UriHandlers\";\nimport { Lens } from \"../lens/Lens\";\nimport { LensState, lensStateFactory } from \"./lensState\";\n\n/**\n * Events emitted by {@link Keyboard}.\n */\nexport type KeyboardEvents = TypedCustomEvent<\n    \"active\",\n    {\n        element: HTMLTextAreaElement;\n        active: boolean;\n        lens?: Lens;\n    }\n>;\n\n/**\n * Keyboard is an API enabling lenses to consume and render user-generated text.\n *\n * Applications that wish to use lenses that expect user-generated text will need to use this API to integrate text\n * input into their user experience.\n *\n * There are two ways to do this:\n * 1. Add the provided DOM element (an HTMLTextAreaElement) to the page. When the user updates this element with text,\n * that text will be sent to the currently active lens.\n * 2. Use the {@link sendInputToLens} method to send text strings to the currently active lens directly.\n *\n * Lenses will also signal to the application when text input is expected -- applications should add an event listener\n * and ensure the user is able to input text when the `active` event is received.\n *\n * @example\n * ```ts\n * cameraKitSession.keyboard.addEventListener('active', ({ detail }) => {\n *   const { element, active } = detail\n *   if (active) document.body.appendChild(element)\n *   else element.remove()\n * })\n * ```\n *\n * @category Lenses\n */\nexport type Keyboard = {\n    addEventListener: (\n        type: \"active\",\n        callback: TypedEventListener<KeyboardEvents>,\n        options?: TypedEventListenerOptions\n    ) => void;\n    removeEventListener: (type: \"active\", callback: TypedEventListener<KeyboardEvents>) => void;\n\n    /**\n     * Get an HTMLTextAreaElement that communicates text to the active Lens.\n     */\n    getElement: () => HTMLTextAreaElement;\n\n    /**\n     * Send text to the active Lens. Also updates the provided HTMLTextAreaElement.\n     *\n     * @param text String to render. This can include escape sequences, such as the newline character ( \\n ) for\n     * multi-line input.\n     */\n    sendInputToLens: (text: string) => void;\n\n    /**\n     * Clears the provided HTMLTextAreaElement, and emits the \"active\" event with `active == false`, allowing the\n     * application to e.g. remove relevant text input elements from the DOM.\n     */\n    dismiss: () => void;\n};\n\n/** @internal */\nexport class LensKeyboard {\n    public readonly uriHandler: UriHandler;\n    private readonly events: TypedEventTarget<KeyboardEvents>;\n    private readonly element: HTMLTextAreaElement;\n    private active: boolean;\n    private handleReply: (text: string) => void;\n\n    constructor(private readonly lensState: LensState) {\n        this.active = false;\n        this.element = document.createElement(\"textarea\");\n        this.element.addEventListener(\"keypress\", (event: KeyboardEvent) => {\n            if (event.code === \"Enter\" && !event.shiftKey) {\n                event.preventDefault();\n                this.handleReply(this.element.value);\n            }\n        });\n        this.events = new TypedEventTarget<KeyboardEvents>();\n        this.handleReply = () => {};\n        this.uriHandler = {\n            uri: \"app://textInput/requestKeyboard\",\n            handleRequest: (_request, reply) => {\n                this.element.autofocus = true;\n                this.handleReply = (text: string) => {\n                    const opt = {\n                        text: text,\n                        start: text.length,\n                        end: text.length,\n                        done: true,\n                        shouldNotify: true,\n                    };\n                    const output = new TextEncoder().encode(JSON.stringify(opt));\n                    reply({\n                        code: 200,\n                        description: \"\",\n                        contentType: \"application/json\",\n                        data: output,\n                    });\n                };\n                this.active = true;\n                this.updateStatus();\n                this.element.focus();\n            },\n        };\n        lensState.events.pipe(forActions(\"turnedOff\")).subscribe(() => {\n            this.dismiss();\n        });\n    }\n\n    dismiss(): void {\n        if (this.active) {\n            this.active = false;\n            this.element.value = \"\";\n            this.updateStatus();\n        }\n    }\n\n    getElement(): HTMLTextAreaElement {\n        return this.element;\n    }\n\n    sendInputToLens(text: string): void {\n        this.element.value = text;\n        this.handleReply(text);\n    }\n\n    addEventListener(\n        type: \"active\",\n        callback: TypedEventListener<KeyboardEvents>,\n        options?: TypedEventListenerOptions\n    ): void {\n        this.events.addEventListener(type, callback, options);\n    }\n\n    removeEventListener(type: \"active\", callback: TypedEventListener<KeyboardEvents>): void {\n        this.events.removeEventListener(type, callback);\n    }\n\n    toPublicInterface(): Keyboard {\n        return {\n            addEventListener: this.addEventListener.bind(this),\n            removeEventListener: this.removeEventListener.bind(this),\n            getElement: this.getElement.bind(this),\n            sendInputToLens: this.sendInputToLens.bind(this),\n            dismiss: this.dismiss.bind(this),\n        };\n    }\n\n    private updateStatus(): void {\n        const state = this.lensState.getState();\n        // If lens keyboard status is changing, we know a lens must be applied.\n        if (isState(state, \"noLensApplied\")) return;\n        this.events.dispatchEvent(\n            new TypedCustomEvent(\"active\", {\n                element: this.element,\n                active: this.active,\n                // If the keyboard is up, it has been triggered by an active lens.\n                lens: state.data,\n            })\n        );\n    }\n}\n\n/**\n * @internal\n */\nexport const lensKeyboardFactory = Injectable(\n    \"lensKeyboard\",\n    [lensStateFactory.token] as const,\n    (lensState: LensState) => new LensKeyboard(lensState)\n);\n","import { CameraKitSourceError, LensExecutionError, LensImagePickerError, LensAbortError } from \"../namedErrors\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { TypedEventListener } from \"../events/TypedEventTarget\";\nimport { Lens } from \"../lens/Lens\";\n\n/**\n * A type guard helper to detect unreachable code.\n */\nconst isReachable = (_: never) => false;\n\n/**\n * Returns true if given value is of {@link SessionErrors} type and false otherwise.\n */\nexport function isSessionError(value: unknown): value is SessionErrors {\n    if (!(value instanceof Error)) return false;\n\n    const maybeSessionErrorName = (value as SessionErrors).name;\n    switch (maybeSessionErrorName) {\n        case \"LensAbortError\":\n        case \"CameraKitSourceError\":\n        case \"LensExecutionError\":\n        case \"LensImagePickerError\":\n            return true;\n        default:\n            return isReachable(maybeSessionErrorName);\n    }\n}\n\n/**\n * Misc errors that occur during CameraKit session.\n * @internal\n */\nexport type SessionErrors = LensExecutionError | LensAbortError | LensImagePickerError | CameraKitSourceError;\n\n/**\n * Events emitted by {@link CameraKitSession.events | CameraKitSession.events}.\n *\n * The following events are emitted:\n *   - `error`: An error has been encountered during lens rendering. May contain an error of type:\n *     - {@link LensExecutionError} If an error of this type occurs, the rendering lens will be automatically removed\n * from the associated CameraKitSession.\n *     - {@link LensImagePickerError}\n *\n * @category Rendering\n * @category Lenses\n */\nexport type CameraKitSessionEvents = TypedCustomEvent<\n    \"error\",\n    { error: LensExecutionError | LensAbortError | LensImagePickerError; lens: Lens }\n>;\n\n/**\n * Listener of {@link CameraKitSessionEvents} events.\n */\nexport type CameraKitSessionEventListener = TypedEventListener<CameraKitSessionEvents>;\n\n/**\n * Returns true if given value is of {@link SessionErrors} type, which is notified to client.\n */\nexport function isPublicLensError(value: unknown): value is CameraKitSessionEvents[\"detail\"][\"error\"] {\n    if (!(value instanceof Error)) return false;\n\n    const maybeSessionErrorName = (value as CameraKitSessionEvents[\"detail\"][\"error\"]).name;\n    switch (maybeSessionErrorName) {\n        case \"LensAbortError\":\n        case \"LensExecutionError\":\n        case \"LensImagePickerError\":\n            return true;\n        default:\n            return isReachable(maybeSessionErrorName);\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport { filter, firstValueFrom, map, Observable, of, Subscription, takeUntil, tap } from \"rxjs\";\nimport { dispatch, forActions, inStates, isAction, isState } from \"@snap/state-management\";\nimport { Lens, isLens } from \"../lens/Lens\";\nimport { CanvasType, LensCore } from \"../lens-core-module\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { lensCoreFactory } from \"../lens-core-module/loader/lensCoreFactory\";\nimport { LensLaunchData } from \"../lens/LensLaunchData\";\nimport { getTypeName, guard, validate } from \"../common/validate\";\nimport { TypedEventTarget } from \"../events/TypedEventTarget\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { CameraKitDeviceOptions, CameraKitSource } from \"../media-sources/CameraKitSource\";\nimport { cameraKitSourceError, LensExecutionError } from \"../namedErrors\";\nimport { createMediaStreamSource } from \"../media-sources/MediaStreamSource\";\nimport { createVideoSource } from \"../media-sources/VideoSource\";\nimport { getLogger, LogEntry } from \"../logger/logger\";\nimport { errorLoggingDecorator } from \"../logger/errorLoggingDecorator\";\nimport { logEntriesFactory } from \"../logger/logEntries\";\nimport { PageVisibility, pageVisibilityFactory } from \"../common/pageVisibility\";\nimport { LensPerformanceMetrics } from \"./LensPerformanceMetrics\";\nimport { lensStateFactory, LensState } from \"./lensState\";\nimport { SessionState, sessionStateFactory } from \"./sessionState\";\nimport { Keyboard, lensKeyboardFactory, LensKeyboard } from \"./LensKeyboard\";\nimport { CameraKitSessionEvents, isPublicLensError, isSessionError } from \"./CameraKitSessionEvents\";\n\nconst logger = getLogger(\"CameraKitSession\");\nconst log = errorLoggingDecorator(logger);\n\nfunction isOptionalRenderTarget(value: unknown): value is RenderTarget | undefined {\n    return value === \"live\" || value === \"capture\" || value === undefined;\n}\n\n/**\n * Enumerates the supported render targets.\n *\n * Lenses may render to different render targets, as designed by the lens creator. In CameraKit, it's possible to choose\n * which render target to render, and the result for each target is available as a separate `<canvas>` element.\n *\n * @category Rendering\n * @category Lenses\n */\nexport type RenderTarget = \"live\" | \"capture\";\n\n/**\n * A CameraKitSession represents a single rendering pipeline connecting an input media source to output `<canvas>`\n * elements. When a Lens is applied to the session, CameraKit uses the Lens to transform the input media into rendered\n * output.\n *\n * CameraKitSession is the primary object that applications interact with when integrating the CameraKit SDK.\n *\n * A CameraKitSession instance is obtained by calling {@link CameraKit.createSession}.\n *\n * @example\n * ```ts\n * const cameraKit = await bootstrapCameraKit(config)\n * const session = await cameraKit.createSession()\n * ```\n *\n * @category Rendering\n * @category Lenses\n */\nexport class CameraKitSession {\n    /**\n     * CameraKitSession renders video output to a `<canvas>` element. In fact, each session contains two canvas outputs\n     * corresponding to the RenderTargets used by Lens creators, when using LensStudio to create a Lens.\n     *\n     * The `live` output renders content suitable for the Lens user (e.g. it may contain additional UI elements\n     * applicable only to the person applying the lens). The `capture` output renders content suitable for sharing with\n     * other users (e.g. sent to the other members of a video call, or saved to disk for sharing later).\n     *\n     * For many lenses, these outputs are identical – but each lens is free to render differently, based on its own\n     * use-case.\n     */\n    readonly output: {\n        live: HTMLCanvasElement;\n        capture: HTMLCanvasElement;\n    };\n\n    /**\n     * Indicates whether or not the session is currently rendering. If `false`, rendering is stopped. Otherwise the\n     * value indicates which output is being rendered.\n     */\n    playing: {\n        live: boolean;\n        capture: boolean;\n    };\n\n    /**\n     * Add event listeners here to handle events which occur during the CameraKitSession.\n     *\n     * **Note:** Applications may want to handle the `error` event, and check the contained error type -- if the type\n     * is {@link LensExecutionError}, this means the current lens was unable to render and CameraKit will automatically\n     * remove the lens.\n     *\n     * @example\n     * ```ts\n     * cameraKitSession.events.addEventListener('error', ({ detail }) => {\n     *   if (detail.error.name === 'LensExecutionError') {\n     *     console.log(`Lens ${detail.lens.name} encountered an error and was removed. Please pick a different lens.`)\n     *   }\n     * })\n     * ```\n     */\n    readonly events = new TypedEventTarget<CameraKitSessionEvents>();\n\n    /**\n     * Use this to measure current lens performance.\n     */\n    readonly metrics: LensPerformanceMetrics;\n\n    private readonly removePageVisibilityHandlers: () => void;\n    private source?: CameraKitSource;\n    private subscriptions: Subscription[];\n\n    /**\n     * @internal\n     */\n    constructor(\n        /**\n         * Use this to interact with lenses which require text input.\n         */\n        public readonly keyboard: Keyboard,\n\n        private readonly lensCore: LensCore,\n        private readonly sessionState: SessionState,\n        private readonly lensState: LensState,\n        logEntries: Observable<LogEntry>,\n        pageVisibility: PageVisibility\n    ) {\n        const outputs = this.lensCore.getOutputCanvases();\n        this.output = {\n            live: outputs[this.lensCore.CanvasType.Preview.value],\n            capture: outputs[this.lensCore.CanvasType.Capture.value],\n        };\n        this.playing = {\n            live: false,\n            capture: false,\n        };\n\n        this.metrics = new LensPerformanceMetrics(this.lensCore);\n\n        const removeOnHidden = pageVisibility.onPageHidden(() => this.sessionState.dispatch(\"suspend\", this));\n        const removeOnVisible = pageVisibility.onPageVisible(() => this.sessionState.dispatch(\"resume\", this));\n        this.removePageVisibilityHandlers = () => {\n            removeOnHidden();\n            removeOnVisible();\n        };\n\n        const sessionErrors = logEntries.pipe(\n            filter((entry) => entry.level === \"error\"),\n            map((entry) => entry.messages.find((e) => e instanceof Error)),\n            filter(isSessionError)\n        );\n\n        this.subscriptions = [\n            // In case of an abort error, the only option is to destroy the current session,\n            // as it becomes inoperable.\n            sessionErrors.pipe(filter((error) => error.name === \"LensAbortError\")).subscribe(() => this.destroy()),\n\n            // In case of LensCore lens execution error, we must remove the lens from rendering\n            // NOTE: LensCore doesn't differentiate recoverable vs non-recoverable errors and\n            // it is recommened to always remove the lens.\n            sessionErrors\n                .pipe(filter((error) => error.name === \"LensExecutionError\"))\n                .subscribe(() => this.removeLens()),\n\n            // Report public session errors to apps\n            sessionErrors.pipe(filter(isPublicLensError)).subscribe((error) => {\n                const state = lensState.getState();\n                if (!isState(state, \"noLensApplied\")) {\n                    this.events.dispatchEvent(new TypedCustomEvent(\"error\", { error, lens: state.data }));\n                } else {\n                    // NOTE: at this point the error is already reported, so we can just log a warning\n                    logger.warn(\"Lens error occurred even though there is no active lens.\", error);\n                }\n            }),\n        ];\n    }\n\n    /**\n     * Apply a Lens to this session.\n     *\n     * This method will download (and cache) the Lens executable, and then use that Lens for rendering. If the session\n     * is currently playing, this will immediately update the rendered output. Otherwise, the new Lens will be used\n     * when session playback in resumed.\n     *\n     * Calling `applyLens` replaces any prior Lens – only one Lens is allowed at a time (per session).\n     *\n     * **NOTE**: Errors may occur after the Lens is applied. If the Lens encounters errors while rendering,\n     * Camera Kit will automatically remove the Lens from the session and emit a {@link LensExecutionError} event.\n     * Applications may want to listen for this error and, for example,\n     * prevent the Lens from being selected again by the user.\n     *\n     * ```ts\n     * session.events.addEventListener(\"error\", ({ detail }) => {\n     *   if (detail.error.name === \"LensExecutionError\") {\n     *     preventFutureLensSelection(detail.lens);\n     *     showMessage(\"We're sorry, but the Lens you selected encountered an error. Please choose a different Lens.\");\n     *   }\n     * });\n     * ```\n     *\n     * @param lens The Lens to apply to this session.\n     * @param launchParams: This can optionally be provided to pass some initial data to the lens – only certain lenses\n     * expect launch data.\n     * @returns A promise which can have the following results:\n     * 1. Resolved with `true`: the lens has been applied.\n     * 2. Resolved with `false`: the lens has not been applied, but no error occurred – this can happen if a\n     * subsequent call to `applyLens` interrupted the lens application.\n     * 3. Rejected: the lens has not been applied because an error occurred. This can happen if:\n     *   - The lens ID cannot be found in the LensRepository (use LensRepository to load the lens before calling this\n     *     method)\n     *   - Lens content download fails, or the download of any required lens assets fails.\n     *   - An internal failure occurs in the Lens rendering engine when attempting to apply the lens.\n     */\n    @validate\n    @log\n    async applyLens(@guard(isLens) lens: Lens, launchData?: LensLaunchData): Promise<boolean> {\n        const action = this.lensState.actions.applyLens({ lens, launchData });\n        return firstValueFrom(\n            of(action).pipe(\n                dispatch(this.lensState),\n\n                // If another applyLens occurs while we're waiting, resolve this applyLens promise early – we're no\n                // longer waiting for the requested lens to be applied.\n                takeUntil(\n                    this.lensState.events.pipe(\n                        forActions(\"applyLens\"),\n                        filter(([a]) => a !== action)\n                    )\n                ),\n\n                // If lens application failed, convert this into a rejected promise by throwing the error.\n                tap(([a]) => {\n                    if (isAction(a, \"applyLensFailed\") && a.data.lens.id === lens.id) throw a.data.error;\n                }),\n\n                inStates(\"lensApplied\"),\n\n                map(() => true)\n            ),\n            // The default value is used if `takeUntil` completes the Observable early – i.e. the lens was not\n            // applied (application was interrupted by a new call to `applyLens`), so we'll resolve with `false`.\n            { defaultValue: false }\n        );\n    }\n\n    /**\n     * Remove a Lens from this session.\n     *\n     * When a Lens is removed, rendering continues if the session is playing. It will just render the session input\n     * directly to the outputs without any image processing.\n     *\n     * @returns A promise which can have the following results:\n     * 1. Resolved with `true`: the session's rendered output has no lens applied.\n     * 2. Resolved with `false`: the current lens has been removed, but a subsequent call to `applyLens` means that the\n     * session's rendered output will still have a (new) lens applied.\n     * 3. Rejected: the lens has failed to be removed. This can happen if an internal failure occurs in the Lens\n     * rendering engine when attempting to remove the lens.\n     */\n    @log\n    async removeLens(): Promise<boolean> {\n        if (isState(this.lensState.getState(), \"noLensApplied\")) return true;\n        return firstValueFrom(\n            of(this.lensState.actions.removeLens()).pipe(\n                dispatch(this.lensState),\n                // If lens removal failed, convert this into a rejected promise by throwing the error.\n                tap(([a]) => {\n                    if (isAction(a, \"removeLensFailed\")) throw a.data;\n                }),\n                inStates(\"noLensApplied\"),\n\n                // If applyLens is called while we're waiting for removal, complete immediately – applying the next lens\n                // will replace the current one.\n                takeUntil(this.lensState.events.pipe(forActions(\"applyLens\"))),\n                map(() => true)\n            ),\n            // The default value is used if `takeUntil` completes the Observable early (otherwise firstValueFrom will\n            // return a rejected Promise).\n            { defaultValue: false }\n        );\n    }\n\n    /**\n     * Start/resume session playback – LensCore will begin rendering frames to the output.\n     *\n     * If no source has been set for the session, calling `play()` will update the playing state, but no actual image\n     * processing will occur until `setSource()` is called.\n     *\n     * @example\n     * ```ts\n     * const cameraKitSession = await cameraKit.createSession()\n     * await cameraKitSession.setSource(mySource)\n     * await cameraKitSession.play()\n     *\n     * // If you call `play` before `setSource`, the call to `play` will resolve but playback will only begin once a\n     * // media source has been set.\n     * ```\n     *\n     * @param target Specify the {@link RenderTarget} to render. Defaults to the `live` RenderTarget.\n     * @returns Promise resolves when playback state has been updated. If no source has been set, this means `play` will\n     * resolve before any frames are processed -- but once a source is set, frames will immediately begin processing.\n     */\n    @validate\n    @log\n    async play(@guard(isOptionalRenderTarget) target: RenderTarget = \"live\"): Promise<void> {\n        if (this.playing[target]) return;\n\n        this.playing[target] = true;\n        const type = this.renderTargetToCanvasType(target);\n        return this.lensCore.playCanvas({ type }).catch((error) => {\n            this.playing[target] = false;\n            throw error;\n        });\n    }\n\n    /**\n     * Pause session playback – LensCore will stop rendering frames to the output.\n     *\n     * @param target Specify the RenderTarget to pause playback. May be either `'live'` or `'capture'`.\n     * Default is `'live'`.\n     * @returns Promise resolves when playback has stopped.\n     */\n    @validate\n    @log\n    async pause(@guard(isOptionalRenderTarget) target: RenderTarget = \"live\"): Promise<void> {\n        if (this.playing[target] === false) return;\n        this.playing[target] = false;\n        const type = this.renderTargetToCanvasType(target);\n        return this.lensCore.pauseCanvas({ type }).catch((error) => {\n            this.playing[target] = true;\n            throw error;\n        });\n    }\n\n    /**\n     * Mute all sounds (default SDK state is unmuted).\n     *\n     * @param fade Do we want audio to fade out?\n     */\n    @log\n    mute(fade: boolean = false): void {\n        this.lensCore.setAllSoundsMuted({\n            muted: true,\n            fade,\n        });\n    }\n\n    /**\n     * Unmute all sounds.\n     *\n     * @param fade Do we want audio to fade in?\n     */\n    @log\n    unmute(fade: boolean = false): void {\n        this.lensCore.setAllSoundsMuted({\n            muted: false,\n            fade,\n        });\n    }\n\n    /**\n     * Set the media source for this session.\n     *\n     * Sessions may only have one source at a time - if `setSource` is called multiple times, subsequent calls replace\n     * the prior source. Setting the source does not trigger rendering (that’s done by `session.play()`). If the session\n     * is already playing, setting the source will immediately begin rendering the new source.\n     *\n     * The CameraKit SDK provides implementations for various common sources, which applications can create using the\n     * following functions:\n     * - {@link createMediaStreamSource}\n     * - {@link createVideoSource}\n     * - {@link createImageSource}\n     *\n     * @param source A CameraKitSource object representing input media (e.g. a webcam stream, video, or some other\n     * source of image data), which CameraKit will supply to Lenses in order for them to render effects on top of that\n     * source.\n     * @returns Promise is resolved when the source has successfully be set. If the session was already in the playing\n     * state, the Promise resolves when the first frame from the new source has been rendered. The resolved value is\n     * the {@link CameraKitSource} object attached to the session.\n     */\n    async setSource(source: CameraKitSource): Promise<CameraKitSource>;\n    async setSource(\n        source: MediaStream | HTMLVideoElement,\n        options?: Partial<CameraKitDeviceOptions>\n    ): Promise<CameraKitSource>;\n    @validate\n    @log\n    async setSource(\n        source: CameraKitSource | MediaStream | HTMLVideoElement,\n        options: Partial<CameraKitDeviceOptions> = {}\n    ): Promise<CameraKitSource> {\n        await this.safelyDetachSource();\n\n        // For convenience, we allow callers to pass in native objects (e.g. MediaStream) as well as CameraKitSource.\n        // Native objects are wrapped in corresponding CameraKitSource classes with default options.\n        const cameraKitSource =\n            source instanceof MediaStream\n                ? createMediaStreamSource(source, options)\n                : source instanceof HTMLVideoElement\n                ? createVideoSource(source, options)\n                : source;\n\n        const priorPlayingState = this.playing;\n        this.playing = {\n            live: false,\n            capture: false,\n        };\n\n        // The source will provide its data to LensCore, and use other LensCore APIs (e.g. setRenderSize,\n        // setInputTransform) to render the source correctly.\n        await cameraKitSource.attach(this.lensCore, (error) => {\n            logger.error(cameraKitSourceError(\"Error occurred during source attachment.\", error));\n        });\n\n        // If attachment is successful, we'll update our source so that we can detach it later.\n        this.source = cameraKitSource;\n\n        // Finally we'll resume playback, if appropriate.\n        if (priorPlayingState.live) await this.play(\"live\");\n        if (priorPlayingState.capture) await this.play(\"capture\");\n\n        return cameraKitSource;\n    }\n\n    /**\n     * Set an FPS limit.\n     *\n     * This may be useful to reduce CPU/GPU resource usage by CameraKit if, for example, the input\n     * media source has a low FPS – CameraKit would then not try to render more frequently than the source produces\n     * new frames.\n     *\n     * This may also be useful to gracefully degrade performance in situations where lowering FPS is preferable over\n     * alternatives.\n     *\n     * @param fpsLimit A maximum FPS, rendering will not exceed this limit\n     * @returns Promise is resolved when the limit is successfully set.\n     */\n    @log\n    async setFPSLimit(fpsLimit: number): Promise<void> {\n        // LensCore uses 0 to remove the limit.\n        const fps = fpsLimit < Number.POSITIVE_INFINITY ? fpsLimit : 0;\n        return this.lensCore.setFPSLimit({ fps });\n    }\n\n    /**\n     * Destroy the session.\n     *\n     * The session will become inoperable. Frame processing stops, and any session-scoped graphical resources are freed.\n     */\n    @log\n    async destroy(): Promise<void> {\n        try {\n            await this.lensCore.clearAllLenses();\n            await this.lensCore.teardown();\n        } catch (error) {\n            // If a LensCore is in an aborted state, the above lines may throw an error.\n            // In such cases, we should continue with the cleanup process.\n            // We are also not interested in reporting these errors to our backend.\n            logger.warn(\"An error occurred in LensCore during the session termination process.\", error);\n        }\n        this.subscriptions.forEach((sub) => sub.unsubscribe());\n        await this.safelyDetachSource();\n        this.removePageVisibilityHandlers();\n        this.sessionState.dispatch(\"destroy\", undefined);\n    }\n\n    private renderTargetToCanvasType(target: RenderTarget): CanvasType {\n        return target === \"capture\" ? this.lensCore.CanvasType.Capture : this.lensCore.CanvasType.Preview;\n    }\n\n    private async safelyDetachSource(): Promise<void> {\n        if (this.source) {\n            try {\n                await this.source.detach((error) => {\n                    logger.error(cameraKitSourceError(\"Error occurred during source detachment.\", error));\n                });\n                // If there's a failure to detach, we will report the error and proceed. Failure to detach may lead to a\n                // memory leak, but it shouldn't prevent us from switching to the new source.\n            } catch (error) {\n                logger.error(\n                    cameraKitSourceError(`Detaching prior source of type ${getTypeName(this.source)} failed.`, error)\n                );\n            }\n        }\n    }\n}\n\n/**\n * @internal\n */\nexport const cameraKitSessionFactory = Injectable(\n    \"CameraKitSession\",\n    [\n        lensCoreFactory.token,\n        logEntriesFactory.token,\n        lensKeyboardFactory.token,\n        sessionStateFactory.token,\n        lensStateFactory.token,\n        pageVisibilityFactory.token,\n    ] as const,\n    (\n        lensCore: LensCore,\n        logEntries: Observable<LogEntry>,\n        keyboard: LensKeyboard,\n        sessionState: SessionState,\n        lensState: LensState,\n        pageVisibility: PageVisibility\n    ) => new CameraKitSession(keyboard, lensCore, sessionState, lensState, logEntries, pageVisibility)\n);\n","import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { lensAssetError } from \"../../namedErrors\";\nimport { lensCoreFactory, LensCore } from \"../../lens-core-module\";\nimport { getLogger } from \"../../logger/logger\";\nimport { MakeTaggedBusinessEvent } from \"../../metrics/businessEventsReporter\";\nimport { toPublicLens } from \"../Lens\";\nimport { LensRepository, lensRepositoryFactory } from \"../LensRepository\";\nimport { LensState, lensStateFactory } from \"../../session/lensState\";\nimport { LensAssetRepository, lensAssetRepositoryFactory } from \"./LensAssetRepository\";\n\nconst logger = getLogger(\"LensAssetProvider\");\nconst maxConsecutiveErrors = 3;\n\n/**\n * The AssetValidationFailed metric reports every time we handle an asset checksum validation failure.\n */\nexport type AssetValidationFailed = MakeTaggedBusinessEvent<\"assetValidationFailed\">;\n\n/**\n * Registers a remote asset provider function with a given instance of LensCore.\n *\n * *Note:* LensCoreModule.initialize must be called on the desired LensCoreModule instance **prior** to passing it\n * to the LensAssetsProvider constructor. If this class is instantiated with a LensCoreModule that has not been\n * initialized, the registry of the asset provider function will fail silently and no remote assets will be loaded.\n * @internal\n */\nexport const registerLensAssetsProvider = Injectable(\n    \"registerLensAssetsProvider\",\n    [\n        lensCoreFactory.token,\n        lensRepositoryFactory.token,\n        lensAssetRepositoryFactory.token,\n        lensStateFactory.token,\n    ] as const,\n    (\n        lensCore: LensCore,\n        lensRepository: LensRepository,\n        lensAssetRepository: LensAssetRepository,\n        lensState: LensState\n    ) => {\n        const consecutiveErrorsPerAsset = new Map<string, number>();\n\n        lensCore.setRemoteAssetsProvider(async (assetDescriptor) => {\n            // Fetch an asset and provide it to LensCore. If fetching the asset fails we give LensCore\n            // an empty response (which it may handle in a variety of ways, e.g. retry, gracefully\n            // degrade lens behavior, throw error) and then reject.\n            const { assetId, assetType, effectId } = assetDescriptor;\n\n            try {\n                if ((consecutiveErrorsPerAsset.get(assetId) ?? 0) > maxConsecutiveErrors) {\n                    throw new Error(`Maximum consecutive asset load errors reached for asset ${assetId}`);\n                }\n                const lensId = effectId ?? lensState.getState().data?.id;\n                const lens = lensId ? lensRepository.getLensMetadata(lensId) : undefined;\n\n                await lensAssetRepository.loadAsset(\n                    assetDescriptor,\n                    lens && toPublicLens(lens),\n                    lens?.content?.assetManifest\n                );\n                consecutiveErrorsPerAsset.set(assetId, 0);\n            } catch (error) {\n                // if an error occurs, LensCore handles things in different ways\n                // depending on the active lens. It might: 1) retry, 2) gracefully degrade lens behavior,\n                // 3) lens JS might throw, which will be passed to the exceptionHandler we register with LensCore.\n                lensCore.provideRemoteAssetsResponse({\n                    assetId,\n                    assetType,\n                });\n\n                const consecutiveErrors = (consecutiveErrorsPerAsset.get(assetId) ?? 0) + 1;\n                consecutiveErrorsPerAsset.set(assetId, consecutiveErrors);\n\n                // We've already reported `maxConsecutiveErrors` number of errors for this asset, so we can skip\n                // logging additional errors.\n                if (consecutiveErrors <= maxConsecutiveErrors) {\n                    logger.error(lensAssetError(`Error occurred while handling lens asset ${assetId} request.`, error));\n                } else {\n                    logger.warn(`Maximum consecutive asset load errors reached for asset ${assetId}`);\n                }\n            }\n        });\n    }\n);\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"com.snap.camerakit.v3.features\";\nexport interface RemoteApiInfo {\n    apiSpecIds: string[];\n}\nfunction createBaseRemoteApiInfo(): RemoteApiInfo {\n    return { apiSpecIds: [] };\n}\nexport const RemoteApiInfo = {\n    encode(message: RemoteApiInfo, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.apiSpecIds) {\n            writer.uint32(10).string(v!);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): RemoteApiInfo {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRemoteApiInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<RemoteApiInfo>, I>>(object: I): RemoteApiInfo {\n        const message = createBaseRemoteApiInfo();\n        message.apiSpecIds = object.apiSpecIds?.map((e) => e) || [];\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport enum HttpRequestMethod {\n    HTTP_METHOD_UNSET = \"HTTP_METHOD_UNSET\",\n    HTTP_METHOD_GET = \"HTTP_METHOD_GET\",\n    HTTP_METHOD_POST = \"HTTP_METHOD_POST\",\n    HTTP_METHOD_PUT = \"HTTP_METHOD_PUT\",\n    HTTP_METHOD_DELETE = \"HTTP_METHOD_DELETE\",\n    HTTP_METHOD_PATCH = \"HTTP_METHOD_PATCH\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function httpRequestMethodFromJSON(object: any): HttpRequestMethod {\n    switch (object) {\n        case 0:\n        case \"HTTP_METHOD_UNSET\":\n            return HttpRequestMethod.HTTP_METHOD_UNSET;\n        case 1:\n        case \"HTTP_METHOD_GET\":\n            return HttpRequestMethod.HTTP_METHOD_GET;\n        case 2:\n        case \"HTTP_METHOD_POST\":\n            return HttpRequestMethod.HTTP_METHOD_POST;\n        case 3:\n        case \"HTTP_METHOD_PUT\":\n            return HttpRequestMethod.HTTP_METHOD_PUT;\n        case 4:\n        case \"HTTP_METHOD_DELETE\":\n            return HttpRequestMethod.HTTP_METHOD_DELETE;\n        case 5:\n        case \"HTTP_METHOD_PATCH\":\n            return HttpRequestMethod.HTTP_METHOD_PATCH;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HttpRequestMethod.UNRECOGNIZED;\n    }\n}\nexport function httpRequestMethodToNumber(object: HttpRequestMethod): number {\n    switch (object) {\n        case HttpRequestMethod.HTTP_METHOD_UNSET:\n            return 0;\n        case HttpRequestMethod.HTTP_METHOD_GET:\n            return 1;\n        case HttpRequestMethod.HTTP_METHOD_POST:\n            return 2;\n        case HttpRequestMethod.HTTP_METHOD_PUT:\n            return 3;\n        case HttpRequestMethod.HTTP_METHOD_DELETE:\n            return 4;\n        case HttpRequestMethod.HTTP_METHOD_PATCH:\n            return 5;\n        default:\n            return 0;\n    }\n}\nexport enum ResponseCode {\n    RESPONSE_CODE_UNSET = \"RESPONSE_CODE_UNSET\",\n    SUCCESS = \"SUCCESS\",\n    REDIRECTED = \"REDIRECTED\",\n    BAD_REQUEST = \"BAD_REQUEST\",\n    ACCESS_DENIED = \"ACCESS_DENIED\",\n    NOT_FOUND = \"NOT_FOUND\",\n    TIMEOUT = \"TIMEOUT\",\n    REQUEST_TOO_LARGE = \"REQUEST_TOO_LARGE\",\n    SERVER_ERROR = \"SERVER_ERROR\",\n    CANCELLED = \"CANCELLED\",\n    PROXY_ERROR = \"PROXY_ERROR\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function responseCodeFromJSON(object: any): ResponseCode {\n    switch (object) {\n        case 0:\n        case \"RESPONSE_CODE_UNSET\":\n            return ResponseCode.RESPONSE_CODE_UNSET;\n        case 1:\n        case \"SUCCESS\":\n            return ResponseCode.SUCCESS;\n        case 2:\n        case \"REDIRECTED\":\n            return ResponseCode.REDIRECTED;\n        case 3:\n        case \"BAD_REQUEST\":\n            return ResponseCode.BAD_REQUEST;\n        case 4:\n        case \"ACCESS_DENIED\":\n            return ResponseCode.ACCESS_DENIED;\n        case 5:\n        case \"NOT_FOUND\":\n            return ResponseCode.NOT_FOUND;\n        case 6:\n        case \"TIMEOUT\":\n            return ResponseCode.TIMEOUT;\n        case 7:\n        case \"REQUEST_TOO_LARGE\":\n            return ResponseCode.REQUEST_TOO_LARGE;\n        case 8:\n        case \"SERVER_ERROR\":\n            return ResponseCode.SERVER_ERROR;\n        case 9:\n        case \"CANCELLED\":\n            return ResponseCode.CANCELLED;\n        case 10:\n        case \"PROXY_ERROR\":\n            return ResponseCode.PROXY_ERROR;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseCode.UNRECOGNIZED;\n    }\n}\nexport function responseCodeToNumber(object: ResponseCode): number {\n    switch (object) {\n        case ResponseCode.RESPONSE_CODE_UNSET:\n            return 0;\n        case ResponseCode.SUCCESS:\n            return 1;\n        case ResponseCode.REDIRECTED:\n            return 2;\n        case ResponseCode.BAD_REQUEST:\n            return 3;\n        case ResponseCode.ACCESS_DENIED:\n            return 4;\n        case ResponseCode.NOT_FOUND:\n            return 5;\n        case ResponseCode.TIMEOUT:\n            return 6;\n        case ResponseCode.REQUEST_TOO_LARGE:\n            return 7;\n        case ResponseCode.SERVER_ERROR:\n            return 8;\n        case ResponseCode.CANCELLED:\n            return 9;\n        case ResponseCode.PROXY_ERROR:\n            return 10;\n        default:\n            return 0;\n    }\n}\nexport interface PerformHttpCallRequest {\n    url: string;\n    method: HttpRequestMethod;\n    headers: {\n        [key: string]: string;\n    };\n    body: Uint8Array;\n    apiSpecId: string;\n    isStudioDev: boolean;\n}\nexport interface PerformHttpCallRequest_HeadersEntry {\n    key: string;\n    value: string;\n}\nexport interface PerformHttpCallResponse {\n    code: number;\n    headers: {\n        [key: string]: string;\n    };\n    body: Uint8Array;\n}\nexport interface PerformHttpCallResponse_HeadersEntry {\n    key: string;\n    value: string;\n}\nexport interface GetOAuth2InfoRequest {\n    apiSpecId: string;\n}\nexport interface GetOAuth2InfoResponse {\n    clientId: string;\n    grantType: GetOAuth2InfoResponse_GrantType;\n    authorizationUrl: string;\n    scope: string;\n}\nexport enum GetOAuth2InfoResponse_GrantType {\n    GRANT_TYPE_UNSET = \"GRANT_TYPE_UNSET\",\n    AUTHORIZATION_CODE = \"AUTHORIZATION_CODE\",\n    AUTHORIZATION_CODE_WITH_PKCE = \"AUTHORIZATION_CODE_WITH_PKCE\",\n    IMPLICIT = \"IMPLICIT\",\n    CLIENT_CREDENTIALS = \"CLIENT_CREDENTIALS\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function getOAuth2InfoResponse_GrantTypeFromJSON(object: any): GetOAuth2InfoResponse_GrantType {\n    switch (object) {\n        case 0:\n        case \"GRANT_TYPE_UNSET\":\n            return GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET;\n        case 1:\n        case \"AUTHORIZATION_CODE\":\n            return GetOAuth2InfoResponse_GrantType.AUTHORIZATION_CODE;\n        case 2:\n        case \"AUTHORIZATION_CODE_WITH_PKCE\":\n            return GetOAuth2InfoResponse_GrantType.AUTHORIZATION_CODE_WITH_PKCE;\n        case 3:\n        case \"IMPLICIT\":\n            return GetOAuth2InfoResponse_GrantType.IMPLICIT;\n        case 4:\n        case \"CLIENT_CREDENTIALS\":\n            return GetOAuth2InfoResponse_GrantType.CLIENT_CREDENTIALS;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return GetOAuth2InfoResponse_GrantType.UNRECOGNIZED;\n    }\n}\nexport function getOAuth2InfoResponse_GrantTypeToNumber(object: GetOAuth2InfoResponse_GrantType): number {\n    switch (object) {\n        case GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET:\n            return 0;\n        case GetOAuth2InfoResponse_GrantType.AUTHORIZATION_CODE:\n            return 1;\n        case GetOAuth2InfoResponse_GrantType.AUTHORIZATION_CODE_WITH_PKCE:\n            return 2;\n        case GetOAuth2InfoResponse_GrantType.IMPLICIT:\n            return 3;\n        case GetOAuth2InfoResponse_GrantType.CLIENT_CREDENTIALS:\n            return 4;\n        default:\n            return 0;\n    }\n}\nexport interface TokenExchangeError {\n    error: TokenExchangeError_TokenExchangeErrorType;\n    errorDescription: string;\n}\nexport enum TokenExchangeError_TokenExchangeErrorType {\n    ERROR_TYPE_UNSET = \"ERROR_TYPE_UNSET\",\n    INVALID_REQUEST = \"INVALID_REQUEST\",\n    INVALID_CLIENT = \"INVALID_CLIENT\",\n    INVALID_GRANT = \"INVALID_GRANT\",\n    UNAUTHORIZED_CLIENT = \"UNAUTHORIZED_CLIENT\",\n    UNSUPPORTED_GRANT_TYPE = \"UNSUPPORTED_GRANT_TYPE\",\n    INVALID_SCOPE = \"INVALID_SCOPE\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function tokenExchangeError_TokenExchangeErrorTypeFromJSON(object: any): TokenExchangeError_TokenExchangeErrorType {\n    switch (object) {\n        case 0:\n        case \"ERROR_TYPE_UNSET\":\n            return TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET;\n        case 1:\n        case \"INVALID_REQUEST\":\n            return TokenExchangeError_TokenExchangeErrorType.INVALID_REQUEST;\n        case 2:\n        case \"INVALID_CLIENT\":\n            return TokenExchangeError_TokenExchangeErrorType.INVALID_CLIENT;\n        case 3:\n        case \"INVALID_GRANT\":\n            return TokenExchangeError_TokenExchangeErrorType.INVALID_GRANT;\n        case 4:\n        case \"UNAUTHORIZED_CLIENT\":\n            return TokenExchangeError_TokenExchangeErrorType.UNAUTHORIZED_CLIENT;\n        case 5:\n        case \"UNSUPPORTED_GRANT_TYPE\":\n            return TokenExchangeError_TokenExchangeErrorType.UNSUPPORTED_GRANT_TYPE;\n        case 6:\n        case \"INVALID_SCOPE\":\n            return TokenExchangeError_TokenExchangeErrorType.INVALID_SCOPE;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return TokenExchangeError_TokenExchangeErrorType.UNRECOGNIZED;\n    }\n}\nexport function tokenExchangeError_TokenExchangeErrorTypeToNumber(object: TokenExchangeError_TokenExchangeErrorType): number {\n    switch (object) {\n        case TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET:\n            return 0;\n        case TokenExchangeError_TokenExchangeErrorType.INVALID_REQUEST:\n            return 1;\n        case TokenExchangeError_TokenExchangeErrorType.INVALID_CLIENT:\n            return 2;\n        case TokenExchangeError_TokenExchangeErrorType.INVALID_GRANT:\n            return 3;\n        case TokenExchangeError_TokenExchangeErrorType.UNAUTHORIZED_CLIENT:\n            return 4;\n        case TokenExchangeError_TokenExchangeErrorType.UNSUPPORTED_GRANT_TYPE:\n            return 5;\n        case TokenExchangeError_TokenExchangeErrorType.INVALID_SCOPE:\n            return 6;\n        default:\n            return 0;\n    }\n}\nexport interface TokenDetails {\n    accessToken: string;\n    tokenType: string;\n    expiresInSeconds: number;\n    refreshToken: string;\n    scope: string;\n}\nexport interface PerformTokenExchangeRequest {\n    apiSpecId: string;\n    authorizationCode: string;\n    codeVerifier: string;\n}\nexport interface PerformTokenExchangeResponse {\n    response?: {\n        $case: \"tokenDetails\";\n        tokenDetails: TokenDetails;\n    } | {\n        $case: \"error\";\n        error: TokenExchangeError;\n    };\n}\nexport interface RefreshTokenRequest {\n    apiSpecId: string;\n    refreshToken: string;\n}\nexport interface RefreshTokenResponse {\n    response?: {\n        $case: \"tokenDetails\";\n        tokenDetails: TokenDetails;\n    } | {\n        $case: \"error\";\n        error: TokenExchangeError;\n    };\n}\nexport interface PerformApiCallRequest {\n    apiSpecSetId: string;\n    endpointRefId: string;\n    parameters: {\n        [key: string]: string;\n    };\n    body: Uint8Array;\n    lensId: string;\n    isStudioDev: boolean;\n    cacheTtlSec: number;\n    linkedResources: LinkedResource[];\n}\nexport interface PerformApiCallRequest_ParametersEntry {\n    key: string;\n    value: string;\n}\nexport interface PerformApiCallResponse {\n    responseCode: ResponseCode;\n    metadata: {\n        [key: string]: string;\n    };\n    body: Uint8Array;\n    userLocationUsed: boolean;\n    linkedResources: LinkedResource[];\n}\nexport interface PerformApiCallResponse_MetadataEntry {\n    key: string;\n    value: string;\n}\nexport interface LinkedResource {\n    url: string;\n    encryptionKey: Uint8Array;\n}\nfunction createBasePerformHttpCallRequest(): PerformHttpCallRequest {\n    return {\n        url: \"\",\n        method: HttpRequestMethod.HTTP_METHOD_UNSET,\n        headers: {},\n        body: new Uint8Array(),\n        apiSpecId: \"\",\n        isStudioDev: false,\n    };\n}\nexport const PerformHttpCallRequest = {\n    encode(message: PerformHttpCallRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.url !== \"\") {\n            writer.uint32(10).string(message.url);\n        }\n        if (message.method !== HttpRequestMethod.HTTP_METHOD_UNSET) {\n            writer.uint32(16).int32(httpRequestMethodToNumber(message.method));\n        }\n        Object.entries(message.headers).forEach(([key, value]) => {\n            PerformHttpCallRequest_HeadersEntry.encode({ key: key as any, value }, writer.uint32(26).fork()).ldelim();\n        });\n        if (message.body.length !== 0) {\n            writer.uint32(34).bytes(message.body);\n        }\n        if (message.apiSpecId !== \"\") {\n            writer.uint32(42).string(message.apiSpecId);\n        }\n        if (message.isStudioDev === true) {\n            writer.uint32(48).bool(message.isStudioDev);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformHttpCallRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformHttpCallRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.url = reader.string();\n                    break;\n                case 2:\n                    message.method = httpRequestMethodFromJSON(reader.int32());\n                    break;\n                case 3:\n                    const entry3 = PerformHttpCallRequest_HeadersEntry.decode(reader, reader.uint32());\n                    if (entry3.value !== undefined) {\n                        message.headers[entry3.key] = entry3.value;\n                    }\n                    break;\n                case 4:\n                    message.body = reader.bytes();\n                    break;\n                case 5:\n                    message.apiSpecId = reader.string();\n                    break;\n                case 6:\n                    message.isStudioDev = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformHttpCallRequest>, I>>(object: I): PerformHttpCallRequest {\n        const message = createBasePerformHttpCallRequest();\n        message.url = object.url ?? \"\";\n        message.method = object.method ?? HttpRequestMethod.HTTP_METHOD_UNSET;\n        message.headers = Object.entries(object.headers ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.body = object.body ?? new Uint8Array();\n        message.apiSpecId = object.apiSpecId ?? \"\";\n        message.isStudioDev = object.isStudioDev ?? false;\n        return message;\n    },\n};\nfunction createBasePerformHttpCallRequest_HeadersEntry(): PerformHttpCallRequest_HeadersEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PerformHttpCallRequest_HeadersEntry = {\n    encode(message: PerformHttpCallRequest_HeadersEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformHttpCallRequest_HeadersEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformHttpCallRequest_HeadersEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformHttpCallRequest_HeadersEntry>, I>>(object: I): PerformHttpCallRequest_HeadersEntry {\n        const message = createBasePerformHttpCallRequest_HeadersEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBasePerformHttpCallResponse(): PerformHttpCallResponse {\n    return { code: 0, headers: {}, body: new Uint8Array() };\n}\nexport const PerformHttpCallResponse = {\n    encode(message: PerformHttpCallResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.code !== 0) {\n            writer.uint32(8).int32(message.code);\n        }\n        Object.entries(message.headers).forEach(([key, value]) => {\n            PerformHttpCallResponse_HeadersEntry.encode({ key: key as any, value }, writer.uint32(18).fork()).ldelim();\n        });\n        if (message.body.length !== 0) {\n            writer.uint32(26).bytes(message.body);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformHttpCallResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformHttpCallResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.int32();\n                    break;\n                case 2:\n                    const entry2 = PerformHttpCallResponse_HeadersEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.headers[entry2.key] = entry2.value;\n                    }\n                    break;\n                case 3:\n                    message.body = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformHttpCallResponse>, I>>(object: I): PerformHttpCallResponse {\n        const message = createBasePerformHttpCallResponse();\n        message.code = object.code ?? 0;\n        message.headers = Object.entries(object.headers ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.body = object.body ?? new Uint8Array();\n        return message;\n    },\n};\nfunction createBasePerformHttpCallResponse_HeadersEntry(): PerformHttpCallResponse_HeadersEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PerformHttpCallResponse_HeadersEntry = {\n    encode(message: PerformHttpCallResponse_HeadersEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformHttpCallResponse_HeadersEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformHttpCallResponse_HeadersEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformHttpCallResponse_HeadersEntry>, I>>(object: I): PerformHttpCallResponse_HeadersEntry {\n        const message = createBasePerformHttpCallResponse_HeadersEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetOAuth2InfoRequest(): GetOAuth2InfoRequest {\n    return { apiSpecId: \"\" };\n}\nexport const GetOAuth2InfoRequest = {\n    encode(message: GetOAuth2InfoRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.apiSpecId !== \"\") {\n            writer.uint32(10).string(message.apiSpecId);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetOAuth2InfoRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetOAuth2InfoRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetOAuth2InfoRequest>, I>>(object: I): GetOAuth2InfoRequest {\n        const message = createBaseGetOAuth2InfoRequest();\n        message.apiSpecId = object.apiSpecId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetOAuth2InfoResponse(): GetOAuth2InfoResponse {\n    return { clientId: \"\", grantType: GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET, authorizationUrl: \"\", scope: \"\" };\n}\nexport const GetOAuth2InfoResponse = {\n    encode(message: GetOAuth2InfoResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.grantType !== GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET) {\n            writer.uint32(16).int32(getOAuth2InfoResponse_GrantTypeToNumber(message.grantType));\n        }\n        if (message.authorizationUrl !== \"\") {\n            writer.uint32(26).string(message.authorizationUrl);\n        }\n        if (message.scope !== \"\") {\n            writer.uint32(34).string(message.scope);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): GetOAuth2InfoResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetOAuth2InfoResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.grantType = getOAuth2InfoResponse_GrantTypeFromJSON(reader.int32());\n                    break;\n                case 3:\n                    message.authorizationUrl = reader.string();\n                    break;\n                case 4:\n                    message.scope = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<GetOAuth2InfoResponse>, I>>(object: I): GetOAuth2InfoResponse {\n        const message = createBaseGetOAuth2InfoResponse();\n        message.clientId = object.clientId ?? \"\";\n        message.grantType = object.grantType ?? GetOAuth2InfoResponse_GrantType.GRANT_TYPE_UNSET;\n        message.authorizationUrl = object.authorizationUrl ?? \"\";\n        message.scope = object.scope ?? \"\";\n        return message;\n    },\n};\nfunction createBaseTokenExchangeError(): TokenExchangeError {\n    return { error: TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET, errorDescription: \"\" };\n}\nexport const TokenExchangeError = {\n    encode(message: TokenExchangeError, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.error !== TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET) {\n            writer.uint32(8).int32(tokenExchangeError_TokenExchangeErrorTypeToNumber(message.error));\n        }\n        if (message.errorDescription !== \"\") {\n            writer.uint32(18).string(message.errorDescription);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): TokenExchangeError {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTokenExchangeError();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = tokenExchangeError_TokenExchangeErrorTypeFromJSON(reader.int32());\n                    break;\n                case 2:\n                    message.errorDescription = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<TokenExchangeError>, I>>(object: I): TokenExchangeError {\n        const message = createBaseTokenExchangeError();\n        message.error = object.error ?? TokenExchangeError_TokenExchangeErrorType.ERROR_TYPE_UNSET;\n        message.errorDescription = object.errorDescription ?? \"\";\n        return message;\n    },\n};\nfunction createBaseTokenDetails(): TokenDetails {\n    return { accessToken: \"\", tokenType: \"\", expiresInSeconds: 0, refreshToken: \"\", scope: \"\" };\n}\nexport const TokenDetails = {\n    encode(message: TokenDetails, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.accessToken !== \"\") {\n            writer.uint32(10).string(message.accessToken);\n        }\n        if (message.tokenType !== \"\") {\n            writer.uint32(18).string(message.tokenType);\n        }\n        if (message.expiresInSeconds !== 0) {\n            writer.uint32(24).int64(message.expiresInSeconds);\n        }\n        if (message.refreshToken !== \"\") {\n            writer.uint32(34).string(message.refreshToken);\n        }\n        if (message.scope !== \"\") {\n            writer.uint32(42).string(message.scope);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): TokenDetails {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTokenDetails();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.accessToken = reader.string();\n                    break;\n                case 2:\n                    message.tokenType = reader.string();\n                    break;\n                case 3:\n                    message.expiresInSeconds = longToNumber(reader.int64() as Long);\n                    break;\n                case 4:\n                    message.refreshToken = reader.string();\n                    break;\n                case 5:\n                    message.scope = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<TokenDetails>, I>>(object: I): TokenDetails {\n        const message = createBaseTokenDetails();\n        message.accessToken = object.accessToken ?? \"\";\n        message.tokenType = object.tokenType ?? \"\";\n        message.expiresInSeconds = object.expiresInSeconds ?? 0;\n        message.refreshToken = object.refreshToken ?? \"\";\n        message.scope = object.scope ?? \"\";\n        return message;\n    },\n};\nfunction createBasePerformTokenExchangeRequest(): PerformTokenExchangeRequest {\n    return { apiSpecId: \"\", authorizationCode: \"\", codeVerifier: \"\" };\n}\nexport const PerformTokenExchangeRequest = {\n    encode(message: PerformTokenExchangeRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.apiSpecId !== \"\") {\n            writer.uint32(10).string(message.apiSpecId);\n        }\n        if (message.authorizationCode !== \"\") {\n            writer.uint32(18).string(message.authorizationCode);\n        }\n        if (message.codeVerifier !== \"\") {\n            writer.uint32(26).string(message.codeVerifier);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformTokenExchangeRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformTokenExchangeRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecId = reader.string();\n                    break;\n                case 2:\n                    message.authorizationCode = reader.string();\n                    break;\n                case 3:\n                    message.codeVerifier = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformTokenExchangeRequest>, I>>(object: I): PerformTokenExchangeRequest {\n        const message = createBasePerformTokenExchangeRequest();\n        message.apiSpecId = object.apiSpecId ?? \"\";\n        message.authorizationCode = object.authorizationCode ?? \"\";\n        message.codeVerifier = object.codeVerifier ?? \"\";\n        return message;\n    },\n};\nfunction createBasePerformTokenExchangeResponse(): PerformTokenExchangeResponse {\n    return { response: undefined };\n}\nexport const PerformTokenExchangeResponse = {\n    encode(message: PerformTokenExchangeResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.response?.$case === \"tokenDetails\") {\n            TokenDetails.encode(message.response.tokenDetails, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.response?.$case === \"error\") {\n            TokenExchangeError.encode(message.response.error, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformTokenExchangeResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformTokenExchangeResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.response = { $case: \"tokenDetails\", tokenDetails: TokenDetails.decode(reader, reader.uint32()) };\n                    break;\n                case 2:\n                    message.response = { $case: \"error\", error: TokenExchangeError.decode(reader, reader.uint32()) };\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformTokenExchangeResponse>, I>>(object: I): PerformTokenExchangeResponse {\n        const message = createBasePerformTokenExchangeResponse();\n        if (object.response?.$case === \"tokenDetails\" &&\n            object.response?.tokenDetails !== undefined &&\n            object.response?.tokenDetails !== null) {\n            message.response = {\n                $case: \"tokenDetails\",\n                tokenDetails: TokenDetails.fromPartial(object.response.tokenDetails),\n            };\n        }\n        if (object.response?.$case === \"error\" && object.response?.error !== undefined && object.response?.error !== null) {\n            message.response = { $case: \"error\", error: TokenExchangeError.fromPartial(object.response.error) };\n        }\n        return message;\n    },\n};\nfunction createBaseRefreshTokenRequest(): RefreshTokenRequest {\n    return { apiSpecId: \"\", refreshToken: \"\" };\n}\nexport const RefreshTokenRequest = {\n    encode(message: RefreshTokenRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.apiSpecId !== \"\") {\n            writer.uint32(10).string(message.apiSpecId);\n        }\n        if (message.refreshToken !== \"\") {\n            writer.uint32(18).string(message.refreshToken);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): RefreshTokenRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRefreshTokenRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecId = reader.string();\n                    break;\n                case 2:\n                    message.refreshToken = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<RefreshTokenRequest>, I>>(object: I): RefreshTokenRequest {\n        const message = createBaseRefreshTokenRequest();\n        message.apiSpecId = object.apiSpecId ?? \"\";\n        message.refreshToken = object.refreshToken ?? \"\";\n        return message;\n    },\n};\nfunction createBaseRefreshTokenResponse(): RefreshTokenResponse {\n    return { response: undefined };\n}\nexport const RefreshTokenResponse = {\n    encode(message: RefreshTokenResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.response?.$case === \"tokenDetails\") {\n            TokenDetails.encode(message.response.tokenDetails, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.response?.$case === \"error\") {\n            TokenExchangeError.encode(message.response.error, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): RefreshTokenResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRefreshTokenResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.response = { $case: \"tokenDetails\", tokenDetails: TokenDetails.decode(reader, reader.uint32()) };\n                    break;\n                case 2:\n                    message.response = { $case: \"error\", error: TokenExchangeError.decode(reader, reader.uint32()) };\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<RefreshTokenResponse>, I>>(object: I): RefreshTokenResponse {\n        const message = createBaseRefreshTokenResponse();\n        if (object.response?.$case === \"tokenDetails\" &&\n            object.response?.tokenDetails !== undefined &&\n            object.response?.tokenDetails !== null) {\n            message.response = {\n                $case: \"tokenDetails\",\n                tokenDetails: TokenDetails.fromPartial(object.response.tokenDetails),\n            };\n        }\n        if (object.response?.$case === \"error\" && object.response?.error !== undefined && object.response?.error !== null) {\n            message.response = { $case: \"error\", error: TokenExchangeError.fromPartial(object.response.error) };\n        }\n        return message;\n    },\n};\nfunction createBasePerformApiCallRequest(): PerformApiCallRequest {\n    return {\n        apiSpecSetId: \"\",\n        endpointRefId: \"\",\n        parameters: {},\n        body: new Uint8Array(),\n        lensId: \"\",\n        isStudioDev: false,\n        cacheTtlSec: 0,\n        linkedResources: [],\n    };\n}\nexport const PerformApiCallRequest = {\n    encode(message: PerformApiCallRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.apiSpecSetId !== \"\") {\n            writer.uint32(10).string(message.apiSpecSetId);\n        }\n        if (message.endpointRefId !== \"\") {\n            writer.uint32(18).string(message.endpointRefId);\n        }\n        Object.entries(message.parameters).forEach(([key, value]) => {\n            PerformApiCallRequest_ParametersEntry.encode({ key: key as any, value }, writer.uint32(26).fork()).ldelim();\n        });\n        if (message.body.length !== 0) {\n            writer.uint32(34).bytes(message.body);\n        }\n        if (message.lensId !== \"\") {\n            writer.uint32(42).string(message.lensId);\n        }\n        if (message.isStudioDev === true) {\n            writer.uint32(48).bool(message.isStudioDev);\n        }\n        if (message.cacheTtlSec !== 0) {\n            writer.uint32(56).int32(message.cacheTtlSec);\n        }\n        for (const v of message.linkedResources) {\n            LinkedResource.encode(v!, writer.uint32(66).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformApiCallRequest {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformApiCallRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.apiSpecSetId = reader.string();\n                    break;\n                case 2:\n                    message.endpointRefId = reader.string();\n                    break;\n                case 3:\n                    const entry3 = PerformApiCallRequest_ParametersEntry.decode(reader, reader.uint32());\n                    if (entry3.value !== undefined) {\n                        message.parameters[entry3.key] = entry3.value;\n                    }\n                    break;\n                case 4:\n                    message.body = reader.bytes();\n                    break;\n                case 5:\n                    message.lensId = reader.string();\n                    break;\n                case 6:\n                    message.isStudioDev = reader.bool();\n                    break;\n                case 7:\n                    message.cacheTtlSec = reader.int32();\n                    break;\n                case 8:\n                    message.linkedResources.push(LinkedResource.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformApiCallRequest>, I>>(object: I): PerformApiCallRequest {\n        const message = createBasePerformApiCallRequest();\n        message.apiSpecSetId = object.apiSpecSetId ?? \"\";\n        message.endpointRefId = object.endpointRefId ?? \"\";\n        message.parameters = Object.entries(object.parameters ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.body = object.body ?? new Uint8Array();\n        message.lensId = object.lensId ?? \"\";\n        message.isStudioDev = object.isStudioDev ?? false;\n        message.cacheTtlSec = object.cacheTtlSec ?? 0;\n        message.linkedResources = object.linkedResources?.map((e) => LinkedResource.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBasePerformApiCallRequest_ParametersEntry(): PerformApiCallRequest_ParametersEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PerformApiCallRequest_ParametersEntry = {\n    encode(message: PerformApiCallRequest_ParametersEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformApiCallRequest_ParametersEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformApiCallRequest_ParametersEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformApiCallRequest_ParametersEntry>, I>>(object: I): PerformApiCallRequest_ParametersEntry {\n        const message = createBasePerformApiCallRequest_ParametersEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBasePerformApiCallResponse(): PerformApiCallResponse {\n    return {\n        responseCode: ResponseCode.RESPONSE_CODE_UNSET,\n        metadata: {},\n        body: new Uint8Array(),\n        userLocationUsed: false,\n        linkedResources: [],\n    };\n}\nexport const PerformApiCallResponse = {\n    encode(message: PerformApiCallResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.responseCode !== ResponseCode.RESPONSE_CODE_UNSET) {\n            writer.uint32(8).int32(responseCodeToNumber(message.responseCode));\n        }\n        Object.entries(message.metadata).forEach(([key, value]) => {\n            PerformApiCallResponse_MetadataEntry.encode({ key: key as any, value }, writer.uint32(18).fork()).ldelim();\n        });\n        if (message.body.length !== 0) {\n            writer.uint32(26).bytes(message.body);\n        }\n        if (message.userLocationUsed === true) {\n            writer.uint32(32).bool(message.userLocationUsed);\n        }\n        for (const v of message.linkedResources) {\n            LinkedResource.encode(v!, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformApiCallResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformApiCallResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.responseCode = responseCodeFromJSON(reader.int32());\n                    break;\n                case 2:\n                    const entry2 = PerformApiCallResponse_MetadataEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.metadata[entry2.key] = entry2.value;\n                    }\n                    break;\n                case 3:\n                    message.body = reader.bytes();\n                    break;\n                case 4:\n                    message.userLocationUsed = reader.bool();\n                    break;\n                case 5:\n                    message.linkedResources.push(LinkedResource.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformApiCallResponse>, I>>(object: I): PerformApiCallResponse {\n        const message = createBasePerformApiCallResponse();\n        message.responseCode = object.responseCode ?? ResponseCode.RESPONSE_CODE_UNSET;\n        message.metadata = Object.entries(object.metadata ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = String(value);\n            }\n            return acc;\n        }, {});\n        message.body = object.body ?? new Uint8Array();\n        message.userLocationUsed = object.userLocationUsed ?? false;\n        message.linkedResources = object.linkedResources?.map((e) => LinkedResource.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBasePerformApiCallResponse_MetadataEntry(): PerformApiCallResponse_MetadataEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PerformApiCallResponse_MetadataEntry = {\n    encode(message: PerformApiCallResponse_MetadataEntry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): PerformApiCallResponse_MetadataEntry {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerformApiCallResponse_MetadataEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<PerformApiCallResponse_MetadataEntry>, I>>(object: I): PerformApiCallResponse_MetadataEntry {\n        const message = createBasePerformApiCallResponse_MetadataEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseLinkedResource(): LinkedResource {\n    return { url: \"\", encryptionKey: new Uint8Array() };\n}\nexport const LinkedResource = {\n    encode(message: LinkedResource, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.url !== \"\") {\n            writer.uint32(10).string(message.url);\n        }\n        if (message.encryptionKey.length !== 0) {\n            writer.uint32(18).bytes(message.encryptionKey);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): LinkedResource {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLinkedResource();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.url = reader.string();\n                    break;\n                case 2:\n                    message.encryptionKey = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<LinkedResource>, I>>(object: I): LinkedResource {\n        const message = createBaseLinkedResource();\n        message.url = object.url ?? \"\";\n        message.encryptionKey = object.encryptionKey ?? new Uint8Array();\n        return message;\n    },\n};\nexport interface RemoteApiService {\n    PerformHttpCall(request: PerformHttpCallRequest): Promise<PerformHttpCallResponse>;\n    GetOAuth2Info(request: GetOAuth2InfoRequest): Promise<GetOAuth2InfoResponse>;\n    PerformTokenExchange(request: PerformTokenExchangeRequest): Promise<PerformTokenExchangeResponse>;\n    RefreshToken(request: RefreshTokenRequest): Promise<RefreshTokenResponse>;\n    PerformApiCall(request: PerformApiCallRequest): Promise<PerformApiCallResponse>;\n}\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import {\n    isArrayBuffer,\n    isArrayOfType,\n    isFunction,\n    isNumber,\n    isRecord,\n    isString,\n    isTypedArray,\n    isUndefined,\n    predicateRecordValues,\n} from \"../common/typeguards\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { Uri, UriCancelRequest, UriRequest, UriResponse } from \"../lens-core-module/generated-types\";\nimport { Lens } from \"../lens/Lens\";\n\nconst SEPARATOR = \"://\";\n\nexport function extractSchemeAndRoute(uri: Uri) {\n    const separatorIndex = uri.indexOf(SEPARATOR);\n    const scheme = uri.slice(0, separatorIndex);\n    const route = uri.slice(separatorIndex + SEPARATOR.length);\n    return { scheme, route };\n}\n\nfunction isUri(value: unknown): value is Uri {\n    return isString(value) && value.includes(SEPARATOR);\n}\n\nfunction isUriHandler(value: unknown): value is UriHandler {\n    return (\n        isRecord(value) &&\n        (isUri(value.uri) || isArrayOfType(isUri, value.uri)) &&\n        isFunction(value.handleRequest) &&\n        (isUndefined(value.cancelRequest) || isFunction(value.cancelRequest))\n    );\n}\n\nexport function isUriHandlers(value: unknown): value is UriHandlers {\n    return isArrayOfType(isUriHandler, value);\n}\n\nexport function isUriResponse(value: unknown): value is UriResponse {\n    return (\n        isRecord(value) &&\n        isNumber(value.code) &&\n        isString(value.description) &&\n        isString(value.contentType) &&\n        (isArrayBuffer(value.data) || isTypedArray(value.data)) &&\n        (isUndefined(value.metadata) || predicateRecordValues(isString)(value.metadata))\n    );\n}\n\n/**\n * Provides a way for a lens to call into external services that work under HTTP-like protocol.\n * @internal\n */\nexport interface UriHandler {\n    /**\n     * [scheme]://[route] pattern that this handler processes or an array of patterns.\n     */\n    uri: Uri | Uri[];\n\n    /**\n     * Called to process the provided request.\n     * @param request Lens request.\n     * @param reply A callback function to send response back.\n     * The function can be called none or multiple number of times.\n     * @param lens Lens the request is coming from.\n     */\n    handleRequest(request: UriRequest, reply: (response: UriResponse) => void, lens: Lens): void;\n\n    /**\n     * Called to indicated that URI request initated earlier is cancelled.\n     * @param request Lens request.\n     * @param lens Lens the request is coming from.\n     */\n    cancelRequest?(request: UriCancelRequest, lens: Lens): void;\n}\n\n/**\n * Array of {@link UriHandler} objects.\n * @internal\n */\nexport type UriHandlers = UriHandler[];\n\n/**\n * An extension point for client URI handlers.\n * @internal\n */\nexport const uriHandlersFactory = Injectable(\"UriHandlers\", () => {\n    const uriHandlers: UriHandlers = [];\n    return uriHandlers;\n});\n\nexport { Uri, UriCancelRequest, UriRequest, UriResponse } from \"../lens-core-module/generated-types\";\n","import { Subject, catchError, filter, map, merge, retry, takeUntil, tap } from \"rxjs\";\nimport { forActions } from \"@snap/state-management\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { RemoteApiInfo } from \"../generated-proto/pb_schema/camera_kit/v3/features/remote_api_info\";\nimport { ResponseCode, responseCodeToNumber } from \"../generated-proto/pb_schema/lenses/remote_api/remote_api_service\";\nimport { LensRepository } from \"../lens/LensRepository\";\nimport { Lens } from \"../lens/Lens\";\nimport { LensState } from \"../session/lensState\";\nimport { SessionState } from \"../session/sessionState\";\nimport { getLogger } from \"../logger/logger\";\nimport { CamelToSnakeCase, SnakeToCamelCase } from \"../common/types\";\nimport { OperationalMetricsReporter } from \"../metrics/operational/operationalMetricsReporter\";\nimport { UriCancelRequest, UriHandler, UriRequest, UriResponse, extractSchemeAndRoute } from \"./UriHandlers\";\n\n// NOTE: There's potential for overloads when reporting metrics if reporting is triggered on each frame,\n// (i.e., when the lens sends Remote API requests every frame).\n// As of now, this isn't a concern because src/metrics/operational/operationalMetricsReporter.ts aggregates\n// \"count\" metrics into a single metric within a batch, and the Remote API service currently\n// reports only \"count\" metrics. For instance, if 30 metrics with the same name are generated per second,\n// given the current bundle size of 100 operational metrics, there will be one metrics report approximately\n// every 3.3 seconds.\n// In the future, if we opt to report \"histogram\" or other metric types, they must be approached with caution:\n// either the operationalMetricsReporter should be enhanced to aggregate such metrics,\n// or the Remote API service should manage it directly.\n// Mobiles ticket: https://jira.sc-corp.net/browse/CAMKIT-3092\n\nconst logger = getLogger(\"RemoteApiServices\");\n\nconst uriResponseOkCode = 200;\nconst apiResponseStatusHeader = \":sc_lens_api_status\";\nconst apiBinaryContentType = \"application/octet-stream\";\nconst remoteApiInfoProtobufTypeUrl = \"type.googleapis.com/com.snap.camerakit.v3.features.RemoteApiInfo\";\n\nconst statusToResponseCodeMap = {\n    success: ResponseCode.SUCCESS,\n    redirected: ResponseCode.REDIRECTED,\n    badRequest: ResponseCode.BAD_REQUEST,\n    accessDenied: ResponseCode.ACCESS_DENIED,\n    notFound: ResponseCode.NOT_FOUND,\n    timeout: ResponseCode.TIMEOUT,\n    requestTooLarge: ResponseCode.REQUEST_TOO_LARGE,\n    serverError: ResponseCode.SERVER_ERROR,\n    cancelled: ResponseCode.CANCELLED,\n    proxyError: ResponseCode.PROXY_ERROR,\n} satisfies { [Status in RemoteApiStatusInternal]: Uppercase<CamelToSnakeCase<Status>> };\n\ntype RemoteApiStatusInternal = SnakeToCamelCase<\n    Lowercase<Exclude<keyof typeof ResponseCode, \"RESPONSE_CODE_UNSET\" | \"UNRECOGNIZED\">>\n>;\n\ntype LensId = string;\ntype RequestId = string;\n\ntype UriRequestEvent = {\n    request: UriRequest;\n    reply: (response: UriResponse) => void;\n    lens: Lens;\n};\n\ntype UriCancelRequestEvent = {\n    request: UriCancelRequest;\n    lens: Lens;\n};\n\ninterface LensRequestState {\n    cancellationHandlers: Map<RequestId, RemoteApiCancelRequestHandler>;\n    supportedSpecIds: Set<string>;\n}\n\n/**\n * Invokes the cancellation handler associated with the provided key and removes it from the collection of handlers.\n */\nfunction callCancellationHandler(\n    cancellationHandlers: Map<RequestId, RemoteApiCancelRequestHandler>,\n    ...keys: RequestId[]\n) {\n    for (const key of keys) {\n        cancellationHandlers.get(key)?.();\n        cancellationHandlers.delete(key);\n    }\n}\n\n/**\n * Removes the specified lenses' metadata from the cache and invokes their cancellation callbacks.\n *\n * @param lensRequestState The state representing the lens cache.\n * @param lensIds An array of lens IDs to be removed from the cache\n * and for which the cancellation callbacks will be invoked.\n */\nfunction handleLensApplicationEnd(lensRequestState: Map<LensId, LensRequestState>, ...lensIds: LensId[]) {\n    for (const lensId of lensIds) {\n        const state = lensRequestState.get(lensId);\n        if (state) {\n            callCancellationHandler(state.cancellationHandlers, ...state.cancellationHandlers.keys());\n            lensRequestState.delete(lensId);\n        }\n    }\n}\n\n/**\n * Status of a Remote API response.\n */\nexport type RemoteApiStatus = keyof typeof statusToResponseCodeMap;\n\n/**\n * Remote API request sent by a lens.\n */\nexport interface RemoteApiRequest {\n    /**\n     * Unique id of the remote API service specification.\n     */\n    apiSpecId: string;\n    /**\n     * Unique id of the remote API service endpoint requested by this request.\n     */\n    endpointId: string;\n    /**\n     * A map of named parameters associated with the request.\n     */\n    parameters: Record<string, string>;\n    /**\n     * Additional binary request payload.\n     */\n    body: ArrayBuffer;\n}\n\n/**\n * Remote API response to a request sent by a lens.\n */\nexport interface RemoteApiResponse {\n    /**\n     * Status of the response\n     */\n    status: RemoteApiStatus;\n    /**\n     * A map of named metadata associated with the response.\n     */\n    metadata: Record<string, string>;\n    /**\n     * Additional binary request payload.\n     */\n    body: ArrayBuffer;\n}\n\n/**\n * Represents a Remote API request cancellation handler function.\n */\nexport type RemoteApiCancelRequestHandler = () => void;\n\n/**\n * Represents a Remote API request handler function.\n * It is provided with a reply callback that must be invoked to send a response back to the lens.\n * The reply callback can be invoked multiple times if needed.\n * Additionally, the handler can return a cancellation callback, which is triggered when the lens cancels the request.\n */\nexport type RemoteApiRequestHandler = (\n    reply: (response: RemoteApiResponse) => void\n) => RemoteApiCancelRequestHandler | void;\n\n/**\n * Service to handle a lens Remote API request.\n */\nexport interface RemoteApiService {\n    /**\n     * Remote API spec ID(s).\n     */\n    apiSpecId: string;\n\n    /**\n     * This method is called by Camera Kit when a lens triggers a Remote API request with a corresponding spec ID.\n     * If the service can handle the request, the method returns a request handler; otherwise, it returns nothing.\n     * @param request Remote API request object.\n     * @param lens Lens that trigges the request.\n     * @returns A request handler if applicable.\n     */\n    getRequestHandler(request: RemoteApiRequest, lens: Lens): RemoteApiRequestHandler | undefined;\n}\n\nexport type RemoteApiServices = RemoteApiService[];\n\nexport const remoteApiServicesFactory = Injectable(\"remoteApiServices\", () => {\n    const remoteApiServices: RemoteApiServices = [];\n    return remoteApiServices;\n});\n\n/**\n * Provides a URI handler that searches for a match within the provided services to handle Remote API requests,\n * i.e., those whose URI starts with 'app://remote-api/performApiRequest'.\n */\nexport function getRemoteApiUriHandler(\n    registeredServices: RemoteApiService[],\n    sessionState: SessionState,\n    lensState: LensState,\n    lensRepository: LensRepository,\n    reporter: OperationalMetricsReporter\n): UriHandler {\n    // Groups services by spec ID for faster lookups.\n    const registeredServiceMap = new Map<string, RemoteApiService[]>();\n    for (const service of registeredServices) {\n        const existingServices = registeredServiceMap.get(service.apiSpecId) || [];\n        registeredServiceMap.set(service.apiSpecId, [...existingServices, service]);\n    }\n\n    const uriRequests = new Subject<UriRequestEvent>();\n    const uriCancelRequests = new Subject<UriCancelRequestEvent>();\n    const lensRequestState = new Map<LensId, LensRequestState>();\n\n    const lensTurnOffEvents = lensState.events.pipe(\n        forActions(\"turnedOff\"),\n\n        tap(([action]) => handleLensApplicationEnd(lensRequestState, action.data.id))\n    );\n\n    const uriRequestEvents = uriRequests.pipe(\n        map((uriRequest) => {\n            const lensId = uriRequest.lens.id;\n\n            if (!lensRequestState.has(lensId)) {\n                lensRequestState.set(lensId, {\n                    // Prepares a collection to store cancellation handlers.\n                    // A specific handler will be invoked when a cancellation request is issued by the lens.\n                    // All handlers will be invoked when the lens is replaced with another one or the session\n                    // is destroyed.\n                    cancellationHandlers: new Map(),\n                    // Parse lens metadata to obtain supported Remote API specs.\n                    supportedSpecIds: new Set(\n                        (lensRepository.getLensMetadata(lensId)?.featureMetadata ?? [])\n                            .filter((feature) => feature.typeUrl === remoteApiInfoProtobufTypeUrl)\n                            .flatMap((any) => RemoteApiInfo.decode(any.value).apiSpecIds)\n                    ),\n                });\n            }\n            const requestState = lensRequestState.get(lensId)!;\n\n            // Extracts the spec ID and endpoint ID from the provided Remote API request URI.\n            // The given URI is expected to conform to the following specification:\n            // eslint-disable-next-line max-len\n            // https://docs.google.com/document/d/18fbGYDhD2N_aMTe4ZLY4QKeCSoMeJuklG28TutDzLZc/edit#bookmark=id.p2y39gwgbm4g\n            const { route } = extractSchemeAndRoute(uriRequest.request.uri);\n            const [specId, endpointIdWithQuery] = route.split(\"/\").slice(2);\n            const [endpointId] = endpointIdWithQuery.split(\"?\");\n\n            return { uriRequest, specId, endpointId, requestState };\n        }),\n\n        // only handle requests for API spec ID that current lens supports\n        filter(({ specId, requestState }) => requestState.supportedSpecIds.has(specId)),\n\n        // only handle requests if we have a registered service for it\n        filter(({ specId }) => registeredServiceMap.has(specId)),\n\n        map(({ uriRequest, specId, endpointId, requestState }) => {\n            const dimensions = new Map([[\"specId\", specId]]);\n            reporter.count(\"lens_remote-api_requests\", 1, dimensions);\n\n            const remoteApiRequest: RemoteApiRequest = {\n                apiSpecId: specId,\n                body: uriRequest.request.data,\n                endpointId,\n                parameters: uriRequest.request.metadata,\n            };\n\n            // Looks for the first Remote API request handler.\n            for (const service of registeredServiceMap.get(specId) ?? []) {\n                let requestHandler: RemoteApiRequestHandler | undefined = undefined;\n                try {\n                    requestHandler = service.getRequestHandler(remoteApiRequest, uriRequest.lens);\n                } catch (error) {\n                    logger.warn(\"Client's Remote API request handler factory threw an error.\", error);\n                }\n\n                if (requestHandler) {\n                    reporter.count(\"lens_remote-api_handled-requests\", 1, dimensions);\n\n                    let cancellationHandler: RemoteApiCancelRequestHandler | void = undefined;\n                    try {\n                        // Calls client's Remote API handler to process the request.\n                        cancellationHandler = requestHandler((response) => {\n                            reporter.count(\"lens_remote-api_responses\", 1, dimensions);\n\n                            const responseCode = statusToResponseCodeMap[response.status] ?? ResponseCode.UNRECOGNIZED;\n                            const uriResponse: UriResponse = {\n                                code: uriResponseOkCode,\n                                description: \"\",\n                                contentType: apiBinaryContentType,\n                                data: response.body,\n                                metadata: {\n                                    ...response.metadata,\n                                    [apiResponseStatusHeader]: responseCodeToNumber(responseCode).toString(),\n                                },\n                            };\n                            uriRequest.reply(uriResponse);\n                        });\n                    } catch (error) {\n                        logger.warn(\"Client's Remote API request handler threw an error.\", error);\n                    }\n\n                    if (typeof cancellationHandler === \"function\") {\n                        requestState.cancellationHandlers.set(uriRequest.request.identifier, () => {\n                            try {\n                                cancellationHandler!();\n                            } catch (error) {\n                                logger.warn(\"Client's Remote API request cancellation handler threw an error.\", error);\n                            }\n                        });\n                    }\n\n                    break;\n                }\n            }\n        })\n    );\n\n    const uriCancelRequestEvents = uriCancelRequests.pipe(\n        tap((uriRequest) => {\n            const cancellationHandlers = lensRequestState.get(uriRequest.lens.id)?.cancellationHandlers;\n            if (cancellationHandlers) {\n                callCancellationHandler(cancellationHandlers, uriRequest.request.requestId);\n            }\n        })\n    );\n\n    merge(lensTurnOffEvents, uriRequestEvents, uriCancelRequestEvents)\n        .pipe(\n            catchError((error, sourcePipe) => {\n                // The expectation is that if an error occurs, it happens in our own implementation,\n                // because app callbacks are wrapped with try..catch blocks.\n                // Therefore, we would like to report this error.\n                logger.error(error);\n                reporter.count(\"lens_remote-api_errors\", 1);\n                // Return the source pipe so that we can retry the pipe instead of just completing it.\n                return sourcePipe;\n            }),\n            // When the pipe completes due to an error,\n            // we want to resubscribe to the original pipe to keep it alive.\n            retry(),\n            takeUntil(sessionState.events.pipe(forActions(\"destroy\")))\n        )\n        .subscribe({\n            complete: () => handleLensApplicationEnd(lensRequestState, ...lensRequestState.keys()),\n        });\n\n    return {\n        uri: \"app://remote-api/performApiRequest\",\n\n        handleRequest(request, reply, lens) {\n            uriRequests.next({ request, reply, lens });\n        },\n\n        cancelRequest(request, lens) {\n            uriCancelRequests.next({ request, lens });\n        },\n    };\n}\n","import { isState } from \"@snap/state-management\";\n\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { LensKeyboard, lensKeyboardFactory } from \"../session/LensKeyboard\";\nimport { LensState, lensStateFactory } from \"../session/lensState\";\nimport { LensRepository, lensRepositoryFactory } from \"../lens/LensRepository\";\nimport { SessionState, sessionStateFactory } from \"../session/sessionState\";\nimport { LensCore, UriResponse, lensCoreFactory } from \"../lens-core-module\";\nimport { getLogger } from \"../logger/logger\";\nimport {\n    OperationalMetricsReporter,\n    operationalMetricReporterFactory,\n} from \"../metrics/operational/operationalMetricsReporter\";\nimport { RemoteApiServices, getRemoteApiUriHandler, remoteApiServicesFactory } from \"./RemoteApiServices\";\nimport { UriHandlers, extractSchemeAndRoute, isUriHandlers, isUriResponse, uriHandlersFactory } from \"./UriHandlers\";\n\nconst logger = getLogger(\"uriHandlersRegister\");\n\n/**\n * Registers URI handlers within LensCore.\n * @internal\n */\nexport const registerUriHandlers = Injectable(\n    \"registerUriHandlers\",\n    [\n        lensCoreFactory.token,\n        lensStateFactory.token,\n        uriHandlersFactory.token,\n        lensKeyboardFactory.token,\n        remoteApiServicesFactory.token,\n        lensRepositoryFactory.token,\n        sessionStateFactory.token,\n        operationalMetricReporterFactory.token,\n    ] as const,\n    (\n        lensCore: LensCore,\n        lensState: LensState,\n        userHandlers: UriHandlers,\n        lensKeyboard: LensKeyboard,\n        remoteApiServices: RemoteApiServices,\n        lensRepository: LensRepository,\n        sessionState: SessionState,\n        operationalMetricsReporter: OperationalMetricsReporter\n    ): void => {\n        if (!isUriHandlers(userHandlers)) {\n            throw new Error(\"Expected an array of UriHandler objects\");\n        }\n\n        // Users may define UriHandlers using the uriHandlersFactory.token, but we need to add some internally-defined\n        // handlers (lens keyboard and Remote API) before registering handlers with LensCore.\n        const allHandlers = userHandlers.concat(\n            lensKeyboard.uriHandler,\n            getRemoteApiUriHandler(\n                remoteApiServices,\n                sessionState,\n                lensState,\n                lensRepository,\n                operationalMetricsReporter\n            )\n        );\n\n        for (const { uri, handleRequest, cancelRequest } of allHandlers) {\n            const uris = Array.isArray(uri) ? uri : [uri];\n            for (const { scheme, route } of uris.map(extractSchemeAndRoute)) {\n                lensCore.registerUriListener(scheme, route, {\n                    handleRequest: (request) => {\n                        const reply = (response: UriResponse) => {\n                            if (!isUriResponse(response)) {\n                                throw new Error(\"Expected UriResponse object\");\n                            }\n                            lensCore.provideUriResponse(request.identifier, response);\n                        };\n\n                        // Since lenses are the only things that make URI requests, we expect to always be in the\n                        // \"lensApplied\" state – we'll sanity check, though, and log a warning if we're not.\n                        const state = lensState.getState();\n                        if (isState(state, \"noLensApplied\")) {\n                            logger.warn(\n                                `Got a URI request for ${request.uri}, but there is no active lens. The ` +\n                                    `request will not be processed.`\n                            );\n                            return;\n                        }\n\n                        // NOTE: we do not handle any error thrown on an extension side when handleRequest() is called.\n                        // That responsibility is delegated to the extension by design and that is exactly what Android\n                        // and iOS SDKs do.\n                        handleRequest(request, reply, state.data);\n                    },\n                    cancelRequest: (request) => {\n                        if (cancelRequest) {\n                            const state = lensState.getState();\n                            if (isState(state, \"noLensApplied\")) {\n                                logger.warn(\n                                    `Got a URI cancel request for ${request.uri}, but there is no active ` +\n                                        `lens. The cancel request will not be processed.`\n                                );\n                                return;\n                            }\n                            cancelRequest(request, state.data);\n                        }\n                    },\n                });\n            }\n        }\n    }\n);\n","import { isState } from \"@snap/state-management\";\nimport { filter, map, Observable, scan, Subject, takeUntil } from \"rxjs\";\nimport { entries } from \"../../common/entries\";\nimport { ensureError } from \"../../common/errorHelpers\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { logEntriesFactory } from \"../../logger/logEntries\";\nimport { LogEntry, logLevelMap } from \"../../logger/logger\";\nimport { LensState } from \"../../session/lensState\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\n\nconst logMethods = entries(logLevelMap).map(([level]) => level);\n\n// How many log entries to include as the error context\nconst maxBufferedEntries = 15;\nconst contextSeparator = \"\\n\\n----------------- Context -----------------\\n\\n\";\nconst methodLength = logMethods.reduce((max, method) => Math.max(max, method.length), 0);\n\ninterface RepeatableLogEntry {\n    entry: LogEntry;\n    count: number;\n    lastTime: Date;\n}\n\ninterface EntriesBuffer {\n    /**\n     * LogEntries grouped by their message.\n     */\n    entries: RepeatableLogEntry[];\n    /**\n     * The recent log entry.\n     */\n    recent: LogEntry;\n}\n\nexport function getContextString(logEntries: RepeatableLogEntry[]) {\n    const result = [];\n    for (const { entry, count, lastTime } of logEntries) {\n        const time = entry.time.toISOString();\n        const method = entry.level.padStart(methodLength);\n        const messages = entry.messages.map(prettyPrintMessage).join(\" \");\n        let dupSuffix =\n            count > 1 ? ` (Repeated ${count} times with the last occurrence at ${lastTime.toISOString()})` : \"\";\n\n        result.push(`${time} [${entry.module}] ${method}: ${messages}${dupSuffix}`);\n    }\n    return result.join(\"\\n\");\n}\n\n/**\n * Pretty print a log message.\n */\nfunction prettyPrintMessage(message: unknown): string {\n    if (message instanceof Error) return stringifyError(message);\n    if (message instanceof Date) return message.toISOString();\n    return message + \"\";\n}\n\n/**\n * Returns an error message for a given error, and also appends the error message of any nested error, if one exists.\n * @param error Error to stringify.\n * @returns Error message including nested error messages.\n */\nfunction stringifyError(error: Error): string {\n    const cause = error.cause ? `; Caused by ${stringifyError(ensureError(error.cause))}` : \"\";\n    return `${error.name}: ${error.message}${cause}`;\n}\n\nexport function reportExceptionToBlizzard(\n    logEntries: Observable<LogEntry>,\n    metricsEventTarget: MetricsEventTarget,\n    reporter: OperationalMetricsReporter,\n    lensState?: LensState\n) {\n    logEntries\n        .pipe(\n            scan<LogEntry, EntriesBuffer>(\n                ({ entries }, newEntry) => {\n                    const lastEntry = entries[entries.length - 1];\n                    const isNewEntryRepeated =\n                        lastEntry &&\n                        lastEntry.entry.messages.join() === newEntry.messages.join() &&\n                        lastEntry.entry.level === newEntry.level;\n                    if (isNewEntryRepeated) {\n                        lastEntry.count += 1;\n                        lastEntry.lastTime = newEntry.time;\n                    } else {\n                        entries.push({\n                            entry: newEntry,\n                            count: 1,\n                            lastTime: newEntry.time,\n                        });\n                    }\n                    return {\n                        entries: entries.slice(-maxBufferedEntries),\n                        recent: newEntry,\n                    };\n                },\n                // Start with a dummy recent entry -- it gets overridden each time we handle a log entry.\n                { entries: [], recent: { time: new Date(), module: \"any\", level: \"debug\", messages: [] } }\n            ),\n            filter(({ recent }) => recent.level === \"error\"),\n            map(({ entries, recent }) => ({\n                context: entries,\n                error: recent.messages.find((e) => e instanceof Error) as Error,\n            })),\n            filter(({ error }) => !!error)\n        )\n        .subscribe(({ error, context }) => {\n            const currentLensState = lensState?.getState();\n            const lensId =\n                currentLensState && !isState(currentLensState, \"noLensApplied\") ? currentLensState.data.id : \"none\";\n            metricsEventTarget.dispatchEvent(\n                new TypedCustomEvent(\"exception\", {\n                    name: \"exception\",\n                    lensId,\n                    type: error.name,\n                    reason: `${stringifyError(error)}${contextSeparator}${getContextString(context)}`,\n                })\n            );\n\n            reporter.count(\"handled_exception\", 1, new Map([[\"type\", error.name]]));\n        });\n}\n\nexport interface GlobalExceptionReporter {\n    attachLensContext: (lensState: LensState) => void;\n}\n\n/**\n * Reports log entries to Blizzard when there is no CameraKit session yet.\n *\n * @internal\n */\nexport const reportGlobalException = Injectable(\n    \"reportGlobalException\",\n    [logEntriesFactory.token, metricsEventTargetFactory.token, operationalMetricReporterFactory.token] as const,\n    (\n        logEntries: Observable<LogEntry>,\n        metricsEventTarget: MetricsEventTarget,\n        reporter: OperationalMetricsReporter\n    ): GlobalExceptionReporter => {\n        // Initially we log exceptions without any lens context\n        const cancellationSubject = new Subject<void>();\n        reportExceptionToBlizzard(logEntries.pipe(takeUntil(cancellationSubject)), metricsEventTarget, reporter);\n\n        // Later session scope reporter triggers cancellation of the global one\n        // and initiates exception reporting with a lens context\n        return {\n            attachLensContext: (lensState: LensState) => {\n                cancellationSubject.next();\n                reportExceptionToBlizzard(logEntries, metricsEventTarget, reporter, lensState);\n            },\n        };\n    }\n);\n","import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { LensState, lensStateFactory } from \"../../session/lensState\";\nimport { GlobalExceptionReporter, reportGlobalException } from \"./reportGlobalException\";\n\n/**\n * Reports log entries to Blizzard during a CameraKit session.\n *\n * @internal\n */\nexport const reportSessionException = Injectable(\n    \"reportSessionException\",\n    [reportGlobalException.token, lensStateFactory.token] as const,\n    (globalExceptionReporter: GlobalExceptionReporter, lensState: LensState) => {\n        globalExceptionReporter.attachLensContext(lensState);\n    }\n);\n","import { CameraKitConfiguration, configurationToken } from \"../../configuration\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\n\n// Allowlist the benchmarks we wish to report.\nconst reportableBenchmarks = [\"gflops\"];\n\nexport type BenchmarkComplete = MakeTaggedBusinessEvent<\"benchmarkComplete\">;\n\nexport const reportBenchmarks = Injectable(\n    \"reportBenchmarks\",\n    [metricsEventTargetFactory.token, operationalMetricReporterFactory.token, configurationToken] as const,\n    async (\n        metricsEventTarget: MetricsEventTarget,\n        reporter: OperationalMetricsReporter,\n        config: CameraKitConfiguration\n    ) => {\n        if (config.lensPerformance === undefined) return;\n        // Safety: config.lensPerformance cannot reject – all Promises contained in CameraKitConfiguration have\n        // catch blocks which return a default value.\n        const lensPerformance = await config.lensPerformance;\n        const baseBenchmark: Pick<BenchmarkComplete, \"name\" | \"performanceCluster\" | \"webglRendererInfo\"> = {\n            name: \"benchmarkComplete\",\n            performanceCluster: lensPerformance.cluster,\n            webglRendererInfo: lensPerformance.webglRendererInfo,\n        };\n        const dimensions = new Map([[\"performance_cluster\", lensPerformance.cluster.toString()]]);\n        for (const benchmark of lensPerformance.benchmarks) {\n            if (!reportableBenchmarks.includes(benchmark.name)) continue;\n            const benchmarkComplete: BenchmarkComplete = {\n                ...baseBenchmark,\n                benchmarkName: benchmark.name,\n                benchmarkValue: benchmark.value,\n            };\n            metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"benchmarkComplete\", benchmarkComplete));\n            reporter.histogram(`benchmark.${benchmark.name}`, benchmark.value, dimensions);\n        }\n    }\n);\n","import { EventOfType, TypedCustomEvent } from \"./TypedCustomEvent\";\nimport { EventsFromTarget, TypedEventTarget } from \"./TypedEventTarget\";\n\n/**\n * Each time an event is emitted, call a given accumulator function with two arguments: some state of type S and the\n * event. The accumulator returns a new state. `scan` returns a new event emitter which emits an event each time a new\n * state is produced by the accumulator.\n *\n * This can be used to implement a Redux-style state management architecture.\n *\n * @param seedState Some initial state, passed to the accumulator when the first event is emitted.\n * @returns A function which takes a source {@link TypedEventTarget}, a list of event types emitted by that target to\n * which to listen, and the accumulator function. The accumulator is called each time an event of the given type(s) is\n * emitted on the source. It is passed the current state and the event, and must return a new state.\n */\nexport const scan =\n    <S>(seedState: S) =>\n    <Target extends TypedEventTarget, Events extends EventsFromTarget<Target>, EventType extends Events[\"type\"]>(\n        source: Target,\n        eventTypes: EventType[],\n        accumulator: (state: S, event: EventOfType<EventType, Events>) => S\n    ): TypedEventTarget<TypedCustomEvent<\"state\", S>> => {\n        let state = seedState;\n        const sink = new TypedEventTarget<TypedCustomEvent<\"state\", S>>();\n        const listener = (event: TypedCustomEvent) => {\n            state = accumulator(state, event as EventOfType<EventType, Events>);\n            sink.dispatchEvent(new TypedCustomEvent(\"state\", state));\n        };\n\n        // We'll use Proxies to make sure that event listeners are added/removed at the appropriate time.\n        // Callers can then control when to clean up the listeners we add here in a transparent way –\n        // by just removing the listener on the returned event target.\n        //\n        // We also prevent multiple listeners on the sink, as a simplification.\n        let hasListener = false;\n        sink.addEventListener = new Proxy(sink.addEventListener, {\n            apply: (target, thisArg, args: Parameters<(typeof sink)[\"addEventListener\"]>) => {\n                if (hasListener)\n                    throw new Error(\n                        \"Cannot add another event listener. The TypedEventTarget returned by scan only \" +\n                            \"supports a single listener, and one has already been added.\"\n                    );\n                hasListener = true;\n                eventTypes.forEach((eventType) => source.addEventListener(eventType, listener));\n                target.apply(thisArg, args);\n            },\n        });\n        sink.removeEventListener = new Proxy(sink.removeEventListener, {\n            apply: (target, thisArg, args: Parameters<(typeof sink)[\"removeEventListener\"]>) => {\n                eventTypes.forEach((eventType) => source.removeEventListener(eventType, listener));\n                target.apply(thisArg, args);\n            },\n        });\n\n        return sink;\n    };\n","import { assertUnreachable } from \"../../common/assertions\";\nimport { stringifyError } from \"../../common/errorHelpers\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { scan } from \"../../events/scan\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport {\n    Dimensions,\n    RequestStateEventTarget,\n    requestStateEventTargetFactory,\n} from \"../../handlers/requestStateEmittingHandler\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { CameraKitMetricEvents, MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\n\ntype InProgressMap = Map<number, { startTimeMs: number }>;\ninterface InProgress {\n    name: \"inProgress\";\n    inProgress: InProgressMap;\n}\ninterface Completed {\n    name: \"completed\";\n    inProgress: InProgressMap;\n    event: CameraKitMetricEvents;\n}\ntype RequestState = InProgress | Completed;\n\nconst relevantRequestTypes = [\"lens_content\", \"asset\"] as const;\nexport const isLensOrAssetRequest = (value: Dimensions): value is LensDownloadDimensions | AssetDownloadDimensions => {\n    const requestType = value[\"requestType\"];\n    // Safety: the cast makes the type less specific so we can check if any string is present in the tuple.\n    return typeof requestType === \"string\" && (relevantRequestTypes as readonly string[]).includes(requestType);\n};\n\n/**\n * The LensDownload metric is triggered by any download of lens content.\n *\n * It contains download stats, which lens was requested, and whether prefetch was used.\n *\n * It corresponds to the internal CameraKitLensDownload event, described here:\n * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/edit#heading=h.stqom49qs91t\n */\nexport type LensDownload = MakeTaggedBusinessEvent<\"lensDownload\">;\nexport type LensDownloadDimensions = { requestType: \"lens_content\"; lensId: string };\n\n/**\n * The AssetDownload metric is triggered by any type of asset download.\n *\n * It contains download stats, which asset was requested, and whether prefetch was used.\n *\n * It corresponds to the internal CameraKitAssetDownload event, described here:\n * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/edit#heading=h.vlormd1724fp\n */\nexport type AssetDownload = MakeTaggedBusinessEvent<\"assetDownload\">;\nexport type AssetDownloadDimensions = { requestType: \"asset\"; assetType: string; assetId: string; lensId: string };\n\nexport const reportLensAndAssetDownload = Injectable(\n    \"reportLensAndAssetDownload\",\n    [\n        metricsEventTargetFactory.token,\n        operationalMetricReporterFactory.token,\n        requestStateEventTargetFactory.token,\n    ] as const,\n    (\n        metricsEventTarget: MetricsEventTarget,\n        reporter: OperationalMetricsReporter,\n        requestStateEventTarget: RequestStateEventTarget\n    ) => {\n        scan<RequestState>({ name: \"inProgress\", inProgress: new Map() })(\n            requestStateEventTarget,\n            [\"started\", \"completed\", \"errored\"],\n            (state, event) => {\n                const { inProgress } = state;\n                const { dimensions, requestId, timeMs } = event.detail;\n\n                if (!isLensOrAssetRequest(dimensions)) return state;\n\n                switch (event.type) {\n                    case \"started\":\n                        inProgress.set(requestId, { startTimeMs: timeMs });\n                        return { name: \"inProgress\", inProgress };\n                    case \"completed\":\n                        const completedRequest = inProgress.get(requestId);\n                        if (!completedRequest) return state;\n                        inProgress.delete(requestId);\n\n                        const downloadTimeSec = (timeMs - completedRequest.startTimeMs) / 1000;\n                        const { sizeByte } = event.detail;\n\n                        switch (dimensions.requestType) {\n                            case \"lens_content\":\n                                return {\n                                    name: \"completed\",\n                                    inProgress,\n                                    event: new TypedCustomEvent(\"lensDownload\", {\n                                        name: \"lensDownload\",\n                                        lensId: dimensions.lensId,\n                                        automaticDownload: false,\n                                        sizeByte,\n                                        downloadTimeSec,\n                                    }),\n                                };\n                            case \"asset\":\n                                return {\n                                    name: \"completed\",\n                                    inProgress,\n                                    event: new TypedCustomEvent(\"assetDownload\", {\n                                        name: \"assetDownload\",\n                                        assetId: dimensions.assetId,\n                                        automaticDownload: false,\n                                        sizeByte,\n                                        downloadTimeSec,\n                                    }),\n                                };\n                            default:\n                                assertUnreachable(dimensions);\n                        }\n                    case \"errored\":\n                        const erroredRequest = inProgress.get(requestId);\n                        if (!erroredRequest) return state;\n                        inProgress.delete(requestId);\n                        const error = event.detail.error;\n                        return {\n                            name: \"completed\",\n                            inProgress,\n                            event: new TypedCustomEvent(\"exception\", {\n                                name: \"exception\",\n                                lensId: dimensions.lensId,\n                                type: dimensions.requestType === \"lens_content\" ? \"lens\" : \"asset\",\n                                reason: stringifyError(error),\n                            }),\n                        };\n                    default:\n                        assertUnreachable(event);\n                }\n            }\n        ).addEventListener(\"state\", ({ detail: state }) => {\n            if (state.name !== \"completed\") return;\n            metricsEventTarget.dispatchEvent(state.event);\n            if (state.event.detail.name === \"exception\") {\n                reporter.count(\"handled_exception\", 1, new Map([[\"type\", state.event.detail.type]]));\n            }\n        });\n    }\n);\n","import { assertUnreachable } from \"../../common/assertions\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { scan } from \"../../events/scan\";\nimport { CofDimensions, COF_REQUEST_TYPE } from \"../../remote-configuration/cofHandler\";\nimport {\n    Dimensions,\n    RequestStateEventTarget,\n    RequestStateEvents,\n    requestStateEventTargetFactory,\n} from \"../../handlers/requestStateEmittingHandler\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\nimport { getPlatformInfo } from \"../../platform/platformInfo\";\nimport { AssetDownloadDimensions, isLensOrAssetRequest, LensDownloadDimensions } from \"./reportLensAndAssetDownload\";\n\ntype InProgressMap = Map<number, { startTimeMs: number }>;\ninterface InProgress {\n    name: \"inProgress\";\n    inProgress: InProgressMap;\n}\ninterface Completed {\n    name: \"completed\";\n    inProgress: InProgressMap;\n    dimensions: Map<string, string>;\n    downloadTimeMs: number;\n    downloadSizeKb: number;\n}\ntype RequestState = InProgress | Completed;\n\nconst getAdditionalDimensions = (\n    dimensions: LensDownloadDimensions | AssetDownloadDimensions | CofDimensions\n): [string, string][] => {\n    switch (dimensions.requestType) {\n        case \"lens_content\":\n        case \"asset\":\n            return [];\n        case COF_REQUEST_TYPE:\n            return [[\"delta\", dimensions.delta]];\n        default:\n            assertUnreachable(dimensions);\n    }\n};\n\nconst getContentType = (dimensions: LensDownloadDimensions | AssetDownloadDimensions | CofDimensions): string => {\n    switch (dimensions.requestType) {\n        case \"lens_content\":\n            return \"lens_content\";\n        case \"asset\":\n            return dimensions.assetType;\n        case COF_REQUEST_TYPE:\n            return COF_REQUEST_TYPE;\n        default:\n            assertUnreachable(dimensions);\n    }\n};\n\nconst getSizeKb = (event: RequestStateEvents): number => {\n    switch (event.type) {\n        case \"started\":\n        case \"errored\":\n            return 0;\n        case \"completed\":\n            return event.detail.sizeByte / 1024;\n        default:\n            assertUnreachable(event);\n    }\n};\n\nconst getStatus = (event: RequestStateEvents): string => {\n    switch (event.type) {\n        case \"started\":\n        case \"errored\":\n            // We'll use status 0 to indicate that an exception occurred during the request. This is somewhat in keeping\n            // with browsers that set the response status to 0 if the request was not able to be made (e.g. CORs\n            // preflight failed, or the user canceled the request).\n            return \"0\";\n        case \"completed\":\n            return event.detail.status.toString();\n        default:\n            assertUnreachable(event);\n    }\n};\n\nexport const isRelevantRequest = (\n    value: Dimensions\n): value is LensDownloadDimensions | AssetDownloadDimensions | CofDimensions => {\n    return isLensOrAssetRequest(value) || value[\"requestType\"] === COF_REQUEST_TYPE;\n};\n\nexport const reportHttpMetrics = Injectable(\n    \"reportHttpMetrics\",\n    [operationalMetricReporterFactory.token, requestStateEventTargetFactory.token] as const,\n    (reporter: OperationalMetricsReporter, requestStateEventTarget: RequestStateEventTarget) => {\n        scan<RequestState>({ name: \"inProgress\", inProgress: new Map() })(\n            requestStateEventTarget,\n            [\"started\", \"completed\", \"errored\"],\n            (state, event) => {\n                const { inProgress } = state;\n                const { dimensions, requestId, timeMs } = event.detail;\n\n                if (!isRelevantRequest(dimensions)) return state;\n\n                switch (event.type) {\n                    case \"started\":\n                        inProgress.set(requestId, { startTimeMs: timeMs });\n                        return { name: \"inProgress\", inProgress };\n                    case \"completed\":\n                    case \"errored\":\n                        const completedRequest = inProgress.get(requestId);\n                        if (!completedRequest) return state;\n                        inProgress.delete(requestId);\n\n                        const downloadTimeMs = timeMs - completedRequest.startTimeMs;\n                        const downloadSizeKb = getSizeKb(event);\n                        const status = getStatus(event);\n                        const operationalDimensions = new Map<string, string>([\n                            [\"content_type\", getContentType(dimensions)],\n                            [\"network_type\", getPlatformInfo().connectionType ?? \"unknown\"],\n                            [\"status\", status],\n                        ]);\n\n                        for (const [key, value] of getAdditionalDimensions(dimensions)) {\n                            operationalDimensions.set(key, value);\n                        }\n\n                        return {\n                            name: \"completed\",\n                            inProgress: state.inProgress,\n                            dimensions: operationalDimensions,\n                            downloadSizeKb,\n                            downloadTimeMs,\n                        };\n                    default:\n                        assertUnreachable(event);\n                }\n            }\n        ).addEventListener(\"state\", ({ detail: state }) => {\n            if (state.name !== \"completed\") return;\n\n            const { dimensions, downloadTimeMs, downloadSizeKb } = state;\n\n            reporter.count(\"download_finished\", 1, dimensions);\n            reporter.timer(\"download_latency\", downloadTimeMs, dimensions);\n            reporter.histogram(\"download_size_kb\", downloadSizeKb, dimensions);\n        });\n    }\n);\n","export const ServerEvent = {\n    fromPartial<I extends Exact<DeepPartial<ServerEvent>, I>>(object: I): ServerEvent {\n        const message = createBaseServerEvent();\n        message.eventName = object.eventName ?? \"\";\n        message.serverTs = object.serverTs ?? 0;\n        message.userId = object.userId ?? \"\";\n        message.userAgent = object.userAgent ?? \"\";\n        message.country = object.country ?? \"\";\n        message.city = object.city ?? \"\";\n        message.region = object.region ?? \"\";\n        message.eventId = object.eventId ?? \"\";\n        message.instanceId = object.instanceId ?? \"\";\n        message.sequenceId = object.sequenceId ?? 0;\n        message.osType = object.osType ?? \"\";\n        message.osVersion = object.osVersion ?? \"\";\n        message.appVersion = object.appVersion ?? \"\";\n        message.appBuild = object.appBuild ?? \"\";\n        message.serverUploadTs = object.serverUploadTs ?? 0;\n        message.eventTime = object.eventTime ?? 0;\n        message.serverReceiptTime = object.serverReceiptTime ?? 0;\n        message.maxSequenceIdOnInstance = object.maxSequenceIdOnInstance ?? 0;\n        message.userGuid = object.userGuid ?? \"\";\n        message.collection = object.collection ?? 0;\n        message.serviceId = object.serviceId ?? \"\";\n        message.appType = object.appType ?? 0;\n        message.spectrumInstanceId = object.spectrumInstanceId ?? \"\";\n        message.spectrumSequenceId = object.spectrumSequenceId ?? 0;\n        message.eventData =\n            object.eventData !== undefined && object.eventData !== null\n                ? ServerEventData.fromPartial(object.eventData)\n                : undefined;\n        return message;\n    },\n};\nexport const ServerEventData = {\n    fromPartial<I extends Exact<DeepPartial<ServerEventData>, I>>(object: I): ServerEventData {\n        const message = createBaseServerEventData();\n        message.cameraKitException =\n            object.cameraKitException !== undefined && object.cameraKitException !== null\n                ? CameraKitException.fromPartial(object.cameraKitException)\n                : undefined;\n        message.cameraKitLensSpin =\n            object.cameraKitLensSpin !== undefined && object.cameraKitLensSpin !== null\n                ? CameraKitLensSpin.fromPartial(object.cameraKitLensSpin)\n                : undefined;\n        message.cameraKitAssetDownload =\n            object.cameraKitAssetDownload !== undefined && object.cameraKitAssetDownload !== null\n                ? CameraKitAssetDownload.fromPartial(object.cameraKitAssetDownload)\n                : undefined;\n        message.cameraKitLensContentValidationFailed =\n            object.cameraKitLensContentValidationFailed !== undefined && object.cameraKitLensContentValidationFailed !== null\n                ? CameraKitLensContentValidationFailed.fromPartial(object.cameraKitLensContentValidationFailed)\n                : undefined;\n        message.cameraKitLensDownload =\n            object.cameraKitLensDownload !== undefined && object.cameraKitLensDownload !== null\n                ? CameraKitLensDownload.fromPartial(object.cameraKitLensDownload)\n                : undefined;\n        message.cameraKitAssetValidationFailed =\n            object.cameraKitAssetValidationFailed !== undefined && object.cameraKitAssetValidationFailed !== null\n                ? CameraKitAssetValidationFailed.fromPartial(object.cameraKitAssetValidationFailed)\n                : undefined;\n        message.cameraKitSession =\n            object.cameraKitSession !== undefined && object.cameraKitSession !== null\n                ? CameraKitSession.fromPartial(object.cameraKitSession)\n                : undefined;\n        message.cameraKitWebLensSwipe =\n            object.cameraKitWebLensSwipe !== undefined && object.cameraKitWebLensSwipe !== null\n                ? CameraKitWebLensSwipe.fromPartial(object.cameraKitWebLensSwipe)\n                : undefined;\n        message.cameraKitWebBenchmarkComplete =\n            object.cameraKitWebBenchmarkComplete !== undefined && object.cameraKitWebBenchmarkComplete !== null\n                ? CameraKitWebBenchmarkComplete.fromPartial(object.cameraKitWebBenchmarkComplete)\n                : undefined;\n        message.cameraKitLegalPrompt =\n            object.cameraKitLegalPrompt !== undefined && object.cameraKitLegalPrompt !== null\n                ? CameraKitLegalPrompt.fromPartial(object.cameraKitLegalPrompt)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseServerEventData(): ServerEventData {\n    return {\n        cameraKitException: undefined,\n        cameraKitLensSpin: undefined,\n        cameraKitAssetDownload: undefined,\n        cameraKitLensContentValidationFailed: undefined,\n        cameraKitLensDownload: undefined,\n        cameraKitAssetValidationFailed: undefined,\n        cameraKitSession: undefined,\n        cameraKitWebLensSwipe: undefined,\n        cameraKitWebBenchmarkComplete: undefined,\n        cameraKitLegalPrompt: undefined,\n    };\n}\nfunction createBaseServerEvent(): ServerEvent {\n    return {\n        eventName: \"\",\n        serverTs: 0,\n        userId: \"\",\n        userAgent: \"\",\n        country: \"\",\n        city: \"\",\n        region: \"\",\n        eventId: \"\",\n        instanceId: \"\",\n        sequenceId: 0,\n        osType: \"\",\n        osVersion: \"\",\n        appVersion: \"\",\n        appBuild: \"\",\n        serverUploadTs: 0,\n        eventTime: 0,\n        serverReceiptTime: 0,\n        maxSequenceIdOnInstance: 0,\n        userGuid: \"\",\n        collection: 0,\n        serviceId: \"\",\n        appType: 0,\n        spectrumInstanceId: \"\",\n        spectrumSequenceId: 0,\n        eventData: undefined,\n    };\n}\nexport interface ServerEvent {\n    eventName: string;\n    serverTs: number;\n    userId: string;\n    userAgent: string;\n    country: string;\n    city: string;\n    region: string;\n    eventId: string;\n    instanceId: string;\n    sequenceId: number;\n    osType: string;\n    osVersion: string;\n    appVersion: string;\n    appBuild: string;\n    serverUploadTs: number;\n    eventTime: number;\n    serverReceiptTime: number;\n    maxSequenceIdOnInstance: number;\n    userGuid: string;\n    collection: Collection;\n    serviceId: string;\n    appType: AppType;\n    spectrumInstanceId: string;\n    spectrumSequenceId: number;\n    eventData: ServerEventData | undefined;\n}\nexport interface ServerEventData {\n    cameraKitException: CameraKitException | undefined;\n    cameraKitLensSpin: CameraKitLensSpin | undefined;\n    cameraKitAssetDownload: CameraKitAssetDownload | undefined;\n    cameraKitLensContentValidationFailed: CameraKitLensContentValidationFailed | undefined;\n    cameraKitLensDownload: CameraKitLensDownload | undefined;\n    cameraKitAssetValidationFailed: CameraKitAssetValidationFailed | undefined;\n    cameraKitSession: CameraKitSession | undefined;\n    cameraKitWebLensSwipe: CameraKitWebLensSwipe | undefined;\n    cameraKitWebBenchmarkComplete: CameraKitWebBenchmarkComplete | undefined;\n    cameraKitLegalPrompt: CameraKitLegalPrompt | undefined;\n}\nexport enum AppType {\n    IOS_NATIVE = 0,\n    IOS_WEB_DESKTOP = 1,\n    IOS_WEB_MOBILE = 2,\n    ANDROID_NATIVE = 3,\n    ANDROID_WEB_DESKTOP = 4,\n    ANDROID_WEB_MOBILE = 5,\n    OSX_WEB_DESKTOP = 6,\n    OSX_WEB_MOBILE = 7,\n    WINDOWS_WEB_DESKTOP = 8,\n    WINDOWS_WEB_MOBILE = 9,\n    LINUX_WEB_DESKTOP = 10,\n    LINUX_WEB_MOBILE = 11,\n    LENSSTUDIO = 12,\n    SNAPCAMERA = 13,\n    WEB_DESKTOP = 14,\n    WEB_MOBILE = 15,\n    LENSSTUDIO_REMAKE = 16,\n    UNRECOGNIZED = -1\n}\nexport enum Collection {\n    COLLECTION_UNUSED = 0,\n    GAE = 1,\n    GCE_M = 2,\n    GCE_S = 3,\n    GCE_T = 4,\n    GKE_M = 5,\n    GKE_S = 6,\n    GKE_T = 7,\n    LOCAL = 8,\n    GCE_ST = 9,\n    GKE_ST = 10,\n    GCE_C = 11,\n    GCE_SC = 12,\n    GCE_TC = 13,\n    GCE_TSC = 14,\n    GKE_C = 15,\n    GKE_SC = 16,\n    GKE_TC = 17,\n    GKE_TSC = 18,\n    GKE_W = 19,\n    GKE_WT = 20,\n    GKE_WC = 21,\n    GKE_WSC = 22,\n    UNRECOGNIZED = -1\n}\nexport const CameraKitLensSpin = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitLensSpin>, I>>(object: I): CameraKitLensSpin {\n        const message = createBaseCameraKitLensSpin();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.lensId = object.lensId ?? \"\";\n        message.viewTimeSec = object.viewTimeSec ?? 0;\n        message.lensGroupId = object.lensGroupId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseCameraKitLensSpin(): CameraKitLensSpin {\n    return { cameraKitEventBase: undefined, lensId: \"\", viewTimeSec: 0, lensGroupId: \"\" };\n}\nexport interface CameraKitLensSpin {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    lensId: string;\n    viewTimeSec: number;\n    lensGroupId: string;\n}\nexport const CameraKitWebLensSwipe = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitWebLensSwipe>, I>>(object: I): CameraKitWebLensSwipe {\n        const message = createBaseCameraKitWebLensSwipe();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.performanceCluster = object.performanceCluster ?? 0;\n        message.webglRendererInfo = object.webglRendererInfo ?? \"\";\n        message.lensId = object.lensId ?? \"\";\n        message.lensFrameProcessingTimeMsAvg = object.lensFrameProcessingTimeMsAvg ?? 0;\n        message.lensFrameProcessingTimeMsStd = object.lensFrameProcessingTimeMsStd ?? 0;\n        message.viewTimeSec = object.viewTimeSec ?? 0;\n        message.recordingTimeSec = object.recordingTimeSec ?? 0;\n        message.applyDelaySec = object.applyDelaySec ?? 0;\n        message.avgFps = object.avgFps ?? 0;\n        message.isLensFirstWithinDay = object.isLensFirstWithinDay ?? false;\n        message.isLensFirstWithinMonth = object.isLensFirstWithinMonth ?? false;\n        message.lensGroupId = object.lensGroupId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseCameraKitWebLensSwipe(): CameraKitWebLensSwipe {\n    return {\n        cameraKitEventBase: undefined,\n        performanceCluster: 0,\n        webglRendererInfo: \"\",\n        lensId: \"\",\n        lensFrameProcessingTimeMsAvg: 0,\n        lensFrameProcessingTimeMsStd: 0,\n        viewTimeSec: 0,\n        recordingTimeSec: 0,\n        applyDelaySec: 0,\n        avgFps: 0,\n        isLensFirstWithinDay: false,\n        isLensFirstWithinMonth: false,\n        lensGroupId: \"\",\n    };\n}\nexport interface CameraKitWebLensSwipe {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    performanceCluster: number;\n    webglRendererInfo: string;\n    lensId: string;\n    lensFrameProcessingTimeMsAvg: number;\n    lensFrameProcessingTimeMsStd: number;\n    viewTimeSec: number;\n    recordingTimeSec: number;\n    applyDelaySec: number;\n    avgFps: number;\n    isLensFirstWithinDay: boolean;\n    isLensFirstWithinMonth: boolean;\n    lensGroupId: string;\n}\nexport const CameraKitLensDownload = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitLensDownload>, I>>(object: I): CameraKitLensDownload {\n        const message = createBaseCameraKitLensDownload();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.lensId = object.lensId ?? \"\";\n        message.automaticDownload = object.automaticDownload ?? false;\n        message.downloadTimeSec = object.downloadTimeSec ?? 0;\n        message.sizeByte = object.sizeByte ?? 0;\n        return message;\n    },\n};\nfunction createBaseCameraKitLensDownload(): CameraKitLensDownload {\n    return { cameraKitEventBase: undefined, lensId: \"\", automaticDownload: false, downloadTimeSec: 0, sizeByte: 0 };\n}\nexport interface CameraKitLensDownload {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    lensId: string;\n    automaticDownload: boolean;\n    downloadTimeSec: number;\n    sizeByte: number;\n}\nexport const CameraKitAssetDownload = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitAssetDownload>, I>>(object: I): CameraKitAssetDownload {\n        const message = createBaseCameraKitAssetDownload();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.automaticDownload = object.automaticDownload ?? false;\n        message.downloadTimeSec = object.downloadTimeSec ?? 0;\n        message.sizeByte = object.sizeByte ?? 0;\n        message.assetId = object.assetId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseCameraKitAssetDownload(): CameraKitAssetDownload {\n    return { cameraKitEventBase: undefined, automaticDownload: false, downloadTimeSec: 0, sizeByte: 0, assetId: \"\" };\n}\nexport interface CameraKitAssetDownload {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    automaticDownload: boolean;\n    downloadTimeSec: number;\n    sizeByte: number;\n    assetId: string;\n}\nexport const CameraKitException = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitException>, I>>(object: I): CameraKitException {\n        const message = createBaseCameraKitException();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.lensId = object.lensId ?? \"\";\n        message.type = object.type ?? \"\";\n        message.reason = object.reason ?? \"\";\n        return message;\n    },\n};\nfunction createBaseCameraKitException(): CameraKitException {\n    return { cameraKitEventBase: undefined, lensId: \"\", type: \"\", reason: \"\" };\n}\nexport interface CameraKitException {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    lensId: string;\n    type: string;\n    reason: string;\n}\nexport const CameraKitSession = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitSession>, I>>(object: I): CameraKitSession {\n        const message = createBaseCameraKitSession();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.dailySessionBucket = object.dailySessionBucket ?? 0;\n        message.isFirstWithinMonth = object.isFirstWithinMonth ?? false;\n        message.day = object.day ?? 0;\n        message.month = object.month ?? 0;\n        message.year = object.year ?? 0;\n        return message;\n    },\n};\nfunction createBaseCameraKitSession(): CameraKitSession {\n    return { cameraKitEventBase: undefined, dailySessionBucket: 0, isFirstWithinMonth: false, day: 0, month: 0, year: 0 };\n}\nexport interface CameraKitSession {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    dailySessionBucket: DailySessionBucket;\n    isFirstWithinMonth: boolean;\n    day: number;\n    month: number;\n    year: number;\n}\nexport enum DailySessionBucket {\n    NO_SESSION_BUCKET = 0,\n    ONE_SESSION = 1,\n    TWO_SESSION = 2,\n    THREE_SESSION = 3,\n    FOUR_SESSION = 4,\n    FIVE_SESSION = 5,\n    SIX_SESSION = 6,\n    SEVEN_SESSION = 7,\n    EIGHT_SESSION = 8,\n    NINE_SESSION = 9,\n    TEN_OR_MORE_SESSION = 10,\n    UNRECOGNIZED = -1\n}\nexport const CameraKitLensContentValidationFailed = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitLensContentValidationFailed>, I>>(object: I): CameraKitLensContentValidationFailed {\n        const message = createBaseCameraKitLensContentValidationFailed();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.lensId = object.lensId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseCameraKitLensContentValidationFailed(): CameraKitLensContentValidationFailed {\n    return { cameraKitEventBase: undefined, lensId: \"\" };\n}\nexport interface CameraKitLensContentValidationFailed {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    lensId: string;\n}\nexport const CameraKitAssetValidationFailed = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitAssetValidationFailed>, I>>(object: I): CameraKitAssetValidationFailed {\n        const message = createBaseCameraKitAssetValidationFailed();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.assetId = object.assetId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseCameraKitAssetValidationFailed(): CameraKitAssetValidationFailed {\n    return { cameraKitEventBase: undefined, assetId: \"\" };\n}\nexport interface CameraKitAssetValidationFailed {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    assetId: string;\n}\nexport const CameraKitWebBenchmarkComplete = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitWebBenchmarkComplete>, I>>(object: I): CameraKitWebBenchmarkComplete {\n        const message = createBaseCameraKitWebBenchmarkComplete();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.benchmarkName = object.benchmarkName ?? \"\";\n        message.benchmarkValue = object.benchmarkValue ?? 0;\n        message.performanceCluster = object.performanceCluster ?? 0;\n        message.webglRendererInfo = object.webglRendererInfo ?? \"\";\n        return message;\n    },\n};\nfunction createBaseCameraKitWebBenchmarkComplete(): CameraKitWebBenchmarkComplete {\n    return {\n        cameraKitEventBase: undefined,\n        benchmarkName: \"\",\n        benchmarkValue: 0,\n        performanceCluster: 0,\n        webglRendererInfo: \"\",\n    };\n}\nexport interface CameraKitWebBenchmarkComplete {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    benchmarkName: string;\n    benchmarkValue: number;\n    performanceCluster: number;\n    webglRendererInfo: string;\n}\nexport const CameraKitLegalPrompt = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitLegalPrompt>, I>>(object: I): CameraKitLegalPrompt {\n        const message = createBaseCameraKitLegalPrompt();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.legalPromptId = object.legalPromptId ?? \"\";\n        message.legalPromptResult = object.legalPromptResult ?? 0;\n        return message;\n    },\n};\nexport const CameraKitEventBase = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitEventBase>, I>>(object: I): CameraKitEventBase {\n        const message = createBaseCameraKitEventBase();\n        message.kitEventBase =\n            object.kitEventBase !== undefined && object.kitEventBase !== null\n                ? KitEventBase.fromPartial(object.kitEventBase)\n                : undefined;\n        message.deviceCluster = object.deviceCluster ?? 0;\n        message.cameraKitVersion = object.cameraKitVersion ?? \"\";\n        message.lensCoreVersion = object.lensCoreVersion ?? \"\";\n        message.deviceModel = object.deviceModel ?? \"\";\n        message.cameraKitVariant = object.cameraKitVariant ?? 0;\n        message.cameraKitFlavor = object.cameraKitFlavor ?? 0;\n        message.appId = object.appId ?? \"\";\n        message.deviceConnectivity = object.deviceConnectivity ?? 0;\n        message.sessionId = object.sessionId ?? \"\";\n        message.appVendorUuid = object.appVendorUuid ?? \"\";\n        message.rankingRequestId = object.rankingRequestId ?? \"\";\n        message.cameraKitEnvironment = object.cameraKitEnvironment ?? 0;\n        message.partnerUuid = object.partnerUuid ?? \"\";\n        return message;\n    },\n};\nexport const KitEventBase = {\n    fromPartial<I extends Exact<DeepPartial<KitEventBase>, I>>(object: I): KitEventBase {\n        const message = createBaseKitEventBase();\n        message.oauthClientId = object.oauthClientId ?? \"\";\n        message.locale = object.locale ?? \"\";\n        message.kitUserAgent = object.kitUserAgent ?? \"\";\n        message.ipAddress = object.ipAddress ?? \"\";\n        message.osMinorVersion = object.osMinorVersion ?? \"\";\n        message.kitVariant = object.kitVariant ?? 0;\n        message.kitVariantVersion = object.kitVariantVersion ?? \"\";\n        message.kitClientTimestampMillis = object.kitClientTimestampMillis ?? 0;\n        message.clientSequenceId = object.clientSequenceId ?? 0;\n        message.maxClientSequenceIdOnInstance = object.maxClientSequenceIdOnInstance ?? 0;\n        message.targetArchitecture = object.targetArchitecture ?? \"\";\n        message.runningWithDebuggerAttached = object.runningWithDebuggerAttached ?? false;\n        message.runningInTests = object.runningInTests ?? false;\n        message.runningInSimulator = object.runningInSimulator ?? false;\n        message.isAppPrerelease = object.isAppPrerelease ?? false;\n        message.kitAppId = object.kitAppId ?? \"\";\n        message.kitSessionId = object.kitSessionId ?? \"\";\n        message.kitPluginType = object.kitPluginType ?? 0;\n        message.isFromReactNativePlugin = object.isFromReactNativePlugin ?? false;\n        return message;\n    },\n};\nfunction createBaseKitEventBase(): KitEventBase {\n    return {\n        oauthClientId: \"\",\n        locale: \"\",\n        kitUserAgent: \"\",\n        ipAddress: \"\",\n        osMinorVersion: \"\",\n        kitVariant: 0,\n        kitVariantVersion: \"\",\n        kitClientTimestampMillis: 0,\n        clientSequenceId: 0,\n        maxClientSequenceIdOnInstance: 0,\n        targetArchitecture: \"\",\n        runningWithDebuggerAttached: false,\n        runningInTests: false,\n        runningInSimulator: false,\n        isAppPrerelease: false,\n        kitAppId: \"\",\n        kitSessionId: \"\",\n        kitPluginType: 0,\n        isFromReactNativePlugin: false,\n    };\n}\nfunction createBaseCameraKitEventBase(): CameraKitEventBase {\n    return {\n        kitEventBase: undefined,\n        deviceCluster: 0,\n        cameraKitVersion: \"\",\n        lensCoreVersion: \"\",\n        deviceModel: \"\",\n        cameraKitVariant: 0,\n        cameraKitFlavor: 0,\n        appId: \"\",\n        deviceConnectivity: 0,\n        sessionId: \"\",\n        appVendorUuid: \"\",\n        rankingRequestId: \"\",\n        cameraKitEnvironment: 0,\n        partnerUuid: \"\",\n    };\n}\nfunction createBaseCameraKitLegalPrompt(): CameraKitLegalPrompt {\n    return { cameraKitEventBase: undefined, legalPromptId: \"\", legalPromptResult: 0 };\n}\nexport interface CameraKitLegalPrompt {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    legalPromptId: string;\n    legalPromptResult: CameraKitLegalPromptResult;\n}\nexport enum CameraKitLegalPromptResult {\n    CAMERA_KIT_LEGAL_PROMPT_MISSING = 0,\n    CAMERA_KIT_LEGAL_PROMPT_ACCEPTED = 1,\n    CAMERA_KIT_LEGAL_PROMPT_DISMISSED = 2,\n    UNRECOGNIZED = -1\n}\nexport interface CameraKitEventBase {\n    kitEventBase: KitEventBase | undefined;\n    deviceCluster: number;\n    cameraKitVersion: string;\n    lensCoreVersion: string;\n    deviceModel: string;\n    cameraKitVariant: CameraKitVariant;\n    cameraKitFlavor: CameraKitFlavor;\n    appId: string;\n    deviceConnectivity: CameraKitConnectivityType;\n    sessionId: string;\n    appVendorUuid: string;\n    rankingRequestId: string;\n    cameraKitEnvironment: CameraKitEnvironment;\n    partnerUuid: string;\n}\nexport enum CameraKitEnvironment {\n    CAMERA_KIT_ENVIRONMENT_UNKNOWN = 0,\n    CAMERA_KIT_ENVIRONMENT_STAGING = 1,\n    CAMERA_KIT_ENVIRONMENT_PRODUCTION = 2,\n    UNRECOGNIZED = -1\n}\nexport enum CameraKitConnectivityType {\n    CAMERA_KIT_CONNECTIVITY_TYPE_UNKNOWN = 0,\n    CAMERA_KIT_CONNECTIVITY_TYPE_WIFI = 1,\n    CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE = 2,\n    CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE = 3,\n    CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH = 4,\n    UNRECOGNIZED = -1\n}\nexport enum CameraKitFlavor {\n    CAMERA_KIT_FLAVOR_UNKNOWN = 0,\n    CAMERA_KIT_FLAVOR_DEBUG = 1,\n    CAMERA_KIT_FLAVOR_RELEASE = 2,\n    UNRECOGNIZED = -1\n}\nexport enum CameraKitVariant {\n    CAMERA_KIT_VARIANT_UNKNOWN = 0,\n    CAMERA_KIT_VARIANT_PARTNER = 1,\n    CAMERA_KIT_VARIANT_PUBLIC = 2,\n    UNRECOGNIZED = -1\n}\nexport interface KitEventBase {\n    oauthClientId: string;\n    locale: string;\n    kitUserAgent: string;\n    ipAddress: string;\n    osMinorVersion: string;\n    kitVariant: KitType;\n    kitVariantVersion: string;\n    kitClientTimestampMillis: number;\n    clientSequenceId: number;\n    maxClientSequenceIdOnInstance: number;\n    targetArchitecture: string;\n    runningWithDebuggerAttached: boolean;\n    runningInTests: boolean;\n    runningInSimulator: boolean;\n    isAppPrerelease: boolean;\n    kitAppId: string;\n    kitSessionId: string;\n    kitPluginType: KitPluginType;\n    isFromReactNativePlugin: boolean;\n}\nexport enum KitPluginType {\n    NO_PLUGIN = 0,\n    UNITY = 1,\n    UNRECOGNIZED = -1\n}\nexport enum KitType {\n    UNKNOWN_KIT_TYPE = 0,\n    BITMOJI_KIT = 1,\n    CREATIVE_KIT = 2,\n    LOGIN_KIT = 3,\n    STORY_KIT = 4,\n    CAMERA_KIT = 5,\n    SHOP_KIT = 6,\n    EULA_KIT = 7,\n    PAYMENTS_KIT = 8,\n    INVITE_KIT = 9,\n    CAMERA_KIT_WEB = 10,\n    UNRECOGNIZED = -1\n}\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n","import { forActions } from \"@snap/state-management\";\nimport { map } from \"rxjs\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { CameraKitLegalPromptResult } from \"../../generated-proto/blizzard/cameraKitEvents\";\nimport { LegalState, legalStateFactory } from \"../../legal/legalState\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\n\n/**\n * The LegalPrompt metric reports each time a BIPA legal prompt is shown.\n */\nexport type LegalPrompt = MakeTaggedBusinessEvent<\"legalPrompt\">;\n\n/**\n * @internal\n */\nexport const reportLegalState = Injectable(\n    \"reportLegalState\",\n    [legalStateFactory.token, metricsEventTargetFactory.token, operationalMetricReporterFactory.token] as const,\n    (\n        legalState: LegalState,\n        metricsEventTarget: MetricsEventTarget,\n        operationalMetricsReporter: OperationalMetricsReporter\n    ) => {\n        legalState.events\n            .pipe(\n                forActions(\"accept\", \"reject\"),\n                map(([{ data, name }]) => ({\n                    name: \"legalPrompt\" as const,\n                    legalPromptId: data,\n                    legalPromptResult:\n                        name === \"accept\"\n                            ? CameraKitLegalPromptResult.CAMERA_KIT_LEGAL_PROMPT_ACCEPTED\n                            : CameraKitLegalPromptResult.CAMERA_KIT_LEGAL_PROMPT_DISMISSED,\n                }))\n            )\n            .subscribe({\n                next: (legalPromptEvent) => {\n                    metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"legalPrompt\", legalPromptEvent));\n                    operationalMetricsReporter.count(\n                        \"legal_prompt_interaction\",\n                        1,\n                        new Map([\n                            [\n                                \"accepted\",\n                                (\n                                    legalPromptEvent.legalPromptResult ===\n                                    CameraKitLegalPromptResult.CAMERA_KIT_LEGAL_PROMPT_ACCEPTED\n                                ).toString(),\n                            ],\n                        ])\n                    );\n                },\n            });\n    }\n);\n","import { forActions } from \"@snap/state-management\";\nimport { filter } from \"rxjs\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { lensStateFactory, LensState } from \"../../session/lensState\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\n\n/**\n * The LensContentValidationFailed metric reports every time we handle an lens checksum validation failure.\n */\nexport type LensContentValidationFailed = MakeTaggedBusinessEvent<\"lensContentValidationFailed\">;\n\n/**\n * @internal\n */\nexport const reportLensValidationFailed = Injectable(\n    \"reportLensValidationFailed\",\n    [lensStateFactory.token, metricsEventTargetFactory.token] as const,\n    (lensState: LensState, metricsEventTarget: MetricsEventTarget) => {\n        lensState.events\n            .pipe(\n                forActions(\"applyLensFailed\"),\n                filter(([a]) => a.data.error.name === \"LensContentValidationError\")\n            )\n            .subscribe({\n                next: ([{ data }]) => {\n                    const { lens } = data;\n                    const lensContentValidationFailed: LensContentValidationFailed = {\n                        name: \"lensContentValidationFailed\",\n                        lensId: lens.id,\n                    };\n                    metricsEventTarget.dispatchEvent(\n                        new TypedCustomEvent(\"lensContentValidationFailed\", lensContentValidationFailed)\n                    );\n                },\n            });\n    }\n);\n","import { OperationalMetric } from \"../../generated-proto/pb_schema/camera_kit/v3/operational_metrics\";\nimport { Metric, MetricDimensions, serializeMetricDimensions } from \"./Metric\";\n\n/** @internal */\nexport type HistogramMetric = OperationalMetric & {\n    metric: Extract<OperationalMetric[\"metric\"], { $case: \"histogram\" }>;\n};\n\n/** @internal */\nexport class Histogram extends Metric {\n    static level(name: string, level: number, dimsensions: MetricDimensions = {}): Histogram {\n        const histogram = new Histogram(name, dimsensions);\n        histogram.add(level);\n        return histogram;\n    }\n\n    private readonly levels: number[] = [];\n\n    constructor(readonly name: string, dimensions: MetricDimensions = {}) {\n        super(name, dimensions);\n    }\n\n    add(level: number): void {\n        this.levels.push(level);\n    }\n\n    toOperationalMetric(): HistogramMetric[] {\n        const timestamp = new Date();\n        const name = `${this.name}${serializeMetricDimensions(this.dimensions)}`;\n        return this.levels.map((level) => ({ name, timestamp, metric: { $case: \"histogram\", histogram: level } }));\n    }\n}\n","export const DEFAULT_TIMEZONE = \"America/Los_Angeles\";\n\nexport const dayFormatter = new Intl.DateTimeFormat(\"en-US\", {\n    timeZone: DEFAULT_TIMEZONE,\n    year: \"numeric\",\n    month: \"numeric\",\n    day: \"numeric\",\n});\n\nexport const monthFormatter = new Intl.DateTimeFormat(\"en-US\", {\n    timeZone: DEFAULT_TIMEZONE,\n    year: \"numeric\",\n    month: \"numeric\",\n});\n","import { combineLatestWith, filter, from, map, merge, mergeMap, of, raceWith, switchMap, take, takeUntil } from \"rxjs\";\nimport { forActions, inStates, isState } from \"@snap/state-management\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport { CameraKitSession, cameraKitSessionFactory } from \"../../session/CameraKitSession\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { getTimeMs } from \"../../common/time\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\nimport { CameraKitConfiguration, configurationToken } from \"../../configuration\";\nimport { lensStateFactory, LensState } from \"../../session/lensState\";\nimport { SessionState, sessionStateFactory } from \"../../session/sessionState\";\nimport { Histogram } from \"../operational/Histogram\";\nimport { IndexedDBPersistence } from \"../../persistence/IndexedDBPersistence\";\nimport { ExpiringPersistence } from \"../../persistence/ExpiringPersistence\";\nimport { dayFormatter, monthFormatter } from \"../../common/date\";\n\n// We ignore short-duration lens views.\n//\n// The value is documented here:\n// https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/edit#heading=h.q5liip76r9lt\nconst viewTimeThresholdSec = 0.1;\n\nasync function isFirstTimeWithinPeriods(lensId: string, persistence: ExpiringPersistence<Date>) {\n    let isLensFirstWithinDay = false;\n    let isLensFirstWithinMonth = false;\n\n    try {\n        const lensLastViewDate = await persistence.retrieve(lensId);\n        const currentDate = new Date();\n\n        if (!lensLastViewDate) {\n            isLensFirstWithinDay = true;\n            isLensFirstWithinMonth = true;\n        } else {\n            isLensFirstWithinDay = dayFormatter.format(lensLastViewDate) !== dayFormatter.format(currentDate);\n            isLensFirstWithinMonth = monthFormatter.format(lensLastViewDate) !== monthFormatter.format(currentDate);\n        }\n\n        await persistence.store(lensId, currentDate);\n    } catch (error) {\n        console.error(`Error handling persistence for lensId ${lensId}: ${error}`);\n        isLensFirstWithinDay = false;\n        isLensFirstWithinMonth = false;\n    }\n\n    return { isLensFirstWithinDay, isLensFirstWithinMonth };\n}\n\n/**\n * The LensView metric is emitted after a lens has been viewed (for longer than 100ms), when the lens is turned off.\n *\n * It contains information about rendering performance.\n *\n * Notes:\n *   - If the page is hidden (e.g. user switches to a different tab, or application, or closes the tab, or closes the\n *     browser, navigates to a new page, refreshes, etc.) this metric will be emitted at that time. This is to ensure\n *     we don't lose the metric if the page is closed.\n *   - If the page is hidden and then made visible again later (e.g. user switches to a different tab, then back), we\n *     will begin measuring a new LensView. That is, we will not capture the time when the page is hidden even if the\n *     lens is still rendering in the background.\n *\n * @category Lenses\n * @category Metrics\n */\n// This type corresponds to the internal CameraKitLensSwipe event, described here:\n// https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY#heading=h.q5liip76r9lt\nexport type LensView = MakeTaggedBusinessEvent<\"lensView\">;\n\n/**\n * @internal\n */\nexport const reportLensView = Injectable(\n    \"reportLensView\",\n    [\n        cameraKitSessionFactory.token,\n        lensStateFactory.token,\n        sessionStateFactory.token,\n        metricsEventTargetFactory.token,\n        operationalMetricReporterFactory.token,\n        configurationToken,\n    ] as const,\n    async (\n        session: CameraKitSession,\n        lensState: LensState,\n        sessionState: SessionState,\n        metricsEventTarget: MetricsEventTarget,\n        operationalMetricsReporter: OperationalMetricsReporter,\n        configuration: CameraKitConfiguration\n    ): Promise<void> => {\n        // We need to do this await up front so that it won't interrupt reporting the metric when the session is\n        // suspended -- suspension could happen because the tab is closing, in which case we cannot perform await a\n        // Promise, because in the case of a tab close the browser will not schedule any work for future turns of the\n        // event loop.\n        const { cluster: performanceCluster, webglRendererInfo } = (await configuration.lensPerformance) ?? {\n            cluster: 0,\n            webglRendererInfo: \"unknown\",\n        };\n\n        const lensViewPersistence = new ExpiringPersistence<Date>(\n            // 60 days expiration\n            () => 60 * 24 * 60 * 60,\n            new IndexedDBPersistence({ databaseName: \"recentLensViews\" })\n        );\n\n        merge(\n            // Begin measuring LensCore apply time once the lens has finished downloading and we actually add the lens\n            // to LensCore (LensWait measures the full download + LensCore apply time i.e. perceived UX latency).\n            lensState.events.pipe(\n                forActions(\"downloadComplete\"),\n                map(([a]) => a.data)\n            ),\n\n            // If the session is resumed (e.g. user returns to this tab while a lens is on), we count this as a new\n            // LensView (and applyDelaySec will be 0).\n            lensState.events.pipe(\n                inStates(\"lensApplied\"),\n                switchMap(([, s]) =>\n                    sessionState.events.pipe(\n                        forActions(\"resume\"),\n                        takeUntil(lensState.events.pipe(forActions(\"removeLens\"))),\n                        map(() => s.data)\n                    )\n                )\n            )\n        )\n            .pipe(\n                map((lens): [number, string, string] => [getTimeMs(), lens.id, lens.groupId]),\n                mergeMap(([applyLensStartTime, lensId, lensGroupId]) => {\n                    const alreadyOn = isState(lensState.getState(), \"lensApplied\");\n\n                    const applyDelay = alreadyOn\n                        ? of(0)\n                        : lensState.events.pipe(\n                              forActions(\"resourcesLoaded\"),\n                              filter(([a]) => a.data.id === lensId),\n                              // Applying a new lens may happen before removing the old one, so if we kept taking events\n                              // we would get the lensResourcesLoaded for the next lens, too.\n                              take(1),\n                              map(() => (getTimeMs() - applyLensStartTime) / 1000)\n                          );\n\n                    const viewMetrics = (\n                        alreadyOn\n                            ? of([getTimeMs(), session.metrics.beginMeasurement()] as const)\n                            : lensState.events.pipe(\n                                  forActions(\"turnedOn\"),\n                                  filter(([a]) => a.data.id === lensId),\n                                  map(() => [getTimeMs(), session.metrics.beginMeasurement()] as const)\n                              )\n                    ).pipe(\n                        take(1),\n                        mergeMap(([lensTurnedOnTime, metricsMeasurement]) =>\n                            lensState.events.pipe(\n                                forActions(\"turnedOff\"),\n                                // Applying a new lens may happen before removing the old one, so we'll get a\n                                // lensTurnedOff for the prior lens (if one was applied), which we must filter out.\n                                filter(([a]) => a.data.id === lensId),\n                                // If the session is suspended, we'll count that as the lens turning off.\n                                raceWith(sessionState.events.pipe(forActions(\"suspend\"))),\n                                map(() => {\n                                    metricsMeasurement.end();\n                                    return {\n                                        viewTimeSec: (getTimeMs() - lensTurnedOnTime) / 1000,\n                                        ...metricsMeasurement.measure(),\n                                    };\n                                })\n                            )\n                        )\n                    );\n\n                    return applyDelay.pipe(\n                        combineLatestWith(viewMetrics, from(isFirstTimeWithinPeriods(lensId, lensViewPersistence))),\n                        // This lens should always receive the lensTurnedOff action *before* the next lens is\n                        // turned on. But just in case that assumption is violated, we'll clean up\n                        // (and not report) if another lens turns on before our lens is turned off.\n                        takeUntil(\n                            lensState.events.pipe(\n                                forActions(\"turnedOn\"),\n                                filter(([a]) => a.data.id !== lensId)\n                            )\n                        ),\n                        take(1),\n                        map(([applyDelaySec, viewMetrics, isFirstTimeResults]) => ({\n                            applyDelaySec,\n                            lensId,\n                            lensGroupId,\n                            ...viewMetrics,\n                            ...isFirstTimeResults,\n                        }))\n                    );\n                })\n            )\n            .subscribe({\n                next: async ({\n                    applyDelaySec,\n                    lensId,\n                    lensGroupId,\n                    viewTimeSec,\n                    avgFps,\n                    lensFrameProcessingTimeMsAvg,\n                    lensFrameProcessingTimeMsStd,\n                    lensFrameProcessingTimeMsMedian,\n                    lensFrameProcessingN,\n                    isLensFirstWithinDay,\n                    isLensFirstWithinMonth,\n                }) => {\n                    if (viewTimeSec < viewTimeThresholdSec) return;\n\n                    const lensView: LensView = {\n                        name: \"lensView\",\n                        applyDelaySec,\n                        avgFps,\n                        lensId,\n                        lensGroupId,\n                        lensFrameProcessingTimeMsAvg,\n                        lensFrameProcessingTimeMsStd,\n                        // We don't support recording video, but applications may do this without our knowledge.\n                        recordingTimeSec: 0,\n                        viewTimeSec,\n                        isLensFirstWithinDay,\n                        isLensFirstWithinMonth,\n                        performanceCluster,\n                        webglRendererInfo,\n                    };\n\n                    metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"lensView\", lensView));\n                    operationalMetricsReporter.report(Histogram.level(\"lens_view\", viewTimeSec * 1000));\n\n                    // The first few frames will typically take much longer to process (as they might involve requesting\n                    // remote assets to be downloaded, or other high-latency initialization steps) -- so we'll skip\n                    // reporting views with a very small number of frames.\n                    if (lensFrameProcessingN >= 30) {\n                        operationalMetricsReporter.report(\n                            Histogram.level(\"lens_view_frame-processing-time\", lensFrameProcessingTimeMsMedian, {\n                                performance_cluster: performanceCluster.toString(),\n                            })\n                        );\n                    }\n                },\n            });\n    }\n);\n","import { forActions } from \"@snap/state-management\";\nimport { map, mergeMap, take } from \"rxjs\";\nimport { getTimeMs } from \"../../common/time\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { lensStateFactory, LensState } from \"../../session/lensState\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport {\n    operationalMetricReporterFactory,\n    OperationalMetricsReporter,\n} from \"../operational/operationalMetricsReporter\";\n\n// We ignore short-duration lens waits.\n//\n// The value is documented here:\n// https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/edit#heading=h.q5liip76r9lt\nconst viewTimeThresholdSec = 0.1;\n\n/**\n * The LensWait metric measures the time spent downloading the lens content and required assets. It gives an indication\n * of the real UX impact of download latency. If lens content and assets are pre-loaded, the latency measured here\n * should decrease – we measure between the request to apply a lens and when the lens is ready to render.\n *\n * @category Lenses\n * @category Metrics\n */\n// This type corresponds to the internal CameraKitLensSpin event, described here:\n// https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY#heading=h.q5liip76r9lt\nexport type LensWait = MakeTaggedBusinessEvent<\"lensWait\">;\n\n/**\n * Each time a lens is applied, we measure the duration until the lens is fully loaded by LensCore. This\n * includes any time spent downloading the lens content and required assets from the lens manifest.\n *\n * The intention of this event is to measure the experienced UX latency between a user requesting a lens and\n * the lens rendering. Of course, the application may call `applyLens` at any time, and may hide/show the\n * rendered result at any time – but this should give us a good baseline for how much UX latency could be seen.\n *\n * @internal\n */\nexport const reportLensWait = Injectable(\n    \"reportLensWait\",\n    [lensStateFactory.token, metricsEventTargetFactory.token, operationalMetricReporterFactory.token] as const,\n    (lensState: LensState, metricsEventTarget: MetricsEventTarget, reporter: OperationalMetricsReporter) => {\n        lensState.events\n            .pipe(\n                forActions(\"applyLens\"),\n                mergeMap(([a]) => {\n                    const lensId = a.data.lens.id;\n                    const lensGroupId = a.data.lens.groupId;\n                    const applyLensStartTime = getTimeMs();\n                    return lensState.events.pipe(\n                        // We'll measure the time until either the requested lens was rendered, or a new applyLens\n                        // request was made (in both cases, we're done waiting for this lens).\n                        //\n                        // This does have the side-effect that if a user rapidly switches between lenses, we'll record\n                        // many low-duration lensWait events that are measuring user behavior instead of system latency.\n                        // But this is a good trade-off so that we can capture those long-duration lensWaits that are\n                        // terminated by the user trying a different lens.\n                        //\n                        // (This effect can be mitigated by increasing the viewtimeThresholdSec to ignore low-duration\n                        // waits that are likely caused by user behavior).\n                        forActions(\"firstFrameProcessed\", \"applyLens\"),\n                        take(1),\n                        map((): [number, string, string] => [\n                            (getTimeMs() - applyLensStartTime) / 1000,\n                            lensId,\n                            lensGroupId,\n                        ])\n                    );\n                })\n            )\n            .subscribe({\n                next: ([viewTimeSec, lensId, lensGroupId]) => {\n                    if (viewTimeSec < viewTimeThresholdSec) return;\n\n                    const lensWait: LensWait = {\n                        name: \"lensWait\",\n                        lensId,\n                        viewTimeSec,\n                        lensGroupId,\n                    };\n                    metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"lensWait\", lensWait));\n                    reporter.timer(\"lens.apply_lens_latency\", viewTimeSec * 1000);\n                },\n            });\n    }\n);\n","import { dayFormatter, monthFormatter } from \"../../common/date\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { DailySessionBucket } from \"../../generated-proto/blizzard/cameraKitEvents\";\nimport { IndexedDBPersistence } from \"../../persistence/IndexedDBPersistence\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\n\ninterface UserSessionInfo {\n    mostRecentSessionStartDate: Date;\n    dailySessionBucket: DailySessionBucket;\n}\n\n/**\n * The Session metric reports each user session.\n */\nexport type Session = MakeTaggedBusinessEvent<\"session\">;\n\n/**\n * @internal\n */\nexport const reportUserSession = Injectable(\n    \"reportUserSession\",\n    [metricsEventTargetFactory.token] as const,\n    async (metricsEventTarget: MetricsEventTarget): Promise<void> => {\n        const userSessionKey = \"userSessionInfo\";\n        const db = new IndexedDBPersistence<UserSessionInfo>({ databaseName: \"SessionHistory\" });\n        // We standardize all user dates to PST as per our documentation:\n        // https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/\n        const date = new Date();\n        const formattedDate = dayFormatter.format(date);\n        const formattedDateParts = dayFormatter.formatToParts(date);\n        const { day, month, year } = formattedDateParts.reduce(\n            (acc: Record<string, number>, { type, value }) => ({\n                ...acc,\n                [type]: parseInt(value),\n            }),\n            {}\n        );\n\n        const userSessionInfo = await db.retrieve(userSessionKey);\n        const mostRecentSessionStartDate = userSessionInfo?.mostRecentSessionStartDate;\n        const formattedMostRecentSessionStartDate = mostRecentSessionStartDate\n            ? dayFormatter.format(mostRecentSessionStartDate)\n            : null;\n\n        const dailySessionBucketMap = new Map<number, DailySessionBucket>([\n            [1, DailySessionBucket.ONE_SESSION],\n            [2, DailySessionBucket.TWO_SESSION],\n            [3, DailySessionBucket.THREE_SESSION],\n            [4, DailySessionBucket.FOUR_SESSION],\n            [5, DailySessionBucket.FIVE_SESSION],\n            [6, DailySessionBucket.SIX_SESSION],\n            [7, DailySessionBucket.SEVEN_SESSION],\n            [8, DailySessionBucket.EIGHT_SESSION],\n            [9, DailySessionBucket.NINE_SESSION],\n        ]);\n        let dailySessionBucket = userSessionInfo?.dailySessionBucket ?? DailySessionBucket.NO_SESSION_BUCKET;\n        let isFirstWithinMonth = false;\n        if (formattedMostRecentSessionStartDate === formattedDate) {\n            dailySessionBucket =\n                dailySessionBucketMap.get(dailySessionBucket + 1) ?? DailySessionBucket.TEN_OR_MORE_SESSION;\n            await db.store(userSessionKey, {\n                mostRecentSessionStartDate: date,\n                dailySessionBucket,\n            });\n        } else {\n            isFirstWithinMonth =\n                !mostRecentSessionStartDate ||\n                monthFormatter.format(mostRecentSessionStartDate) !== monthFormatter.format(date);\n            await db.store(userSessionKey, {\n                mostRecentSessionStartDate: date,\n                dailySessionBucket: (dailySessionBucket = DailySessionBucket.ONE_SESSION),\n            });\n        }\n        const session: Session = {\n            name: \"session\",\n            dailySessionBucket,\n            isFirstWithinMonth,\n            month,\n            day,\n            year,\n        };\n        metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"session\", session));\n    }\n);\n","import { OperationalMetric } from \"../../generated-proto/pb_schema/camera_kit/v3/operational_metrics\";\nimport { Metric, MetricDimensions, serializeMetricDimensions } from \"./Metric\";\n\n/** @internal */\nexport type CountMetric = OperationalMetric & {\n    metric: Extract<OperationalMetric[\"metric\"], { $case: \"count\" }>;\n};\n\n/** @internal */\nexport class Count extends Metric {\n    static count(name: string, n: number, dimensions: MetricDimensions = {}): Count {\n        const count = new Count(name, dimensions);\n        count.increment(n);\n        return count;\n    }\n\n    private count = 0;\n\n    constructor(readonly name: string, dimensions: MetricDimensions = {}) {\n        super(name, dimensions);\n    }\n\n    increment(count: number): number {\n        this.count += count;\n        return this.count;\n    }\n\n    toOperationalMetric(): CountMetric[] {\n        return [\n            {\n                name: `${this.name}${serializeMetricDimensions(this.dimensions)}`,\n                timestamp: new Date(),\n                metric: { $case: \"count\", count: this.count },\n            },\n        ];\n    }\n}\n","import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { getPlatformCapabilities } from \"../../platform/platformCapabilities\";\nimport { Count } from \"../operational/Count\";\nimport {\n    OperationalMetricsReporter,\n    operationalMetricReporterFactory,\n} from \"../operational/operationalMetricsReporter\";\n\n/**\n * Report the number of total page loads that have support for various capabilities. By dividing by the total number of\n * data points recorded, we can calculate the percent of page loads with support.\n *\n * @internal\n */\nexport const reportPlatformCapabilities = Injectable(\n    \"reportPlatformCapabilities\",\n    [operationalMetricReporterFactory.token] as const,\n    async (operationalMetricsReporter: OperationalMetricsReporter) => {\n        const { webgl, wasm, webxr } = await getPlatformCapabilities();\n        operationalMetricsReporter.report(Count.count(\"platform_webgl\", webgl.supported ? 1 : 0));\n        operationalMetricsReporter.report(Count.count(\"platform_wasm\", wasm.supported ? 1 : 0));\n        operationalMetricsReporter.report(Count.count(\"platform_webxr\", webxr.supported ? 1 : 0));\n    }\n);\n","import { PartialContainer } from \"../../dependency-injection/PartialContainer\";\nimport { reportSessionException } from \"./reportSessionException\";\nimport { reportBenchmarks } from \"./reportBenchmarks\";\nimport { reportHttpMetrics } from \"./reportHttpMetrics\";\nimport { reportLegalState } from \"./reportLegalState\";\nimport { reportLensAndAssetDownload } from \"./reportLensAndAssetDownload\";\nimport { reportLensValidationFailed } from \"./reportLensValidationFailed\";\nimport { reportLensView } from \"./reportLensView\";\nimport { reportLensWait } from \"./reportLensWait\";\nimport { reportUserSession } from \"./reportUserSession\";\nimport { reportPlatformCapabilities } from \"./reportPlatformCapabilities\";\n\n/**\n * These metrics reporters must be run once in the top-level DI container. They only depend on globally-available\n * services.\n *\n * The businessEventsReporter is special, it doesn't create any of its own metrics, it simply listens to the global\n * metricsEventTarget and reports metrics emitted there to our backend.\n */\nexport const reportGloballyScopedMetrics = new PartialContainer({})\n    .provides(reportHttpMetrics)\n    .provides(reportBenchmarks)\n    .provides(reportLensAndAssetDownload)\n    .provides(reportLegalState)\n    .provides(reportPlatformCapabilities);\n\n/**\n * These metrics reporters must be run once for each CameraKitSession DI container created. They may depend on services\n * which are only available at the session scope (e.g. the CameraKitSession itself).\n */\nexport const reportSessionScopedMetrics = new PartialContainer({})\n    .provides(reportUserSession)\n    .provides(reportLensView)\n    .provides(reportLensWait)\n    .provides(reportSessionException)\n    .provides(reportLensValidationFailed);\n","const e=(()=>{if(\"undefined\"==typeof self)return!1;if(\"top\"in self&&self!==top)try{top}catch(e){return!1}else if(\"showOpenFilePicker\"in self)return\"showOpenFilePicker\";return!1})(),t=e?Promise.resolve().then(function(){return l}):Promise.resolve().then(function(){return h});async function n(...e){return(await t).default(...e)}const r=e?Promise.resolve().then(function(){return y}):Promise.resolve().then(function(){return P});async function i(...e){return(await r).default(...e)}const a=e?Promise.resolve().then(function(){return m}):Promise.resolve().then(function(){return k});async function o(...e){return(await a).default(...e)}const s=async e=>{const t=await e.getFile();return t.handle=e,t};var c=async(e=[{}])=>{Array.isArray(e)||(e=[e]);const t=[];e.forEach((e,n)=>{t[n]={description:e.description||\"Files\",accept:{}},e.mimeTypes?e.mimeTypes.map(r=>{t[n].accept[r]=e.extensions||[]}):t[n].accept[\"*/*\"]=e.extensions||[]});const n=await window.showOpenFilePicker({id:e[0].id,startIn:e[0].startIn,types:t,multiple:e[0].multiple||!1,excludeAcceptAllOption:e[0].excludeAcceptAllOption||!1}),r=await Promise.all(n.map(s));return e[0].multiple?r:r[0]},l={__proto__:null,default:c};function u(e){function t(e){if(Object(e)!==e)return Promise.reject(new TypeError(e+\" is not an object.\"));var t=e.done;return Promise.resolve(e.value).then(function(e){return{value:e,done:t}})}return u=function(e){this.s=e,this.n=e.next},u.prototype={s:null,n:null,next:function(){return t(this.n.apply(this.s,arguments))},return:function(e){var n=this.s.return;return void 0===n?Promise.resolve({value:e,done:!0}):t(n.apply(this.s,arguments))},throw:function(e){var n=this.s.return;return void 0===n?Promise.reject(e):t(n.apply(this.s,arguments))}},new u(e)}const p=async(e,t,n=e.name,r)=>{const i=[],a=[];var o,s=!1,c=!1;try{for(var l,d=function(e){var t,n,r,i=2;for(\"undefined\"!=typeof Symbol&&(n=Symbol.asyncIterator,r=Symbol.iterator);i--;){if(n&&null!=(t=e[n]))return t.call(e);if(r&&null!=(t=e[r]))return new u(t.call(e));n=\"@@asyncIterator\",r=\"@@iterator\"}throw new TypeError(\"Object is not async iterable\")}(e.values());s=!(l=await d.next()).done;s=!1){const o=l.value,s=`${n}/${o.name}`;\"file\"===o.kind?a.push(o.getFile().then(t=>(t.directoryHandle=e,t.handle=o,Object.defineProperty(t,\"webkitRelativePath\",{configurable:!0,enumerable:!0,get:()=>s})))):\"directory\"!==o.kind||!t||r&&r(o)||i.push(p(o,t,s,r))}}catch(e){c=!0,o=e}finally{try{s&&null!=d.return&&await d.return()}finally{if(c)throw o}}return[...(await Promise.all(i)).flat(),...await Promise.all(a)]};var d=async(e={})=>{e.recursive=e.recursive||!1,e.mode=e.mode||\"read\";const t=await window.showDirectoryPicker({id:e.id,startIn:e.startIn,mode:e.mode});return p(t,e.recursive,void 0,e.skipDirectory)},y={__proto__:null,default:d},f=async(e,t=[{}],n=null,r=!1,i=null)=>{Array.isArray(t)||(t=[t]),t[0].fileName=t[0].fileName||\"Untitled\";const a=[];let o=null;if(e instanceof Blob&&e.type?o=e.type:e.headers&&e.headers.get(\"content-type\")&&(o=e.headers.get(\"content-type\")),t.forEach((e,t)=>{a[t]={description:e.description||\"Files\",accept:{}},e.mimeTypes?(0===t&&o&&e.mimeTypes.push(o),e.mimeTypes.map(n=>{a[t].accept[n]=e.extensions||[]})):o?a[t].accept[o]=e.extensions||[]:a[t].accept[\"*/*\"]=e.extensions||[]}),n)try{await n.getFile()}catch(e){if(n=null,r)throw e}const s=n||await window.showSaveFilePicker({suggestedName:t[0].fileName,id:t[0].id,startIn:t[0].startIn,types:a,excludeAcceptAllOption:t[0].excludeAcceptAllOption||!1});!n&&i&&i(s);const c=await s.createWritable();if(\"stream\"in e){const t=e.stream();return await t.pipeTo(c),s}return\"body\"in e?(await e.body.pipeTo(c),s):(await c.write(await e),await c.close(),s)},m={__proto__:null,default:f},w=async(e=[{}])=>(Array.isArray(e)||(e=[e]),new Promise((t,n)=>{const r=document.createElement(\"input\");r.type=\"file\";const i=[...e.map(e=>e.mimeTypes||[]),...e.map(e=>e.extensions||[])].join();r.multiple=e[0].multiple||!1,r.accept=i||\"\",r.style.display=\"none\",document.body.append(r);const a=e=>{\"function\"==typeof o&&o(),t(e)},o=e[0].legacySetup&&e[0].legacySetup(a,()=>o(n),r),s=()=>{window.removeEventListener(\"focus\",s),r.remove()};r.addEventListener(\"click\",()=>{window.addEventListener(\"focus\",s)}),r.addEventListener(\"change\",()=>{window.removeEventListener(\"focus\",s),r.remove(),a(r.multiple?Array.from(r.files):r.files[0])}),\"showPicker\"in HTMLInputElement.prototype?r.showPicker():r.click()})),h={__proto__:null,default:w},v=async(e=[{}])=>(Array.isArray(e)||(e=[e]),e[0].recursive=e[0].recursive||!1,new Promise((t,n)=>{const r=document.createElement(\"input\");r.type=\"file\",r.webkitdirectory=!0;const i=e=>{\"function\"==typeof a&&a(),t(e)},a=e[0].legacySetup&&e[0].legacySetup(i,()=>a(n),r);r.addEventListener(\"change\",()=>{let t=Array.from(r.files);e[0].recursive?e[0].recursive&&e[0].skipDirectory&&(t=t.filter(t=>t.webkitRelativePath.split(\"/\").every(t=>!e[0].skipDirectory({name:t,kind:\"directory\"})))):t=t.filter(e=>2===e.webkitRelativePath.split(\"/\").length),i(t)}),\"showPicker\"in HTMLInputElement.prototype?r.showPicker():r.click()})),P={__proto__:null,default:v},b=async(e,t={})=>{Array.isArray(t)&&(t=t[0]);const n=document.createElement(\"a\");let r=e;\"body\"in e&&(r=await async function(e,t){const n=e.getReader(),r=new ReadableStream({start:e=>async function t(){return n.read().then(({done:n,value:r})=>{if(!n)return e.enqueue(r),t();e.close()})}()}),i=new Response(r),a=await i.blob();return n.releaseLock(),new Blob([a],{type:t})}(e.body,e.headers.get(\"content-type\"))),n.download=t.fileName||\"Untitled\",n.href=URL.createObjectURL(await r);const i=()=>{\"function\"==typeof a&&a()},a=t.legacySetup&&t.legacySetup(i,()=>a(),n);return n.addEventListener(\"click\",()=>{setTimeout(()=>URL.revokeObjectURL(n.href),3e4),i()}),n.click(),null},k={__proto__:null,default:b};export{i as directoryOpen,v as directoryOpenLegacy,d as directoryOpenModern,n as fileOpen,w as fileOpenLegacy,c as fileOpenModern,o as fileSave,b as fileSaveLegacy,f as fileSaveModern,e as supported};\n","const JPEG_ID = 0xffd8;\nconst APP1_MARKER = 0xffe1;\nconst EXIF_ID = 0x45786966;\nconst LITTLE_ENDIAN = 0x4949;\nconst ORIENTATION_TAG_OFFSET = 0x0112;\n\n// http://sylvana.net/jpegcrop/exif_orientation.html\nexport const enum Orientation {\n    TopLeft = 1,\n    TopRight = 2,\n    BottomRight = 3,\n    BottomLeft = 4,\n    LeftTop = 5,\n    RightTop = 6,\n    RightBottom = 7,\n    LeftBottom = 8,\n}\n\n/**\n * Parses JPEG EXIF metadata and returns Orientation tag of it, or undefined if not applicable.\n *\n * Adopted from https://stackoverflow.com/a/32490603\n *\n * @internal\n * @param data JPEG binary.\n * @returns Orientation tag value or undefined.\n */\nexport function extractJpegOrientationTag(data: ArrayBuffer): Orientation | undefined {\n    const view = new DataView(data);\n\n    if (view.getUint16(0, false) !== JPEG_ID) return undefined;\n\n    const length = view.byteLength;\n    let offset = 2;\n\n    while (offset < length) {\n        if (view.getUint16(offset + 2, false) <= 8) return undefined;\n        let marker = view.getUint16(offset, false);\n        offset += 2;\n\n        if (marker === APP1_MARKER) {\n            if (view.getUint32((offset += 2), false) !== EXIF_ID) {\n                return undefined;\n            }\n\n            let little = view.getUint16((offset += 6), false) === LITTLE_ENDIAN;\n            offset += view.getUint32(offset + 4, little);\n            let tags = view.getUint16(offset, little);\n            offset += 2;\n            for (let i = 0; i < tags; i++) {\n                if (view.getUint16(offset + i * 12, little) === ORIENTATION_TAG_OFFSET) {\n                    return view.getUint16(offset + i * 12 + 8, little) as Orientation;\n                }\n            }\n        } else if ((marker & 0xff00) !== 0xff00) {\n            break;\n        } else {\n            offset += view.getUint16(offset, false);\n        }\n    }\n    return undefined;\n}\n","import { fileOpen, FileWithHandle } from \"browser-fs-access\";\nimport { ClientInterfaceData, LensCore } from \"../lens-core-module\";\nimport { getLogger } from \"../logger/logger\";\nimport { extractJpegOrientationTag, Orientation } from \"./exif\";\n\nconst logger = getLogger(\"lensClientInterfaceImagePicker\");\n\n// Common MIME types supported by all browsers as per:\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\nconst mimeTypes = {\n    image: [\n        \"image/avif\",\n        \"image/bmp\",\n        \"image/gif\",\n        \"image/jpeg\",\n        \"image/png\",\n        \"image/svg+xml\",\n        \"image/tiff\",\n        \"image/webp\",\n    ],\n    video: [\n        \"video/3gpp\",\n        \"video/3gpp2\",\n        \"video/mp2t\",\n        \"video/mp4\",\n        \"video/mpeg\",\n        \"video/ogg\",\n        \"video/quicktime\",\n        \"video/webm\",\n        \"video/x-msvideo\",\n    ],\n} as const;\n\nfunction* enumerateSupportedVideoTypes(types: typeof mimeTypes.video) {\n    // test video element to perform MIME types support check\n    const testVideoElement = typeof document !== \"undefined\" ? document.createElement(\"video\") : undefined;\n    for (const type of types) {\n        if (testVideoElement?.canPlayType(type) || false) {\n            yield type;\n        }\n    }\n}\n\nfunction readFileAsArrayBuffer(file: FileWithHandle): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", (event) => {\n            // Safety: target.result is always an ArrayBuffer because we read file using readAsArrayBuffer()\n            resolve(event.target!.result as ArrayBuffer);\n        });\n        reader.addEventListener(\"error\", (event) => {\n            reject(event.target!.error);\n        });\n        reader.readAsArrayBuffer(file);\n    });\n}\n\nfunction getMimeType({ ImageEnabled, VideoEnabled }: ClientInterfaceData) {\n    const types = [];\n    if (ImageEnabled === \"1\") types.push(...mimeTypes.image);\n    if (VideoEnabled === \"1\") types.push(...enumerateSupportedVideoTypes(mimeTypes.video));\n    if (types.length === 0) {\n        throw new Error(\"Unknown media type requested.\");\n    }\n    return types;\n}\n\nfunction getOrientation(data: ArrayBuffer, lensCore: LensCore) {\n    const orientationMap = {\n        [Orientation.TopLeft]: lensCore.ExternalMediaOrientation.CW0,\n        [Orientation.TopRight]: lensCore.ExternalMediaOrientation.CW0,\n        [Orientation.BottomRight]: lensCore.ExternalMediaOrientation.CW180,\n        [Orientation.BottomLeft]: lensCore.ExternalMediaOrientation.CW180,\n        [Orientation.LeftTop]: lensCore.ExternalMediaOrientation.CW90,\n        [Orientation.RightTop]: lensCore.ExternalMediaOrientation.CW90,\n        [Orientation.RightBottom]: lensCore.ExternalMediaOrientation.CW270,\n        [Orientation.LeftBottom]: lensCore.ExternalMediaOrientation.CW270,\n    };\n    try {\n        return orientationMap[extractJpegOrientationTag(data) ?? Orientation.TopLeft];\n    } catch (error) {\n        logger.info(\"Error occured while reading EXIF orientation tag.\", error);\n        return lensCore.ExternalMediaOrientation.CW0;\n    }\n}\n\n/**\n * Shows file open dialog to allow user to select image/video and provides the selection to LensCore.\n *\n * @internal\n */\nexport async function pickClientImage(clientInterfaceData: ClientInterfaceData, lensCore: LensCore) {\n    const mimeTypes = getMimeType(clientInterfaceData);\n    logger.debug(`Opening file dialog for MIME types: ${mimeTypes}`);\n\n    const file = await fileOpen({ mimeTypes });\n    logger.debug(`Selected file MIME type: ${file.type}`);\n\n    const data = await readFileAsArrayBuffer(file);\n    if (file.type.startsWith(\"image/\")) {\n        lensCore.provideExternalImage({\n            data,\n            orientation: getOrientation(data, lensCore),\n            // As per Corvyn: both iOS and Android clients have the ability to pick out individual faces\n            // from an image to apply the effect on, using each of their native face detectors (not using LensCore).\n            // That's what the faceRects is for. For now, we can just apply the effect to the whole image (so face rect\n            // [[0,0][1,1]]). In future, in order to be able to pick out individual faces in the media picker, we could:\n            // - hook up some external web face tracking library\n            // - make LensCore to expose face tracker to external clients\n            faceRects: [\n                {\n                    origin: {\n                        x: 0,\n                        y: 0,\n                    },\n                    size: {\n                        width: 1,\n                        height: 1,\n                    },\n                },\n            ],\n        });\n    } else {\n        lensCore.provideExternalVideo({\n            data,\n            orientation: lensCore.ExternalMediaOrientation.CW0,\n        });\n    }\n}\n","import { lensImagePickerError } from \"../namedErrors\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { lensCoreFactory, LensCore } from \"../lens-core-module\";\nimport { getLogger } from \"../logger/logger\";\nimport { pickClientImage } from \"./imagePicker\";\n\nconst logger = getLogger(\"lensClientInterface\");\n\n/**\n * Registers client interface handler in LensCore.\n *\n * @internal\n * @param lensCore LensCore instance to register in.\n * @param sessionErrors EventTarget to dispatch errors in.\n */\nexport const registerLensClientInterfaceHandler = Injectable(\n    \"registerLensClientInterfaceHandler\",\n    [lensCoreFactory.token] as const,\n    (lensCore: LensCore) => {\n        // Make sure we are compatible with previous LensCore versions\n        if (!lensCore.setClientInterfaceRequestHandler) {\n            logger.warn(\"Current LensCore version doesn't support lens client interface requests\");\n            return;\n        }\n\n        lensCore.setClientInterfaceRequestHandler(async ({ data, interfaceControl, interfaceAction }) => {\n            if (\n                interfaceControl === lensCore.InterfaceControl.ImagePicker &&\n                interfaceAction === lensCore.InterfaceAction.Show\n            ) {\n                await pickClientImage(data, lensCore).catch((error) => {\n                    logger.error(\n                        lensImagePickerError(\n                            \"Error occurred while attempting to select an image file for the lens request.\",\n                            error\n                        )\n                    );\n                });\n            }\n        });\n    }\n);\n","import { take } from \"rxjs\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { Namespace } from \"../generated-proto/pb_schema/cdp/cof/namespace\";\nimport { LensCore, LensCoreConfig, SetPreloadedConfigurationInput, lensCoreFactory } from \"../lens-core-module\";\nimport { RemoteConfiguration, remoteConfigurationFactory } from \"./remoteConfiguration\";\n\nexport const setPreloadedConfiguration = Injectable(\n    \"setPreloadedConfiguration\",\n    [lensCoreFactory.token, remoteConfigurationFactory.token] as const,\n    (lensCore: LensCore, remoteConfiguration: RemoteConfiguration) => {\n        remoteConfiguration\n            .getNamespace(Namespace.LENS_CORE_CONFIG)\n            .pipe(take(1))\n            .subscribe((configs) => {\n                const inputs: SetPreloadedConfigurationInput = configs.map(\n                    ({ configId, value }) => ({ configId, value } as LensCoreConfig)\n                );\n\n                lensCore.setPreloadedConfiguration(inputs);\n            });\n    }\n);\n","import { lensRepositoryFactory, LensRepository } from \"./lens/LensRepository\";\nimport { CONTAINER, Container } from \"./dependency-injection/Container\";\nimport { Injectable } from \"./dependency-injection/Injectable\";\nimport { LensCoreError } from \"./lens-core-module/lensCoreError\";\nimport { LensCore } from \"./lens-core-module/lensCore\";\nimport { CameraKitSession, cameraKitSessionFactory } from \"./session/CameraKitSession\";\nimport { registerLensAssetsProvider } from \"./lens/assets/LensAssetsProvider\";\nimport { lensCoreFactory } from \"./lens-core-module/loader/lensCoreFactory\";\nimport { configurationToken } from \"./configuration\";\nimport { RootServices } from \"./dependency-injection/RootServices\";\nimport { registerUriHandlers } from \"./extensions/uriHandlersRegister\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"./metrics/metricsEventTarget\";\nimport { reportSessionScopedMetrics } from \"./metrics/reporters/reporters\";\nimport { lensStateFactory } from \"./session/lensState\";\nimport { lensKeyboardFactory } from \"./session/LensKeyboard\";\nimport { registerLensClientInterfaceHandler } from \"./lens-client-interface/lensClientInterface\";\nimport { sessionStateFactory } from \"./session/sessionState\";\nimport { lensExecutionError, lensAbortError } from \"./namedErrors\";\nimport { getLogger, resetLogger } from \"./logger/logger\";\nimport { errorLoggingDecorator } from \"./logger/errorLoggingDecorator\";\nimport { TypedEventTarget } from \"./events/TypedEventTarget\";\nimport { TypedCustomEvent } from \"./events/TypedCustomEvent\";\nimport { LensView } from \"./metrics/reporters/reportLensView\";\nimport { LensWait } from \"./metrics/reporters/reportLensWait\";\nimport { PageVisibility, pageVisibilityFactory } from \"./common/pageVisibility\";\nimport { setPreloadedConfiguration } from \"./remote-configuration/preloadConfiguration\";\n\nconst logger = getLogger(\"CameraKit\");\nconst log = errorLoggingDecorator(logger);\n\n/**\n * Metrics event names that are exposed to apps.\n */\nconst publicMetricsEventNames: Array<LensMetricsEvents[\"detail\"][\"name\"]> = [\"lensView\", \"lensWait\"];\n\n/**\n * Lens metrics events.\n *\n * These events are emitted by {@link CameraKit} to report lens usage, performance, apply latency, etc.\n *\n * @category Lenses\n * @category Metrics\n */\nexport type LensMetricsEvents =\n    | TypedCustomEvent<LensView[\"name\"], LensView>\n    | TypedCustomEvent<LensWait[\"name\"], LensWait>;\n\n/**\n * Options available when creating a {@link CameraKitSession}.\n *\n * @category Rendering\n */\nexport interface CreateSessionOptions {\n    /**\n     * Optionally provide an existing canvas element, on which the Live RenderTarget will be rendered.\n     *\n     * If this is not provided, CameraKit will create a new canvas element which can be added to the DOM.\n     */\n    liveRenderTarget?: HTMLCanvasElement;\n\n    /**\n     * Browsers optimize tabs when they are hidden - for example, by pausing the execution of requestAnimationFrame\n     * callbacks.\n     *\n     * If you need the CameraKitSession to continue rendering even when the tab is in the background, set this to true.\n     * There is a small performance penalty, and it's a good practice to only render in the background if absolutely\n     * necessary.\n     */\n    renderWhileTabHidden?: boolean;\n}\n\n/**\n * The entry point to the CameraKit SDK's API. Most of CameraKit's features are accessed via this class.\n *\n * Applications obtain an instance of CameraKit by calling {@link bootstrapCameraKit}.\n *\n * @example\n * ```ts\n * const cameraKit = await bootstrapCameraKit(config)\n * ```\n *\n * Then this class can be used to:\n * - Create a {@link CameraKitSession} instance, which provides the API for setting up media inputs, applying Lenses,\n * and obtaining rendered `<canvas>` outputs.\n * - Query for lenses using {@link LensRepository}.\n * - Listen for lens usage metrics events using {@link MetricsEventTarget}.\n *\n * @category Rendering\n * @category Lenses\n */\nexport class CameraKit {\n    /** @deprecated Use {@link lensRepository} */\n    readonly lenses: { repository: LensRepository };\n\n    /**\n     * Business metrics (e.g. each time a lens is viewed) are emitted here.\n     */\n    readonly metrics: TypedEventTarget<LensMetricsEvents> = new TypedEventTarget();\n\n    private sessions: CameraKitSession[] = [];\n\n    /** @internal */\n    constructor(\n        /**\n         * Used to query for lenses and lens groups.\n         */\n        readonly lensRepository: LensRepository,\n\n        private readonly lensCore: LensCore,\n        private readonly pageVisibility: PageVisibility,\n        private readonly container: Container<RootServices>,\n        allMetrics: MetricsEventTarget\n    ) {\n        this.lenses = { repository: this.lensRepository };\n        // Proxy only a subset of all metrics events to the public-facing emitter -- applications don't need to\n        // know about most events.\n        publicMetricsEventNames.forEach((eventName) => {\n            allMetrics.addEventListener(eventName, (e) => this.metrics.dispatchEvent(e));\n        });\n    }\n\n    /**\n     * Create a CameraKitSession.\n     *\n     * This initializes the rendering engine and returns a {@link CameraKitSession} instance, which provides access\n     * to Lens rendering.\n     *\n     * @example\n     * ```ts\n     * const cameraKit = await bootstrapCameraKit(config)\n     * const session = await cameraKit.createSession()\n     *\n     * const lens = await cameraKit.lensRepository.loadLens(lensId, groupId)\n     * session.applyLens(lens)\n     * ```\n     *\n     * @param options\n     */\n    @log\n    async createSession({\n        liveRenderTarget,\n        renderWhileTabHidden,\n    }: CreateSessionOptions = {}): Promise<CameraKitSession> {\n        // Any error happened during lens rendering can be processed by subscribing to sessionErrors\n        const exceptionHandler = (error: LensCoreError) => {\n            if (error.name === \"LensCoreAbortError\") {\n                logger.error(\n                    lensAbortError(\n                        \"Unrecoverable error occurred during lens execution. \" +\n                            \"The CameraKitSession will be destroyed.\",\n                        error\n                    )\n                );\n            } else {\n                logger.error(\n                    lensExecutionError(\n                        \"Error occurred during lens execution. \" +\n                            \"The lens cannot be rendered and will be removed from the CameraKitSession.\",\n                        error\n                    )\n                );\n            }\n        };\n\n        /**\n         * If/when we add support for multiple concurrent sessions, we'll need to create a copy of the LensCore WASM\n         * module. If we move managing web workers into JS, spawing a new worker thread with its own copy of LensCore\n         * probably becomes a lot more straightforward.\n         *\n         * Currently chromium has a bug preventing rendering while tab is hidden when LensCore is in worker mode.\n         * In order to process tab while it is hidden, the current stopgap is to pass in renderWhileTabHidden as true,\n         * which will initiate session in non worker mode, and set the RenderLoopMode to `SetTimeout`.\n         */\n        await this.lensCore.initialize({\n            canvas: liveRenderTarget,\n            shouldUseWorker: !renderWhileTabHidden && this.container.get(configurationToken).shouldUseWorker,\n            exceptionHandler,\n        });\n\n        await this.lensCore.setRenderLoopMode({\n            mode: renderWhileTabHidden\n                ? this.lensCore.RenderLoopMode.SetTimeout\n                : this.lensCore.RenderLoopMode.RequestAnimationFrame,\n        });\n\n        // Each session gets its own DI Container – some Services provided by this Container may be shared with the\n        // root CameraKit Container, but others may be scoped to the session by passing their token to `copy()`.\n        const sessionContainer = this.container\n            // Right now this is a no-op. If/when we add support for multiple concurrent sessions, we may end up\n            // scoping LensCore to the session.\n            .copy()\n\n            .provides(sessionStateFactory)\n            .provides(lensStateFactory)\n            .provides(lensKeyboardFactory)\n            .provides(cameraKitSessionFactory)\n\n            .run(registerLensAssetsProvider)\n            .run(registerLensClientInterfaceHandler)\n            .run(setPreloadedConfiguration)\n\n            // We'll run a PartialContainer containing reporters for session-scoped metrics. Running this container\n            // allows each metric reporter to initialize itself (e.g. by adding event listeners to detect when certain\n            // actions occur).\n            .run(reportSessionScopedMetrics)\n\n            // UriHandlers may have dependencies on session-scoped services (e.g. LensState, LensKeyboard), so they'll\n            // be registered with LensCore here.\n            .run(registerUriHandlers);\n\n        const session = sessionContainer.get(cameraKitSessionFactory.token);\n        this.sessions.push(session);\n        return session;\n    }\n\n    /**\n     * Destroys all sessions and frees all resources.\n     */\n    @log\n    async destroy() {\n        resetLogger();\n        this.pageVisibility.destroy();\n        await Promise.all(this.sessions.map((session) => session.destroy()));\n        this.sessions = [];\n    }\n}\n\n/** @internal */\nexport const cameraKitFactory = Injectable(\n    \"CameraKit\",\n    [\n        lensRepositoryFactory.token,\n        metricsEventTargetFactory.token,\n        lensCoreFactory.token,\n        pageVisibilityFactory.token,\n        CONTAINER,\n    ] as const,\n    (\n        lensRepository: LensRepository,\n        metrics: MetricsEventTarget,\n        lensCore: LensCore,\n        pageVisibility: PageVisibility,\n        container: Container<RootServices>\n    ) => new CameraKit(lensRepository, lensCore, pageVisibility, container, metrics)\n);\n","import { getPlatformCapabilities } from \"./platformCapabilities\";\n\n/**\n * Throw if the current platform is not capable of running Camera Kit.\n */\nexport async function assertPlatformSupported(): Promise<void> {\n    const { wasm, webgl } = await getPlatformCapabilities();\n    if (!wasm.supported) throw wasm.error;\n    if (!webgl.supported) throw webgl.error;\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || unsafeStringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nexport default version;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","import { v4 } from \"uuid\";\nimport { Observable, catchError, combineLatestWith, from, fromEvent, map, merge, of, switchMap, take } from \"rxjs\";\nimport { entries } from \"../common/entries\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { EventOfType } from \"../events/TypedCustomEvent\";\nimport { EventsFromTarget } from \"../events/TypedEventTarget\";\nimport { FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport { createBatchingHandler } from \"../handlers/batchingHandler\";\nimport { HandlerChainBuilder } from \"../handlers/HandlerChainBuilder\";\nimport { createMappingHandler } from \"../handlers/mappingHandler\";\nimport * as blizzard from \"../generated-proto/blizzard/cameraKitEvents\";\nimport { getLogger } from \"../logger/logger\";\nimport { PageVisibility, pageVisibilityFactory } from \"../common/pageVisibility\";\nimport { CameraKitApiHostname, CameraKitConfiguration, configurationToken } from \"../configuration\";\nimport { remoteConfigurationFactory, RemoteConfiguration } from \"../remote-configuration/remoteConfiguration\";\nimport { IndexedDBPersistence } from \"../persistence/IndexedDBPersistence\";\nimport { ExpiringPersistence } from \"../persistence/ExpiringPersistence\";\nimport { convertDaysToSeconds } from \"../common/time\";\nimport { ConnectionType, getPlatformInfo } from \"../platform/platformInfo\";\nimport { metricsHandlerFactory } from \"./metricsHandler\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"./metricsEventTarget\";\n\nconst logger = getLogger(\"BusinessEventsReporter\");\n\ntype Nullables<T> = { [K in keyof T]-?: undefined extends T[K] ? K : never }[keyof T];\ntype UndefinedToOptional<T> = Partial<Pick<T, Nullables<T>>> & Omit<T, Nullables<T>>;\n\ntype CameraKitBusinessEvents = EventsFromTarget<MetricsEventTarget>[\"detail\"];\n\ntype MakeBlizzardEvent<E> = Omit<E, \"name\"> & { cameraKitEventBase: blizzard.CameraKitEventBase };\n\ntype CreateEventData<EventType extends EventsFromTarget<MetricsEventTarget>[\"type\"]> = (\n    event: MakeBlizzardEvent<EventOfType<EventType, EventsFromTarget<MetricsEventTarget>>[\"detail\"]>\n) => [string, UndefinedToOptional<blizzard.ServerEventData>];\n\ntype EventHandlers = {\n    [EventType in EventsFromTarget<MetricsEventTarget>[\"type\"]]: CreateEventData<EventType>;\n};\n\n/**\n * Translate between an external metric name, which is exposed to SDK users, and an internal Blizzard event name,\n * property name, and constructor.\n *\n * It is very important that we do this, since the naming of these internal business events are unintuitive and will\n * not make sense to SDK users.\n *\n * For a full list of business events (using their internal names), see:\n * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/\n */\ntype CameraKitBusinessEventMap = {\n    assetDownload: MakeBusinessEvent<blizzard.CameraKitAssetDownload>;\n    assetValidationFailed: MakeBusinessEvent<blizzard.CameraKitAssetValidationFailed>;\n    benchmarkComplete: MakeBusinessEvent<blizzard.CameraKitWebBenchmarkComplete>;\n    exception: MakeBusinessEvent<blizzard.CameraKitException>;\n    legalPrompt: MakeBusinessEvent<blizzard.CameraKitLegalPrompt>;\n    lensDownload: MakeBusinessEvent<blizzard.CameraKitLensDownload>;\n    lensView: MakeBusinessEvent<blizzard.CameraKitWebLensSwipe>;\n    lensWait: MakeBusinessEvent<blizzard.CameraKitLensSpin>;\n    lensContentValidationFailed: MakeBusinessEvent<blizzard.CameraKitLensContentValidationFailed>;\n    session: MakeBusinessEvent<blizzard.CameraKitSession>;\n};\n\n/**\n * This interface is defined in the CameraKit pb_schema proto definition – but the generated TypeScript does not handle\n * the `Any` type properly. It does not conform to the Proto3 canonical JSON mapping scheme, as defined here:\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * To solve this (since we only need one message from the CameraKit schema), we'll just manually define the correct\n * interface here.\n */\ninterface SetBusinessEventsRequest {\n    batchEvents: {\n        \"@type\": \"com.snapchat.analytics.blizzard.ServerEventBatch\";\n        serverEvents: blizzard.ServerEvent[];\n    };\n}\n\ninterface AppVendorAndPartnerUuid {\n    appVendorUuid: string | undefined;\n    partnerUuid: string | undefined;\n}\n\n// CameraKit's prod metrics endpoint.\n// See: https://github.sc-corp.net/Snapchat/pb_schema/blob/2a966db/proto/camera_kit/v3/service.proto#L133\nconst relativePath = \"/com.snap.camerakit.v3.Metrics/metrics/business_events\";\n\n// It is rather cumbersome to check the actual final size of a batch, but we can easily limit the number of events we\n// include in each batch -- looking at historical data, typical events average ~1.3kb per event. But there are some\n// events (like CAMERA_KIT_EXCEPTION, which includes a stack trace) that can be much larger.\n//\n// To prevent us running over the 64kibibyte limit imposed by browsers on `keep-alive` requests, we'll set quite a low\n// limit to ensure we don't lose events which are larger in size than we expect.\nconst BUSINESS_EVENT_BATCH_MAX_SIZE = 10;\nconst BUSINESS_EVENT_BATCH_MAX_AGE_MS = 5000;\n\nconst connectivityTypeMapping: Partial<Record<ConnectionType, blizzard.CameraKitConnectivityType>> = {\n    cellular: blizzard.CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE,\n    bluetooth: blizzard.CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH,\n    wifi: blizzard.CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_WIFI,\n    unknown: blizzard.CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNKNOWN,\n    none: blizzard.CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE,\n};\n\nconst vendorUuidKey = \"vendorUuid\";\nconst vendorUuidExpiry = convertDaysToSeconds(60);\n\n/**\n * Retrieves or generates a vendor UUID (Universally Unique Identifier).\n *\n * @param persistence - The persistence storage interface where UUID is stored.\n * @returns {Promise<string | undefined>} - A Promise that resolves to the vendor UUID or undefined,\n * if any failure occurs or opt-in is not enabled.\n */\nconst getOrGenerateVendorUuid = async (persistence: ExpiringPersistence<string>): Promise<string | undefined> => {\n    try {\n        const storedUuid = await persistence.retrieve(vendorUuidKey);\n        if (storedUuid) {\n            return storedUuid;\n        }\n\n        const newUuid = v4();\n        await persistence.store(vendorUuidKey, newUuid);\n\n        return newUuid;\n    } catch (error) {\n        throw new Error(\"Failed to generate vendor UUID\");\n    }\n};\n\nfunction listenAndReport(\n    metricsEventTarget: MetricsEventTarget,\n    metricsHandler: FetchHandler,\n    pageVisibility: PageVisibility,\n    eventHandlers: EventHandlers,\n    apiHostname: CameraKitApiHostname,\n    appVendorAndPartnerUuid: Observable<AppVendorAndPartnerUuid>\n): void {\n    const sessionId = v4();\n    logger.log(`Session ID: ${sessionId}`);\n\n    // Blizzard convention is to start the sequenceId at 1.\n    let sequenceId = 1;\n\n    const handler = new HandlerChainBuilder(metricsHandler)\n        .map(\n            createMappingHandler((events: blizzard.ServerEvent[]) => {\n                const body: SetBusinessEventsRequest = {\n                    batchEvents: {\n                        \"@type\": \"com.snapchat.analytics.blizzard.ServerEventBatch\",\n                        serverEvents: events,\n                    },\n                };\n\n                return new Request(`https://${apiHostname}${relativePath}`, {\n                    method: \"POST\",\n                    body: JSON.stringify(body),\n                    credentials: \"include\",\n\n                    // When this is true it makes fetch behave like `Navigator.sendBeacon` – that is, the request\n                    // will still be made even if the page terminates.\n                    // https://developer.mozilla.org/en-US/docs/Web/API/fetch\n                    keepalive: pageVisibility.isDuringVisibilityTransition(\"hidden\"),\n                });\n            }, pageVisibility)\n        )\n        .map(\n            createBatchingHandler({\n                batchReduce: (\n                    previousBundle: blizzard.ServerEvent[] | undefined,\n                    businessEvent: blizzard.ServerEvent\n                ) => {\n                    const bundle = previousBundle ?? [];\n                    bundle.push(businessEvent);\n                    return bundle;\n                },\n                isBatchComplete: (bundle) => bundle.length >= BUSINESS_EVENT_BATCH_MAX_SIZE,\n                maxBatchAge: BUSINESS_EVENT_BATCH_MAX_AGE_MS,\n                pageVisibility,\n            })\n        ).handler;\n\n    const makeBlizzardEvent = <E extends CameraKitBusinessEvents>(\n        event: E,\n        appVendorUuid: string | undefined,\n        partnerUuid: string | undefined\n    ): MakeBlizzardEvent<E> => {\n        const { sdkShortVersion, sdkLongVersion, lensCore, locale, origin, deviceModel, connectionType } =\n            getPlatformInfo();\n\n        const deviceConnectivity =\n            connectivityTypeMapping[connectionType!] ??\n            blizzard.CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNKNOWN;\n\n        return {\n            ...event,\n            cameraKitEventBase: blizzard.CameraKitEventBase.fromPartial({\n                kitEventBase: blizzard.KitEventBase.fromPartial({\n                    locale,\n                    kitVariant: blizzard.KitType.CAMERA_KIT_WEB,\n                    kitVariantVersion: sdkShortVersion,\n                    kitClientTimestampMillis: Date.now(),\n                }),\n                deviceCluster: 0,\n                cameraKitVersion: sdkLongVersion,\n                lensCoreVersion: lensCore.version,\n                deviceModel,\n                cameraKitVariant: blizzard.CameraKitVariant.CAMERA_KIT_VARIANT_PARTNER,\n                cameraKitFlavor: blizzard.CameraKitFlavor.CAMERA_KIT_FLAVOR_DEBUG,\n                // We overload appId, using the origin instead because it's nice and human-readable (our backed adds\n                // the true appId as oauth_client_id before forwarding events to Blizzard).\n                appId: origin,\n                deviceConnectivity,\n                sessionId,\n                appVendorUuid,\n                partnerUuid,\n            }),\n        };\n    };\n\n    const sendServerEvent = (\n        eventName: string,\n        eventData: UndefinedToOptional<blizzard.ServerEventData>\n    ): Promise<void> => {\n        const { osName: osType, osVersion } = getPlatformInfo();\n        return handler(\n            blizzard.ServerEvent.fromPartial({\n                eventName,\n                osType,\n                osVersion,\n                maxSequenceIdOnInstance: 0,\n                sequenceId: sequenceId++,\n                eventData,\n            })\n        );\n    };\n\n    // Add event listeners for each event type and turn those listeners into Observables\n    const metricsEvents = entries(eventHandlers).map(([eventType, createEventData]) =>\n        fromEvent(metricsEventTarget, eventType).pipe(map((event) => ({ event, createEventData })))\n    );\n\n    // Subscribe to all the metrics events and combine them with the app/partner IDs obtained\n    // from remote configuration -- this means we'll queue up any metrics events that occur\n    // before remote config is downloaded, and send them once that config is available.\n    merge(...metricsEvents)\n        .pipe(combineLatestWith(appVendorAndPartnerUuid))\n        .subscribe(([{ event, createEventData }, { appVendorUuid, partnerUuid }]) => {\n            // Safety: When iterating over object keys in a mapped type, we lose the association between the key type\n            // and the value type – at each iteration, the key type is a union of all possible keys and the value type\n            // is a union of all possible values. When the value is a function with an argument, and that argument\n            // depends on the key type (which is a union), the contravariance of the argument type means that the union\n            // becomes an intersection. In our case here, this means the compiler expects each argument to contain all\n            // properties from all event types. The cast is safe because the mapped `EventHandlers` type ensures that\n            // `createEventData` takes an argument of the type corresponding its key's `eventType`'s event detail.\n            const [eventName, eventData] = createEventData(\n                makeBlizzardEvent(event.detail, appVendorUuid, partnerUuid) as any\n            );\n            sendServerEvent(eventName, eventData);\n        });\n}\n\nexport type MakeBusinessEvent<E> = Omit<\n    {\n        [K in keyof E]: Exclude<E[K], undefined> extends Record<keyof any, any>\n            ? MakeBusinessEvent<Exclude<E[K], undefined>>\n            : E[K];\n    },\n    \"cameraKitEventBase\"\n>;\n\nfunction getAppVendorAndPartnerUuid(\n    configuration: CameraKitConfiguration,\n    remoteConfiguration: RemoteConfiguration\n): Observable<AppVendorAndPartnerUuid> {\n    const vendorAnalyticsPersistence = new ExpiringPersistence<string>(\n        () => vendorUuidExpiry,\n        new IndexedDBPersistence({ databaseName: \"VendorAnalytics\" })\n    );\n\n    return remoteConfiguration.getInitializationConfig().pipe(\n        take(1),\n\n        switchMap(({ appVendorUuidOptIn }) => {\n            const partnerUuid = configuration.analyticsId;\n            if (appVendorUuidOptIn) {\n                return from(getOrGenerateVendorUuid(vendorAnalyticsPersistence)).pipe(\n                    map((appVendorUuid) => ({ appVendorUuid, partnerUuid }))\n                );\n            }\n            return of({ appVendorUuid: undefined, partnerUuid });\n        }),\n\n        catchError((error) => {\n            logger.warn(`Failed to retrieve or generate vendor UUID.`, error);\n            return of({ appVendorUuid: undefined, partnerUuid: configuration.analyticsId });\n        })\n    );\n}\n\nexport type MakeTaggedBusinessEvent<K extends keyof CameraKitBusinessEventMap> = {\n    name: K;\n} & CameraKitBusinessEventMap[K];\n\nexport const businessEventsReporterFactory = Injectable(\n    \"businessEventsReporter\",\n    [\n        metricsEventTargetFactory.token,\n        metricsHandlerFactory.token,\n        pageVisibilityFactory.token,\n        configurationToken,\n        remoteConfigurationFactory.token,\n    ] as const,\n    (\n        metricsEventTarget: MetricsEventTarget,\n        metricsHandler: FetchHandler,\n        pageVisibility: PageVisibility,\n        configuration: CameraKitConfiguration,\n        remoteConfiguration: RemoteConfiguration\n    ) => {\n        const appVendorAndPartnerUuid = getAppVendorAndPartnerUuid(configuration, remoteConfiguration);\n\n        /**\n         * This defines a mapping from a business event's external name (the name we document in public\n         * API docs), to its internal representation as a Blizzard ServerEvent.\n         *\n         * It is important that we do this, since the naming of these internal business events are\n         * unintuitive and will not make sense to SDK users.\n         *\n         * To specify the internal event, we must give the ServerEvent's eventName, the specific property\n         *  name which contains the event data (this is a \"oneof\" property on ServerEvent), and use the\n         * correct event type's `fromPartial` method (this is generated from the ServerEvent protobuf).\n         *\n         * These events are documented here:\n         * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/\n         *\n         * They are defined in code here:\n         * https://github.sc-corp.net/Snapchat/snapchat/tree/master/blizzard/schema/blizzard-schema/\n         *  codeGen/src/main/java/com/snapchat/analytics/schema/events/cameraKit\n         */\n        listenAndReport(\n            metricsEventTarget,\n            metricsHandler,\n            pageVisibility,\n            {\n                assetDownload: (event) => [\n                    \"CAMERA_KIT_ASSET_DOWNLOAD\",\n                    { cameraKitAssetDownload: blizzard.CameraKitAssetDownload.fromPartial(event) },\n                ],\n                assetValidationFailed: (event) => [\n                    \"CAMERA_KIT_ASSET_VALIDATION_FAILED\",\n                    {\n                        cameraKitAssetValidationFailed: blizzard.CameraKitAssetValidationFailed.fromPartial(event),\n                    },\n                ],\n                benchmarkComplete: (event) => [\n                    \"CAMERA_KIT_WEB_BENCHMARK_COMPLETE\",\n                    {\n                        cameraKitWebBenchmarkComplete: blizzard.CameraKitWebBenchmarkComplete.fromPartial(event),\n                    },\n                ],\n                exception: (event) => [\n                    \"CAMERA_KIT_EXCEPTION\",\n                    { cameraKitException: blizzard.CameraKitException.fromPartial(event) },\n                ],\n                legalPrompt: (event) => [\n                    \"CAMERA_KIT_LEGAL_PROMPT\",\n                    { cameraKitLegalPrompt: blizzard.CameraKitLegalPrompt.fromPartial(event) },\n                ],\n                lensDownload: (event) => [\n                    \"CAMERA_KIT_LENS_DOWNLOAD\",\n                    { cameraKitLensDownload: blizzard.CameraKitLensDownload.fromPartial(event) },\n                ],\n                lensView: (event) => [\n                    \"CAMERA_KIT_WEB_LENS_SWIPE\",\n                    { cameraKitWebLensSwipe: blizzard.CameraKitWebLensSwipe.fromPartial(event) },\n                ],\n                lensWait: (event) => [\n                    \"CAMERA_KIT_LENS_SPIN\",\n                    { cameraKitLensSpin: blizzard.CameraKitLensSpin.fromPartial(event) },\n                ],\n                lensContentValidationFailed: (event) => [\n                    \"CAMERA_KIT_LENS_CONTENT_VALIDATION_FAILED\",\n                    {\n                        cameraKitLensContentValidationFailed:\n                            blizzard.CameraKitLensContentValidationFailed.fromPartial(event),\n                    },\n                ],\n                session: (event) => [\n                    \"CAMERA_KIT_SESSION\",\n                    { cameraKitSession: blizzard.CameraKitSession.fromPartial(event) },\n                ],\n            },\n            configuration.apiHostname,\n            appVendorAndPartnerUuid\n        );\n    }\n);\n","import { filter, Observable } from \"rxjs\";\nimport { stringifyError } from \"../common/errorHelpers\";\nimport { CameraKitConfiguration, configurationToken } from \"../configuration\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { getPlatformInfo } from \"../platform/platformInfo\";\nimport { logEntriesFactory } from \"./logEntries\";\nimport { LogEntry, logLevelMap } from \"./logger\";\n\n/**\n * The factory subscribes to log entry events and, based on the configured log level,\n * forwards matching log entries to the logger specified in the CameraKit configuration object.\n *\n * @internal\n */\nexport const registerLogEntriesSubscriber = Injectable(\n    \"registerLogEntriesSubscriber\",\n    [configurationToken, logEntriesFactory.token] as const,\n    (configuration: CameraKitConfiguration, logEntries: Observable<LogEntry>) => {\n        logEntries\n            .pipe(filter((entry) => logLevelMap[entry.level] >= logLevelMap[configuration.logLevel]))\n            .subscribe((logEntry) => {\n                switch (configuration.logger) {\n                    case \"console\":\n                        // Chrome doesn't print the `cause` Error property, so we need to manually construct a complete\n                        // stack trace using our `stringifyError` helper.\n                        const messages =\n                            getPlatformInfo().browser.brand === \"Chrome\"\n                                ? logEntry.messages.map((message) => {\n                                      if (!(message instanceof Error)) return message;\n                                      message.stack = stringifyError(message);\n                                      return message;\n                                  })\n                                : logEntry.messages;\n\n                        console[logEntry.level](`[CameraKit.${logEntry.module}]`, ...messages);\n                        break;\n                }\n            });\n    }\n);\n","import { grpc } from \"@improbable-eng/grpc-web\";\nimport { Writer } from \"protobufjs\";\nimport { entries, fromEntries } from \"../common/entries\";\nimport { Exact, DeepPartial } from \"../generated-proto/pb_schema/camera_kit/v3/service\";\nimport { Result } from \"../common/result\";\nimport { GrpcHandler } from \"./grpcHandler\";\n\ntype TsProtoServiceDefinition<Methods extends TsProtoMethods> = {\n    name: string;\n    fullName: string;\n    methods: Methods;\n};\n\ntype TsProtoMethods = { [methodName: string]: TsProtoMethodDefinition<any, any> };\n\ntype TsProtoMethodDefinition<Request, Response> = {\n    name: string;\n    requestType: TsProtoMessage<Request>;\n    responseType: TsProtoMessage<Response>;\n};\n\ntype TsProtoMessage<M> = {\n    encode: (message: M) => Writer;\n    decode: (message: Uint8Array) => M;\n    fromPartial: (partialMessage: any) => M;\n};\n\nexport type GrpcServiceClient<S extends TsProtoServiceDefinition<any>> = {\n    [MethodName in keyof S[\"methods\"]]: InferGrpcMethod<S[\"methods\"][MethodName]>;\n};\n\ninterface UnaryOutput<M> {\n    status: grpc.Code;\n    statusMessage: string;\n    headers: grpc.Metadata;\n    message: M | null;\n    trailers: grpc.Metadata;\n}\n\ntype InferGrpcMethod<M extends TsProtoMethodDefinition<any, any>> = M extends TsProtoMethodDefinition<\n    infer Request,\n    infer Response\n>\n    ? <I extends Exact<DeepPartial<Request>, I>>(\n          request: I\n      ) => Promise<Result<UnaryOutput<Response & grpc.ProtobufMessage>, UnaryOutput<Response & grpc.ProtobufMessage>>>\n    : never;\n\nfunction messageClass<M>(message: TsProtoMessage<M>, data: M): grpc.ProtobufMessageClass<grpc.ProtobufMessage> {\n    return class Message implements grpc.ProtobufMessage {\n        constructor() {\n            Object.assign(this, message.fromPartial(data));\n        }\n\n        static deserializeBinary(data: Uint8Array): Message {\n            const protobufMessage = new Message();\n            return { ...protobufMessage, ...message.decode(data) } as Message;\n        }\n\n        serializeBinary(): Uint8Array {\n            return message.encode(this as any).finish();\n        }\n        toObject(): this {\n            return this;\n        }\n    };\n}\n\n/**\n * Convert a service definition generated by ts-proto (using the `outputServices=generic-definitions` CLI option) into\n * a working client.\n *\n * @param serviceDefinition\n * @param handler\n * @returns A client that can make requests to a remote service by sending Protobuf-encoded messages over HTTP using the\n * grpc-web package.\n *\n * @internal\n */\nexport function createTsProtoClient<Methods extends TsProtoMethods, S extends TsProtoServiceDefinition<Methods>>(\n    serviceDefinition: S,\n    handler: GrpcHandler\n): GrpcServiceClient<S> {\n    return fromEntries(\n        entries(serviceDefinition.methods).map(([methodName, methodDefinition]) => {\n            return [\n                methodName,\n                async (request: unknown) => {\n                    const requestType = messageClass(methodDefinition.requestType, request);\n                    const responseType = messageClass(methodDefinition.responseType, {});\n                    return handler({\n                        serviceName: serviceDefinition.fullName,\n                        methodName: methodDefinition.name,\n                        requestType,\n                        responseType,\n                    });\n                },\n            ];\n            // Safety: We're mapping from the method definitions object into the GrpcServiceClient object in a manner\n            // that preserves each key in the method definitions object, pairing it with the corresponding\n            // serialization/deserialization logic for that particular method. But in doing this, we lose type\n            // specificity by converting the method definition object to a list of entries, mapping them, and then\n            // converting back into the client object -- so we're forced into this type cast.\n        })\n    ) as GrpcServiceClient<S>;\n}\n","/* eslint-disable max-classes-per-file */\n\ninterface BaseResult<T, E> {\n    readonly ok: boolean;\n\n    unwrap(): T;\n    unwrapErr(): E;\n\n    map<T2>(m: (value: T) => T2): Result<T2, E>;\n    flatMap<T2 extends OkResult<unknown>>(m: (value: T) => T2): Result<ValueOf<T2>, E>;\n    flatMap<E2 extends ErrResult<unknown>>(m: (value: T) => E2): Result<T, E | ValueOf<E2>>;\n    flatMap<R extends Result<unknown, unknown>>(m: (value: T) => R): Result<OkValueOf<R>, E | ErrValueOf<R>>;\n}\n\ntype OkValueOf<R> = R extends OkResult<infer T> ? T : never;\ntype ErrValueOf<R> = R extends ErrResult<infer E> ? E : never;\ntype ValueOf<R> = OkValueOf<R> | ErrValueOf<R>;\n\nexport class OkResult<T> implements BaseResult<T, never> {\n    readonly ok = true;\n    constructor(private readonly value: T) {}\n\n    unwrap(): T {\n        return this.value;\n    }\n\n    unwrapErr(): never {\n        throw new Error(\"Ok Result cannot unwrapErr.\");\n    }\n\n    map<T2>(m: (value: T) => T2): OkResult<T2> {\n        return new OkResult(m(this.value));\n    }\n\n    flatMap<T2 extends OkResult<unknown>>(m: (value: T) => T2): T2;\n    flatMap<E2 extends ErrResult<unknown>>(m: (value: T) => E2): E2;\n    flatMap<R extends Result<unknown, unknown>>(m: (value: T) => R): R;\n    flatMap<R extends Result<unknown, unknown>>(m: (value: T) => R): R {\n        return m(this.value);\n    }\n}\n\nexport const Ok = <T>(value: T) => new OkResult(value);\n\nexport class ErrResult<E> implements BaseResult<never, E> {\n    readonly ok = false;\n    constructor(private readonly value: E) {}\n\n    unwrap(): never {\n        throw this.value;\n    }\n\n    unwrapErr(): E {\n        return this.value;\n    }\n\n    map(): ErrResult<E> {\n        return this;\n    }\n\n    flatMap(): ErrResult<E> {\n        return this;\n    }\n}\n\nexport const Err = <E>(value: E) => new ErrResult(value);\n\nexport type Result<T, E> = OkResult<T> | ErrResult<E>;\n","import { grpc } from \"@improbable-eng/grpc-web\";\nimport { Handler, RequestMetadata } from \"../handlers/HandlerChainBuilder\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { CameraKitConfiguration, configurationToken } from \"../configuration\";\nimport { Err, Ok, Result } from \"../common/result\";\nimport { FetchHandler, cameraKitServiceFetchHandlerFactory } from \"../handlers\";\n\nexport interface GrpcRequest {\n    serviceName: string;\n    methodName: string;\n    requestType: grpc.ProtobufMessageClass<grpc.ProtobufMessage>;\n    responseType: grpc.ProtobufMessageClass<grpc.ProtobufMessage>;\n}\n\nexport type GrpcHandler = Handler<\n    GrpcRequest,\n    Result<grpc.UnaryOutput<grpc.ProtobufMessage>, grpc.UnaryOutput<grpc.ProtobufMessage>>,\n    RequestMetadata\n>;\n\n/**\n * An Injectable handler that can make requests to the CameraKit backend service via grpc-web. This handler can be\n * passed to {@link createTsProtoClient} to produce a well-typed service client.\n *\n * @internal\n */\nexport const gprcHandlerFactory = Injectable(\n    \"grpcHandler\",\n    [configurationToken, cameraKitServiceFetchHandlerFactory.token],\n    (configuration: CameraKitConfiguration, fetchHandler: FetchHandler): GrpcHandler => {\n        const host = `https://${configuration.apiHostname}`;\n\n        // We define our own Transport so that we can use our custom `fetch` implementation. This is important for two\n        // reasons:\n        //   1. Our custom fetch includes features like retries that we want to use for these requests.\n        //   2. Applications may override this fetch implementation (via our DI system) to support more advanced\n        //      use-cases.\n        const transport: grpc.TransportFactory = (options) => {\n            let metadata: grpc.Metadata | undefined = undefined;\n            const controller = AbortController ? new AbortController() : undefined;\n            let cancelled = false;\n            return {\n                sendMessage(msgBytes) {\n                    fetchHandler(options.url, {\n                        headers: metadata?.toHeaders() ?? {},\n                        method: \"POST\",\n                        body: msgBytes,\n                        signal: controller?.signal,\n                    })\n                        .then((response) => {\n                            options.onHeaders(new grpc.Metadata(response.headers), response.status);\n                            return response.arrayBuffer();\n                        })\n                        .then((body) => {\n                            if (cancelled) return;\n                            options.onChunk(new Uint8Array(body));\n                            options.onEnd();\n                        })\n                        .catch((error) => {\n                            if (cancelled) return;\n                            cancelled = true;\n                            options.onEnd(error);\n                        });\n                },\n\n                start(m) {\n                    metadata = m;\n                },\n\n                finishSend() {},\n\n                cancel() {\n                    if (cancelled) return;\n                    cancelled = true;\n                    controller?.abort();\n                },\n            };\n        };\n\n        return async (request) =>\n            new Promise((resolve) => {\n                grpc.unary(\n                    {\n                        methodName: request.methodName,\n                        service: { serviceName: request.serviceName },\n                        requestStream: false,\n                        responseStream: false,\n                        requestType: request.requestType,\n                        responseType: request.responseType,\n                    },\n                    {\n                        request: new request.requestType(),\n                        host,\n                        onEnd: (response) => {\n                            if (response.status === grpc.Code.OK) {\n                                resolve(Ok(response));\n                            } else {\n                                resolve(Err(response));\n                            }\n                        },\n                        transport,\n                    }\n                );\n            });\n    }\n);\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { LensesDefinition } from \"../generated-proto/pb_schema/camera_kit/v3/service\";\nimport { GrpcServiceClient, createTsProtoClient } from \"./createTsProtoClient\";\nimport { GrpcHandler, gprcHandlerFactory } from \"./grpcHandler\";\n\nexport type LensesClient = GrpcServiceClient<typeof LensesDefinition>;\n\nexport const lensesClientFactory = Injectable(\n    \"lensesClient\",\n    [gprcHandlerFactory.token],\n    (grpcHandler: GrpcHandler): LensesClient => createTsProtoClient(LensesDefinition, grpcHandler)\n);\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    OneOf    = require(\"./oneof\"),\n    util     = require(\"./util\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\n */\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace || object instanceof OneOf))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i:\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\");\n    // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\n                (\"default:\");\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].substr(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.substr(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\" || part === \"prototype\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n */\nfunction Enum(name, values, options, comment, comments) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"  , this.options,\n        \"values\"   , this.values,\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"  , keepComments ? this.comment : undefined,\n        \"comments\" , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n","\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        commentType = null,\n        commentText = null,\n        commentLine = 0,\n        commentLineEmpty = false,\n        commentIsLeading = false;\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        commentType = source.charAt(start++);\n        commentLine = line;\n        commentLineEmpty = false;\n        commentIsLeading = isLeading;\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                commentLineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        commentText = lines\n            .join(\"\\n\")\n            .trim();\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        // look for 1 or 2 slashes since startOffset would already point past\n        // the first slash that started the comment.\n        var isComment = /^\\s*\\/{1,2}/.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        if (trailingLine === undefined) {\n            if (commentLine === line - 1 && (alternateCommentMode || commentType === \"*\" || commentLineEmpty)) {\n                ret = commentIsLeading ? commentText : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (commentLine < trailingLine) {\n                peek();\n            }\n            if (commentLine === trailingLine && !commentLineEmpty && (alternateCommentMode || commentType === \"/\")) {\n                ret = commentIsLeading ? null : commentText;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n","\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(\"./tokenize\"),\n    Root      = require(\"./root\"),\n    Type      = require(\"./type\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    OneOf     = require(\"./oneof\"),\n    Enum      = require(\"./enum\"),\n    Service   = require(\"./service\"),\n    Method    = require(\"./method\"),\n    types     = require(\"./types\"),\n    util      = require(\"./util\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        syntax,\n        isProto3 = false;\n\n    var ptr = root;\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\n                target.push(readString());\n            else\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n        } while (skip(\",\", true));\n        skip(\";\");\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        syntax = readString();\n        isProto3 = syntax === \"proto3\";\n\n        /* istanbul ignore if */\n        if (!isProto3 && syntax !== \"proto2\")\n            throw illegal(syntax, \"syntax\");\n\n        skip(\";\");\n    }\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n\n        if (rule === \"proto3_optional\") {\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n            var oneof = new OneOf(\"_\" + name);\n            field.setOption(\"proto3_optional\", true);\n            oneof.add(field);\n            parent.add(oneof);\n        } else {\n            parent.add(field);\n        }\n\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\n        // all known packable types and anything that could be an enum (= is not a basic type).\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\n    }\n\n    function parseGroup(parent, rule) {\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {};\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment);\n    }\n\n    function parseOption(parent, token) {\n        var isCustom = skip(\"(\", true);\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token;\n        var option = name;\n        var propName;\n\n        if (isCustom) {\n            skip(\")\");\n            name = \"(\" + name + \")\";\n            option = name;\n            token = peek();\n            if (fqTypeRefRe.test(token)) {\n                propName = token.substr(1); //remove '.' before property name\n                name += token;\n                next();\n            }\n        }\n        skip(\"=\");\n        var optionValue = parseOptionValue(parent, name);\n        setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        if (skip(\"{\", true)) { // { a: \"foo\" b { c: \"bar\" } }\n            var result = {};\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next()))\n                    throw illegal(token, \"name\");\n\n                var value;\n                var propName = token;\n                if (peek() === \"{\")\n                    value = parseOptionValue(parent, name + \".\" + token);\n                else {\n                    skip(\":\");\n                    if (peek() === \"{\")\n                        value = parseOptionValue(parent, name + \".\" + token);\n                    else {\n                        value = readValue(true);\n                        setOption(parent, name + \".\" + token, value);\n                    }\n                }\n                var prevValue = result[propName];\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n                result[propName] = value;\n                skip(\",\", true);\n            }\n            return result;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token))\n                return;\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(parent, token, reference);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(parent, \"proto3_optional\", reference);\n                    } else {\n                        parseField(parent, \"optional\", reference);\n                    }\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"option\":\n\n                parseOption(ptr, token);\n                skip(\";\");\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         syntax       : syntax,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n","\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-light\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(\"./tokenize\");\nprotobuf.parse            = require(\"./parse\");\nprotobuf.common           = require(\"./common\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n","// full library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index\");\n","import { Writer } from \"protobufjs\";\nimport { Lens } from \"../generated-proto/pb_schema/camera_kit/v3/lens\";\nimport { LensesClient, lensesClientFactory } from \"../clients/lensesClient\";\nimport { ConcatInjectable } from \"../dependency-injection/Injectable\";\nimport { LensSource, lensSourcesFactory } from \"./LensSource\";\n\n/**\n * This LensSource loads lenses from the CameraKit backend service. It is meant to be used as the last LensSource in the\n * LensSource[] array used by LensRepository to load lenses.\n *\n * We ensure this is the case by providing cameraKitLensSourceFactory *after* the DI container has been modified by the\n * application during bootstrap -- this way we're guaranteed to place this LensSource after all other LensSources.\n *\n * @internal\n */\nexport const cameraKitLensSourceFactory = ConcatInjectable(\n    lensSourcesFactory.token,\n    [lensesClientFactory.token],\n    (lensesClient: LensesClient): LensSource => ({\n        // This LensSource will claim ownership of all lens groups -- it should be used as the last element in a\n        // list of LensSources, as a catch-all to load any lens groups not claimed by other LensSources.\n        isGroupOwner(): boolean {\n            return true;\n        },\n\n        async loadLens(lensId: string, groupId: string): Promise<ArrayBuffer> {\n            const result = await lensesClient.getGroupLens({ lensId, groupId });\n            if (!result.ok) {\n                const error = result.unwrapErr();\n                throw new Error(\n                    `Cannot load lens lens ${lensId} from group ${groupId}. An error occured in the ` +\n                        `gRPC client:\\n\\t[${error.status}] ${error.statusMessage}`\n                );\n            }\n            const response = result.unwrap();\n            if (!response.message?.lens) {\n                throw new Error(\n                    `Cannot load lens ${lensId} from group ${groupId}. The response did not contain ` +\n                        `a lens.\\n\\t${JSON.stringify(result)} for requestId ${response.headers.get(\"x-request-id\")}`\n                );\n            }\n            return Lens.encode(response.message.lens, Writer.create().uint32(10).fork()).ldelim().finish();\n        },\n\n        async loadLensGroup(groupId: string): Promise<ArrayBuffer> {\n            const result = await lensesClient.getGroup({ id: groupId });\n            if (!result.ok) {\n                const error = result.unwrapErr();\n                throw new Error(\n                    `Cannot load lens group ${groupId}. An error occured in the gRPC client:\\n` +\n                        `\\t[${error.status}] ${error.statusMessage}`\n                );\n            }\n            const response = result.unwrap();\n            if (!response.message?.lenses) {\n                throw new Error(\n                    `Cannot load lens group ${groupId}. The response contained no lenses ` +\n                        `\\n\\t${JSON.stringify(response)} for requestId ${response.headers.get(\"x-request-id\")}`\n                );\n            }\n            const writer = Writer.create();\n            response.message.lenses.forEach((lens) => Lens.encode(lens, writer.uint32(10).fork()).ldelim());\n            return writer.finish();\n        },\n    })\n);\n","import environment from \"./environment.json\";\nimport lensCoreWasm from \"./lensCoreWasmVersions.json\";\nimport { lensRepositoryFactory } from \"./lens/LensRepository\";\nimport { Container } from \"./dependency-injection/Container\";\nimport { CameraKit, cameraKitFactory } from \"./CameraKit\";\nimport { lensCoreFactory } from \"./lens-core-module/loader/lensCoreFactory\";\nimport { Injectable } from \"./dependency-injection/Injectable\";\nimport { remoteMediaAssetLoaderFactory } from \"./lens/assets/remoteMediaAssetLoaderFactory\";\nimport { deviceDependentAssetLoaderFactory } from \"./lens/assets/deviceDependentAssetLoader\";\nimport { staticAssetLoaderFactory } from \"./lens/assets/staticAssetLoader\";\nimport { defaultFetchHandlerFactory } from \"./handlers/defaultFetchHandler\";\nimport { cameraKitServiceFetchHandlerFactory } from \"./handlers/cameraKitServiceFetchHandlerFactory\";\nimport { CameraKitBootstrapConfiguration, createCameraKitConfigurationFactory } from \"./configuration\";\nimport { PublicServices } from \"./dependency-injection/RootServices\";\nimport { PartialContainer } from \"./dependency-injection/PartialContainer\";\nimport { metricsHandlerFactory } from \"./metrics/metricsHandler\";\nimport { operationalMetricReporterFactory } from \"./metrics/operational/operationalMetricsReporter\";\nimport { uriHandlersFactory } from \"./extensions/UriHandlers\";\nimport { assert } from \"./common/assertions\";\nimport { isSafeString } from \"./common/typeguards\";\nimport { metricsEventTargetFactory } from \"./metrics/metricsEventTarget\";\nimport { reportGloballyScopedMetrics } from \"./metrics/reporters/reporters\";\nimport { getLogger } from \"./logger/logger\";\nimport { logEntriesFactory } from \"./logger/logEntries\";\nimport { assertPlatformSupported } from \"./platform/assertPlatformSupported\";\nimport { lensPersistenceStoreFactory } from \"./lens/LensPersistenceStore\";\nimport { remoteConfigurationFactory } from \"./remote-configuration/remoteConfiguration\";\nimport { lensAssetRepositoryFactory } from \"./lens/assets/LensAssetRepository\";\nimport { legalStateFactory } from \"./legal/legalState\";\nimport { legalPromptFactory } from \"./legal/legalPrompt\";\nimport { bootstrapError, ConfigurationError, configurationError, PlatformNotSupportedError } from \"./namedErrors\";\nimport { businessEventsReporterFactory } from \"./metrics/businessEventsReporter\";\nimport { reportGlobalException } from \"./metrics/reporters/reportGlobalException\";\nimport { registerLogEntriesSubscriber } from \"./logger/registerLogEntriesSubscriber\";\nimport { requestStateEventTargetFactory } from \"./handlers/requestStateEmittingHandler\";\nimport { pageVisibilityFactory } from \"./common/pageVisibility\";\nimport { cofHandlerFactory } from \"./remote-configuration/cofHandler\";\nimport { remoteApiServicesFactory } from \"./extensions/RemoteApiServices\";\nimport { lensesClientFactory } from \"./clients/lensesClient\";\nimport { gprcHandlerFactory } from \"./clients/grpcHandler\";\nimport { lensSourcesFactory } from \"./lens/LensSource\";\nimport { cameraKitLensSourceFactory } from \"./lens/cameraKitLensSource\";\n\nconst logger = getLogger(\"bootstrapCameraKit\");\n\n// The following errors are not wrapped with BootstrapError and bubble up as is.\nconst nonWrappableErrors: [ConfigurationError[\"name\"], PlatformNotSupportedError[\"name\"]] = [\n    \"ConfigurationError\",\n    \"PlatformNotSupportedError\",\n];\n\n/**\n * Returns true if given error has to be wrapped with BootstrapError.\n */\nfunction shouldWrapError(error: unknown): boolean {\n    if (error instanceof Error) {\n        return !nonWrappableErrors.some((name) => error.name === name);\n    }\n    return true;\n}\n\n/**\n * For more advanced use-cases, this DI Container holds services for which a custom implementation may be provided by\n * the application.\n *\n * @category Bootstrapping and Configuration\n */\nexport type PublicContainer = Container<PublicServices>;\n\n/**\n * Bootstrap CameraKit. This will download the WebAssembly code which powers CameraKit's rendering engine, and return\n * an instance of {@link CameraKit}.\n *\n * CameraKit must be provided with some configuration (the application's API token), and there are some additional\n * configurations which are optional.\n *\n * Descriptions of the available configurations can be found in the documentation for\n * {@link CameraKitBootstrapConfiguration}\n *\n * ---\n *\n * There is also a second, more advanced way to modify CameraKit to provide greater flexibility to support less common\n * use cases.\n *\n * This requires some knowledge of CameraKit's dependency injection system, and allows applications to provide their\n * own custom implementations of certain CameraKit components. This functionality will only be needed by applications\n * with very specific, more advanced requirements.\n *\n * @example\n * ```ts\n * // The most common way to bootstrap:\n * const cameraKit = await bootstrapCameraKit({ apiToken: myApiToken })\n *\n * // For special advanced use-cases, it is possible to provide custom implementations for certain CameraKit components.\n * const cameraKit = await bootstrapCameraKit(config, (container) => {\n *   return container.provides(myCustomRemoteMediaAssetLoaderFactory)\n * })\n * ```\n *\n * @param configuration Configure CameraKit with e.g. credentials, global resource endpoints, etc.\n * @param provide Optional function that can make modifications to CameraKit's root DI container.\n * @returns A {@link CameraKit} instance, which is the entry point to CameraKit's API.\n *\n * @throws\n *  - {@link ConfigurationError} when provided configuration object is invalid\n *  - {@link PlatformNotSupportedError} when current platform is not supported by CameraKit\n *  - {@link BootstrapError} when a failure occurs while initializing CameraKit and downloading the render engine\n * WebAssembly binary.\n *\n * @category Bootstrapping and Configuration\n */\nexport async function bootstrapCameraKit(\n    configuration: CameraKitBootstrapConfiguration,\n    provide?: (c: PublicContainer) => PublicContainer\n): Promise<CameraKit> {\n    console.info(\n        `Camera Kit SDK: ${environment.PACKAGE_VERSION} (${lensCoreWasm.version}/${lensCoreWasm.buildNumber})`\n    );\n\n    try {\n        const startTimeMs = performance.now();\n\n        assert(isSafeString(configuration.apiToken), configurationError(\"Invalid or unsafe apiToken provided.\"));\n\n        const configurationFactory = createCameraKitConfigurationFactory(configuration);\n\n        // Public container holds services which applications can overwrite with their own implementations.\n        const defaultPublicContainer = Container.provides(configurationFactory)\n            .provides(pageVisibilityFactory)\n            .provides(defaultFetchHandlerFactory)\n            .provides(remoteMediaAssetLoaderFactory)\n            .provides(lensSourcesFactory)\n            .provides(remoteApiServicesFactory)\n            .provides(uriHandlersFactory);\n\n        const publicContainer = provide ? provide(defaultPublicContainer) : defaultPublicContainer;\n\n        // Now that the client's provide() function has completed and the configuration override is ready,\n        // we create another container to initialize the logger. This ensures that logging is available\n        // as we continue bootstrapping. We don't initialize the logger as part of the defaultPublicContainer\n        // because we don't want applications to provide their own logger implementations,\n        // and we're not interested in errors thrown by their provide() function.\n        // Below is the minimum required container to report errors to Blizzard.\n        const telemetryContainer = Container.provides(publicContainer)\n            .provides(cameraKitServiceFetchHandlerFactory)\n            .provides(gprcHandlerFactory)\n            .provides(logEntriesFactory)\n            .run(registerLogEntriesSubscriber)\n            .provides(lensesClientFactory)\n            .provides(requestStateEventTargetFactory)\n            .provides(metricsEventTargetFactory)\n            .provides(metricsHandlerFactory)\n            .provides(operationalMetricReporterFactory)\n            .provides(reportGlobalException)\n            .provides(cofHandlerFactory)\n            .provides(remoteConfigurationFactory)\n            .provides(legalPromptFactory)\n            .provides(legalStateFactory)\n            // We'll run a PartialContainer containing reporters for globally-scoped metrics. Running this container\n            // allows each metric reporter to initialize itself (e.g. by adding event listeners to detect when certain\n            // actions occur). This PartialContainer also includes the service which listens to locally-reported metrics\n            // and sends them to our backend.\n            .run(reportGloballyScopedMetrics)\n            .run(businessEventsReporterFactory);\n\n        // Run the exception logger so that it can subscribe to log events -- we can't use `Container.run()` because\n        // reportGlobalException is also used as a dependency by other Services (and run does not provide Services,\n        // it just runs them once).\n        telemetryContainer.get(reportGlobalException.token);\n\n        // At this point, logger is configured to report to console and Blizzard.\n\n        await assertPlatformSupported();\n\n        // LensCore is a foundational component which must be created asynchronously.\n        // But it's annoying for every consumer of LensCore to have to wait on Promise<LensCore>\n        // (which means they become async themselves). So we'll create a DI container which provides Promise<LensCore>,\n        // wait for that promise once here, then create a new DI container that just contains LensCore.\n        const lensCore = await telemetryContainer.provides(lensCoreFactory).get(lensCoreFactory.token);\n\n        const container = telemetryContainer\n            .provides(Injectable(lensCoreFactory.token, () => lensCore))\n            .provides(cameraKitLensSourceFactory)\n            .provides(lensPersistenceStoreFactory)\n            .provides(deviceDependentAssetLoaderFactory)\n            .provides(staticAssetLoaderFactory)\n            .provides(lensAssetRepositoryFactory)\n            .provides(lensRepositoryFactory)\n            .provides(cameraKitFactory);\n\n        const cameraKit = container.get(cameraKitFactory.token);\n\n        const bootstrapTimeMs = performance.now() - startTimeMs;\n        const reporter = container.get(operationalMetricReporterFactory.token);\n        reporter.timer(\"bootstrap_time\", bootstrapTimeMs);\n\n        return cameraKit;\n    } catch (error) {\n        if (shouldWrapError(error)) {\n            error = bootstrapError(\"Error occurred during Camera Kit bootstrapping.\", error);\n        }\n        logger.error(error);\n        throw error;\n    }\n}\n\n/**\n * Extensions offer a way to provide custom implementations of certain parts of the CameraKit SDK.\n *\n * This enables more advanced use-cases, in which the default behavior of the SDK is substantially altered. For example,\n * replacing the default implementation that loads remote lens assets with a custom implementation that returns\n * different assets based on some business logic within the application.\n *\n * An extension is implemented as a [PartialContainer] – a collection of factory functions, each with its own\n * dependencies, which each provide some \"Service.\" A Service can be of any type, and the CameraKit SDK defines its\n * own Services, some of which can be overridden by providing a custom implementation of the type via an extension.\n *\n * Here's an example of how extensions might be used:\n * ```ts\n * import { bootstrapCameraKit, createExtension, remoteMediaAssetLoaderFactory } from '@snap/camera-kit'\n *\n * const myCustomRemoteAssetLoader = Injectable(\n *   remoteMediaAssetLoaderFactory.token,\n *   [remoteMediaAssetLoaderFactory.token] as const,\n *   (defaultLoader: AssetLoader): AssetLoader => {\n *     return async (asset, lens) => {\n *       if (lens?.id === MY_SPECIAL_LENS) {\n *         return (await fetch('my/asset.glb')).arrayBuffer()\n *       }\n *       return defaultLoader(asset, lens)\n *     }\n *   },\n * )\n *\n * const myExtension = createExtension().provides(myCustomeRemoteAssetLoader)\n * const cameraKit = bootstrapCameraKit(config, container => container.provides(myExtension))\n * ```\n *\n * This also enables greater modularity – the person/team creating the extension can do so in their own package, which\n * could be shared by many applications that all require the same functionality.\n *\n * @returns A {@link PartialContainer} which can be used to create a collection of Services, and can later be provided\n * to CameraKit's DI container during {@link bootstrapCameraKit}.\n *\n * @category Bootstrapping and Configuration\n */\nexport function createExtension(): PartialContainer {\n    return new PartialContainer({});\n}\n","import { getCameraKitUserAgent } from \"../platform/cameraKitUserAgent\";\nimport { ExtensionRequestContext } from \"../generated-proto/pb_schema/camera_kit/v3/export\";\nimport { getPlatformInfo } from \"../platform/platformInfo\";\n\nfunction getExtensionRequestContext(): ArrayBuffer {\n    return ExtensionRequestContext.encode({\n        userAgent: getCameraKitUserAgent(),\n        locale: getPlatformInfo().fullLocale,\n    }).finish();\n}\n\n/**\n * Extension request context.\n */\nexport const extensionRequestContext = getExtensionRequestContext();\n","import { LensCore } from \"../lens-core-module\";\nimport { CameraKitSource, CameraKitSourceOptions, CameraKitSourceSubscriber } from \"./CameraKitSource\";\n\nconst getYUVImageData = async (canvas: HTMLCanvasElement, lensCore: LensCore): Promise<ImageData> => {\n    const { width, height } = canvas;\n    // A YUV buffer has lower-res UV channels, so the total number of bytes works out like so:\n    const outputBuffer = new ArrayBuffer((width * height * 3) / 2);\n    await lensCore.imageToYuvBuffer({ image: canvas, width, height, outputBuffer });\n    const pixels = new Uint8ClampedArray(outputBuffer);\n    return new ImageData(pixels, width, height);\n};\n\nconst getRGBImageData = (output: HTMLCanvasElement, imageReader2D: CanvasRenderingContext2D | null): ImageData => {\n    if (imageReader2D === null) return new ImageData(0, 0);\n    imageReader2D.drawImage(output, 0, 0);\n    return imageReader2D.getImageData(0, 0, output.width, output.height);\n};\n\nconst getImageBitmap = async (imageData: ImageData, format: FrameFormat): Promise<ImageBitmap> => {\n    switch (format) {\n        case \"nv12\":\n        case \"yuv\":\n            if (!window.VideoFrame)\n                return Promise.reject(\n                    new Error(`Cannot process frame. ImageData in ${format} is not supported by this browser.`)\n                );\n            const frame = new VideoFrame(imageData.data.buffer, {\n                format: \"NV12\",\n                codedWidth: imageData.width,\n                codedHeight: imageData.height,\n                timestamp: 0,\n            });\n            return createImageBitmap(frame);\n        case \"rgb\":\n            return createImageBitmap(imageData);\n    }\n};\n\n/** @internal */\nexport type FrameFormat = \"rgb\" | \"yuv\" | \"nv12\";\n\n/** @internal */\nexport interface FrameInput {\n    format?: FrameFormat;\n    imageData: ImageData;\n    timestampMillis: number;\n}\n\n/** @internal */\nexport interface FrameOutput {\n    live: ImageData;\n    capture: ImageData;\n}\n\n/** @internal */\nexport interface MediaSourceFunction {\n    (render: (frame: FrameInput) => Promise<FrameOutput>): Promise<void>;\n}\n\n/**\n * Creates a {@link CameraKitSource} from a function which provides per-frame pixel data to CameraKit.\n *\n * @param sourceFunction This function will be called in a requestAnimationFrame loop. Each time it is called, it is\n * passed a `render` function. It may call `render` and CameraKit will process the pixel data passed to `render` and\n * return a Promise of the processed pixels (along with rendering them to the normal output canvases).\n * @param options\n * @param options.cameraType By default we set this to 'user', which is the camera type most Lenses expect.\n *\n * @internal\n */\nexport const createFunctionSource = (\n    sourceFunction: MediaSourceFunction,\n    options: Omit<CameraKitSourceOptions, \"fpsLimit\"> = {}\n): CameraKitSource => {\n    let width = 0;\n    let height = 0;\n    let shouldProcessFrame = true;\n\n    // We require an auxiliary canvas that we can use to read back pixel data (unless we're in YUV mode, in which case\n    // we use LensCore to convert between formats and we don't need this canvas).\n    const imageReaderCanvas = document.createElement(\"canvas\");\n    const imageReader2D = imageReaderCanvas.getContext(\"2d\");\n\n    const subscriber: CameraKitSourceSubscriber = {\n        onAttach: (source, lensCore, reportError) => {\n            const outputs = lensCore.getOutputCanvases();\n            const output = {\n                live: outputs[lensCore.CanvasType.Preview.value],\n                capture: outputs[lensCore.CanvasType.Capture.value],\n            };\n\n            const processFrame = (source: CameraKitSource, lensCore: LensCore, reportError: (error: Error) => void) =>\n                requestAnimationFrame(async () => {\n                    if (!shouldProcessFrame) return;\n                    try {\n                        await sourceFunction(({ format, imageData, timestampMillis }) => {\n                            // TODO: with processFrame promisified, we don't really need to create a wrapper promise\n                            const frameOutput = new Promise<FrameOutput>(async (resolve, reject) => {\n                                const inputFrame = await getImageBitmap(imageData, format ?? \"rgb\");\n                                if (inputFrame.width !== width || inputFrame.height !== height) {\n                                    width = imageReaderCanvas.width = inputFrame.width;\n                                    height = imageReaderCanvas.height = inputFrame.height;\n                                    // We don't await this promise, because we want to continue to process frames and\n                                    // let LensCore manage the concurrency between setting resolution and processing a\n                                    // frame.\n                                    source.setRenderSize(width, height);\n                                }\n                                lensCore\n                                    .processFrame({ inputFrame, timestampMillis })\n                                    .then(async () => {\n                                        // Closing releases graphics resources associated with the frame, now that is\n                                        // has been processed.\n                                        inputFrame.close();\n\n                                        switch (format ?? \"rgb\") {\n                                            case \"nv12\":\n                                            case \"yuv\":\n                                                const [live, capture] = await Promise.all([\n                                                    getYUVImageData(output.live, lensCore),\n                                                    getYUVImageData(output.capture, lensCore),\n                                                ]).catch((error) => {\n                                                    reject(error);\n                                                    return [undefined, undefined] as const;\n                                                });\n                                                // if either of these is undefined, we'll have already rejected\n                                                // the promise, so we can return.\n                                                if (!live || !capture) return;\n                                                return resolve({ live, capture });\n                                            case \"rgb\":\n                                                return resolve({\n                                                    live: getRGBImageData(output.live, imageReader2D),\n                                                    capture: getRGBImageData(output.capture, imageReader2D),\n                                                });\n                                        }\n                                    })\n                                    .catch((error) => {\n                                        inputFrame.close();\n                                        reject(error);\n                                    });\n                            });\n                            // Even if there's an error processing the frame, we do want to attempt to process the next\n                            // frame. We expect `sourceFunction` to handle a rejected `frameOutput` Promise.\n                            frameOutput.finally(() => processFrame(source, lensCore, reportError));\n                            return frameOutput;\n                        });\n                    } catch (error) {\n                        reportError(\n                            new Error(\n                                \"Failure to process frame, which was not handled by the provided \" +\n                                    `MediaSourceFunction ${sourceFunction.name ?? \"anonymous\"}.`,\n                                { cause: error }\n                            )\n                        );\n                    }\n                });\n            processFrame(source, lensCore, reportError);\n        },\n        onDetach: () => {\n            shouldProcessFrame = false;\n        },\n    };\n\n    return new CameraKitSource({ useManualFrameProcessing: true }, subscriber, options);\n};\n","import { CameraKitSource, CameraKitSourceOptions } from \"./CameraKitSource\";\n\n/**\n * Create a {@link CameraKitSource} from an\n * [HTMLImageElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement).\n *\n * @param image Image element.\n * @param options\n * @param options.cameraType By default we set this to 'user', which is the camera type most Lenses expect.\n * @param options.fpsLimit By default we set no limit on FPS.\n *\n * @category Rendering\n */\nexport function createImageSource(image: HTMLImageElement, options: CameraKitSourceOptions = {}): CameraKitSource {\n    return new CameraKitSource(\n        {\n            media: image,\n        },\n        {},\n        options\n    );\n}\n","export { Keyboard, KeyboardEvents } from \"./session/LensKeyboard\";\nexport { CameraKitConfiguration, CameraKitBootstrapConfiguration, configurationToken } from \"./configuration\";\nexport { getRequiredBootstrapURLs } from \"./lens-core-module/loader/lensCoreFactory\";\nexport {\n    estimateLensPerformance,\n    EstimatedLensPerformance,\n    LensPerformanceCluster,\n} from \"./benchmark/estimateLensPerformanceCluster\";\nexport * from \"./bootstrapCameraKit\";\nexport { extensionRequestContext } from \"./extensions/extensionRequestContext\";\nexport { LensSource, lensSourcesFactory } from \"./lens/LensSource\";\nexport {\n    Uri,\n    UriRequest,\n    UriResponse,\n    UriCancelRequest,\n    UriHandler,\n    UriHandlers,\n    uriHandlersFactory,\n} from \"./extensions/UriHandlers\";\nexport {\n    RemoteApiStatus,\n    RemoteApiRequest,\n    RemoteApiRequestHandler,\n    RemoteApiResponse,\n    RemoteApiService,\n    RemoteApiServices,\n    remoteApiServicesFactory,\n} from \"./extensions/RemoteApiServices\";\nexport { CameraKit, CreateSessionOptions, LensMetricsEvents } from \"./CameraKit\";\nexport { LensView } from \"./metrics/reporters/reportLensView\";\nexport { LensWait } from \"./metrics/reporters/reportLensWait\";\nexport { getCameraKitUserAgent } from \"./platform/cameraKitUserAgent\";\nexport { getPlatformInfo, PlatformInfo } from \"./platform/platformInfo\";\nexport { Lens, toPublicLens, Snapcode, Preview } from \"./lens/Lens\";\nexport { AssetTiming, LensRepository } from \"./lens/LensRepository\";\nexport { LensLaunchData } from \"./lens/LensLaunchData\";\nexport { AssetLoader } from \"./lens/assets/LensAssetRepository\";\nexport { remoteMediaAssetLoaderFactory } from \"./lens/assets/remoteMediaAssetLoaderFactory\";\nexport * from \"./media-sources/CameraKitSource\";\nexport * from \"./media-sources/MediaStreamSource\";\nexport * from \"./media-sources/FunctionSource\";\nexport * from \"./media-sources/VideoSource\";\nexport * from \"./media-sources/ImageSource\";\nexport * from \"./session/CameraKitSession\";\nexport { CameraKitSessionEvents, CameraKitSessionEventListener } from \"./session/CameraKitSessionEvents\";\nexport { Injectable, ConcatInjectable } from \"./dependency-injection/Injectable\";\nexport { PartialContainer } from \"./dependency-injection/PartialContainer\";\nexport * from \"./transforms\";\nexport * from \"./namedErrors\";\nexport { LensPerformanceMeasurement, ComputedFrameMetrics } from \"./session/LensPerformanceMeasurement\";\nexport { LensPerformanceMetrics } from \"./session/LensPerformanceMetrics\";\nexport { TypedCustomEvent } from \"./events/TypedCustomEvent\";\nexport { TypedEventTarget } from \"./events/TypedEventTarget\";\nexport { namedError } from \"./namedErrors\";\nexport { Any } from \"./generated-proto/pb_schema/google/protobuf/any\";\n","import { bootstrapCameraKit } from '@snap/camera-kit';\n\n(async function () {\n  const cameraKit = await bootstrapCameraKit({\n    apiToken: 'eyJhbGciOiJIUzI1NiIsImtpZCI6IkNhbnZhc1MyU0hNQUNQcm9kIiwidHlwIjoiSldUIn0.eyJhdWQiOiJjYW52YXMtY2FudmFzYXBpIiwiaXNzIjoiY2FudmFzLXMyc3Rva2VuIiwibmJmIjoxNzEwOTQ4MDYwLCJzdWIiOiIyYjdiODEzNC01ZTNjLTQyN2QtYmMyMi1iMjc0OGY3Njc1ZTN-U1RBR0lOR34wMjk0NDc5MS0wYTJhLTRkNDktOWU4Zi01YjFhZThjZDJiMzcifQ.49WSmXKmerSgR2dsx_oIUqtN4YivwufekH2tMvHMd-A',\n  });\n  const liveRenderTarget = document.getElementById(\n    'canvas'\n  ) as HTMLCanvasElement;\n  const session = await cameraKit.createSession({ liveRenderTarget });\n  const mediaStream = await navigator.mediaDevices.getUserMedia({\n    video: true,\n  });\n\n  await session.setSource(mediaStream);\n  await session.play();\n\n  const lens = await cameraKit.lensRepository.loadLens(\n    '43281170875',\n    '2e94689a-c9a3-441e-96c4-4489ca48d411'\n  );\n\n  await session.applyLens(lens);\n})();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}